
yktcansat-staging.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a8  00800100  0000613e  000061d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000613e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002f7  008001a8  008001a8  0000627a  2**0
                  ALLOC
  3 .noinit       00000001  0080049f  0080049f  0000627a  2**0
                  ALLOC
  4 .comment      0000005c  00000000  00000000  0000627a  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000062d8  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000578  00000000  00000000  00006314  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000600f  00000000  00000000  0000688c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000207b  00000000  00000000  0000c89b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000081eb  00000000  00000000  0000e916  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00001798  00000000  00000000  00016b04  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000d5f2  00000000  00000000  0001829c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00006a33  00000000  00000000  0002588e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000004f0  00000000  00000000  0002c2c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_macro  000022b9  00000000  00000000  0002c7b1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 47 0e 	jmp	0x1c8e	; 0x1c8e <__ctors_end>
       4:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
       8:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
       c:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      10:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      14:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      18:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      1c:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      20:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      24:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      28:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      2c:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      30:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      34:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      38:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      3c:	0c 94 b5 21 	jmp	0x436a	; 0x436a <__vector_15>
      40:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      44:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      48:	0c 94 c7 1c 	jmp	0x398e	; 0x398e <__vector_18>
      4c:	0c 94 f4 14 	jmp	0x29e8	; 0x29e8 <__vector_19>
      50:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      54:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      58:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      5c:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      60:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      64:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      68:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      6c:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      70:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      74:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      78:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      7c:	0c 94 44 15 	jmp	0x2a88	; 0x2a88 <__vector_31>
      80:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      84:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>
      88:	0c 94 72 0e 	jmp	0x1ce4	; 0x1ce4 <__bad_interrupt>

0000008c <__trampolines_end>:
      8c:	6e 61       	ori	r22, 0x1E	; 30
      8e:	6e 00       	.word	0x006e	; ????

00000090 <__c.2332>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__c.2474>:
     18e:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

0000019a <__c.2673>:
     19a:	73 70 69 64 3a 20 6f 70 65 72 61 74 69 6f 6e 20     spid: operation 
     1aa:	74 69 6d 65 6f 75 74 0d 0a 00                       timeout...

000001b4 <__c.2665>:
     1b4:	73 70 69 64 3a 20 6f 70 65 72 61 74 69 6f 6e 20     spid: operation 
     1c4:	74 69 6d 65 6f 75 74 0d 0a 00                       timeout...

000001ce <__c.2630>:
     1ce:	73 70 69 64 3a 20 6f 70 65 72 61 74 69 6f 6e 20     spid: operation 
     1de:	74 69 6d 65 6f 75 74 0d 0a 00                       timeout...

000001e8 <__c.2625>:
     1e8:	73 70 69 64 3a 20 6f 70 65 72 61 74 69 6f 6e 20     spid: operation 
     1f8:	74 69 6d 65 6f 75 74 0d 0a 00                       timeout...

00000202 <__c.2614>:
     202:	73 70 69 64 3a 20 6f 70 65 72 61 74 69 6f 6e 20     spid: operation 
     212:	74 69 6d 65 6f 75 74 0d 0a 00                       timeout...

0000021c <__c.2609>:
     21c:	73 70 69 64 3a 20 6f 70 65 72 61 74 69 6f 6e 20     spid: operation 
     22c:	74 69 6d 65 6f 75 74 0d 0a 00                       timeout...

00000236 <__c.2614>:
     236:	0d 0a 72 6f 6f 74 40 63 61 6e 73 61 74 3a 3c 20     ..root@cansat:< 
	...

00000247 <__c.2612>:
     247:	63 6c 69 3a 20 43 6f 6d 6d 61 6e 64 20 6e 6f 74     cli: Command not
     257:	20 66 6f 75 6e 64 0d 0a 00                           found...

00000260 <__c.2607>:
     260:	0d 0a 72 6f 6f 74 40 63 61 6e 73 61 74 3a 3c 20     ..root@cansat:< 
	...

00000271 <__c.2604>:
     271:	0d 0a 00                                            ...

00000274 <__c.2602>:
     274:	0d 0a 72 6f 6f 74 40 63 61 6e 73 61 74 3a 3c 20     ..root@cansat:< 
	...

00000285 <__c.2600>:
     285:	63 6c 69 3a 20 45 6e 74 65 72 20 61 20 63 6f 6d     cli: Enter a com
     295:	6d 61 6e 64 0d 0a 00                                mand...

0000029c <__c.2666>:
     29c:	63 6c 69 3a 20 4d 69 73 68 61 6e 64 6c 65 64 20     cli: Mishandled 
     2ac:	61 72 67 75 6d 65 6e 74 0d 0a 00                    argument...

000002b7 <__c.2663>:
     2b7:	63 6c 69 3a 20 73 75 63 63 65 73 73 0d 0a 00        cli: success...

000002c6 <__c.2661>:
     2c6:	63 6c 69 3a 20 27 2d 63 27 20 73 70 65 63 69 66     cli: '-c' specif
     2d6:	69 65 64 2c 20 65 78 65 63 75 74 69 6e 67 20 43     ied, executing C
     2e6:	20 73 75 62 72 6f 75 74 69 6e 65 0d 0a 00            subroutine...

000002f4 <__c.2658>:
     2f4:	63 6c 69 3a 20 73 75 63 63 65 73 73 0d 0a 00        cli: success...

00000303 <__c.2656>:
     303:	63 6c 69 3a 20 27 2d 62 27 20 73 70 65 63 69 66     cli: '-b' specif
     313:	69 65 64 2c 20 65 78 65 63 75 74 69 6e 67 20 42     ied, executing B
     323:	20 73 75 62 72 6f 75 74 69 6e 65 0d 0a 00            subroutine...

00000331 <__c.2652>:
     331:	63 6c 69 3a 20 45 72 72 6f 72 3a 20 6e 6f 20 61     cli: Error: no a
     341:	72 67 75 6d 65 6e 74 20 76 61 6c 75 65 20 73 70     rgument value sp
     351:	65 63 69 66 69 65 64 0d 0a 00                       ecified...

0000035b <__c.2650>:
     35b:	63 6c 69 3a 20 73 75 63 63 65 73 73 0d 0a 00        cli: success...

0000036a <__c.2648>:
     36a:	63 6c 69 3a 20 56 61 72 69 61 62 6c 65 20 41 20     cli: Variable A 
     37a:	68 61 73 20 62 65 65 6e 20 73 65 74 20 74 6f 20     has been set to 
     38a:	25 64 0d 0a 00                                      %d...

0000038f <__c.2646>:
     38f:	63 6c 69 3a 20 50 61 72 73 65 64 20 61 72 67 75     cli: Parsed argu
     39f:	6d 65 6e 74 3a 20 25 64 0d 0a 00                    ment: %d...

000003aa <__c.2644>:
     3aa:	63 6c 69 3a 20 52 65 63 65 69 76 65 64 20 61 72     cli: Received ar
     3ba:	67 75 6d 65 6e 74 3a 20 25 73 0d 0a 00              gument: %s...

000003c7 <__c.2642>:
     3c7:	63 6c 69 3a 20 27 2d 61 27 20 73 70 65 63 69 66     cli: '-a' specif
     3d7:	69 65 64 2c 20 63 68 61 6e 67 69 6e 67 20 76 61     ied, changing va
     3e7:	72 69 61 62 6c 65 20 41 0d 0a 00                    riable A...

000003f2 <__c.2639>:
     3f2:	63 6c 69 3a 20 55 6e 6b 6e 6f 77 6e 20 61 72 67     cli: Unknown arg
     402:	75 6d 65 6e 74 3a 20 25 73 0d 0a 00                 ument: %s...

0000040e <__c.2697>:
     40e:	63 6c 69 3a 20 4d 69 73 68 61 6e 64 6c 65 64 20     cli: Mishandled 
     41e:	61 72 67 75 6d 65 6e 74 0d 0a 00                    argument...

00000429 <__c.2694>:
     429:	63 6c 69 3a 20 44 69 73 61 62 6c 69 6e 67 20 64     cli: Disabling d
     439:	65 62 75 67 20 6f 75 74 70 75 74 0d 0a 00           ebug output...

00000447 <__c.2692>:
     447:	63 6c 69 3a 20 45 6e 61 62 6c 69 6e 67 20 76 65     cli: Enabling ve
     457:	72 62 6f 73 65 20 6f 75 74 70 75 74 0d 0a 00        rbose output...

00000466 <__c.2688>:
     466:	63 6c 69 3a 20 45 72 72 6f 72 3a 20 6e 6f 20 61     cli: Error: no a
     476:	72 67 75 6d 65 6e 74 20 76 61 6c 75 65 20 73 70     rgument value sp
     486:	65 63 69 66 69 65 64 0d 0a 00                       ecified...

00000490 <__c.2686>:
     490:	63 6c 69 3a 20 55 6e 6b 6e 6f 77 6e 20 61 72 67     cli: Unknown arg
     4a0:	75 6d 65 6e 74 20 76 61 6c 75 65 2c 20 73 68 6f     ument value, sho
     4b0:	75 6c 64 20 62 65 20 65 69 74 68 65 72 20 27 6f     uld be either 'o
     4c0:	6e 27 20 6f 72 20 27 6f 66 66 27 0d 0a 00           n' or 'off'...

000004ce <__c.2684>:
     4ce:	63 6c 69 3a 20 44 69 73 61 62 6c 69 6e 67 20 64     cli: Disabling d
     4de:	65 62 75 67 20 6f 75 74 70 75 74 0d 0a 00           ebug output...

000004ec <__c.2682>:
     4ec:	63 6c 69 3a 20 45 6e 61 62 6c 69 6e 67 20 64 65     cli: Enabling de
     4fc:	62 75 67 20 6f 75 74 70 75 74 0d 0a 00              bug output...

00000509 <__c.2679>:
     509:	63 6c 69 3a 20 55 6e 6b 6e 6f 77 6e 20 61 72 67     cli: Unknown arg
     519:	75 6d 65 6e 74 3a 20 25 73 0d 0a 00                 ument: %s...

00000525 <__c.2704>:
     525:	52 65 62 6f 6f 74 20 63 6f 6d 6d 61 6e 64 0d 0a     Reboot command..
	...

00000536 <__c.2710>:
     536:	0c 00                                               ..

00000538 <__c.2766>:
     538:	20 20 46 61 74 46 53 3a 20 50 65 74 69 74 20 46       FatFS: Petit F
     548:	61 74 46 53 20 76 65 72 73 69 6f 6e 20 52 30 2e     atFS version R0.
     558:	30 32 0d 0a 00                                      02...

0000055d <__c.2764>:
     55d:	20 20 48 41 4c 3a 20 43 61 6e 53 61 74 48 41 4c       HAL: CanSatHAL
     56d:	20 76 65 72 73 69 6f 6e 20 25 73 20 62 75 69 6c      version %s buil
     57d:	74 20 25 73 0d 0a 00                                t %s...

00000584 <__c.2762>:
     584:	20 20 4b 65 72 6e 65 6c 3a 20 43 61 6e 53 61 74       Kernel: CanSat
     594:	4b 65 72 6e 65 6c 20 76 65 72 73 69 6f 6e 20 25     Kernel version %
     5a4:	73 20 62 75 69 6c 74 20 25 73 0d 0a 00              s built %s...

000005b1 <__c.2760>:
     5b1:	53 6f 66 74 77 61 72 65 3a 0d 0a 00                 Software:...

000005bd <__c.2758>:
     5bd:	20 20 50 65 72 69 70 68 65 72 61 6c 73 3a 20 47       Peripherals: G
     5cd:	50 49 4f 2c 20 31 20 78 20 53 50 49 2c 20 32 20     PIO, 1 x SPI, 2 
     5dd:	78 20 55 41 52 54 2c 20 31 20 78 20 54 57 49 2c     x UART, 1 x TWI,
     5ed:	20 38 63 20 41 44 43 2c 20 4a 54 41 47 2c 20 45      8c ADC, JTAG, E
     5fd:	4d 49 0d 0a 00                                      MI...

00000602 <__c.2756>:
     602:	20 20 46 6c 61 73 68 3a 20 36 34 4b 20 78 20 31       Flash: 64K x 1
     612:	36 20 28 31 32 38 20 4b 42 29 0d 0a 00              6 (128 KB)...

0000061f <__c.2754>:
     61f:	20 20 45 45 50 52 4f 4d 3a 20 31 4b 20 78 20 33       EEPROM: 1K x 3
     62f:	32 20 28 34 20 4b 42 29 0d 0a 00                    2 (4 KB)...

0000063a <__c.2752>:
     63a:	20 20 53 52 41 4d 3a 20 34 4b 20 78 20 38 20 28       SRAM: 4K x 8 (
     64a:	34 20 4b 42 29 0d 0a 00                             4 KB)...

00000652 <__c.2750>:
     652:	20 20 46 72 65 71 75 65 6e 63 79 3a 20 25 64 20       Frequency: %d 
     662:	4d 48 7a 0d 0a 00                                   MHz...

00000668 <__c.2748>:
     668:	20 20 4d 43 55 3a 20 41 56 52 20 41 54 6d 65 67       MCU: AVR ATmeg
     678:	61 31 32 38 2c 20 64 65 76 69 63 65 20 73 69 67     a128, device sig
     688:	6e 61 74 75 72 65 3a 20 30 78 31 45 39 37 30 32     nature: 0x1E9702
     698:	0d 0a 00                                            ...

0000069b <__c.2746>:
     69b:	44 65 76 69 63 65 20 69 6e 66 6f 72 6d 61 74 69     Device informati
     6ab:	6f 6e 3a 0d 0a 00                                   on:...

000006b1 <__c.2742>:
     6b1:	20 20 73 79 73 69 6e 66 6f 20 2d 20 64 69 73 70       sysinfo - disp
     6c1:	6c 61 79 73 20 73 79 73 74 65 6d 20 69 6e 66 6f     lays system info
     6d1:	72 6d 61 74 69 6f 6e 2e 0d 0a 00                    rmation....

000006dc <__c.2740>:
     6dc:	20 20 64 61 74 65 74 69 6d 65 20 2d 20 64 69 73       datetime - dis
     6ec:	70 6c 61 79 73 20 47 50 53 20 64 61 74 65 20 61     plays GPS date a
     6fc:	6e 64 20 74 69 6d 65 20 28 55 54 43 29 2e 0d 0a     nd time (UTC)...
	...

0000070d <__c.2738>:
     70d:	20 20 72 65 62 6f 6f 74 20 2d 20 72 65 62 6f 6f       reboot - reboo
     71d:	74 73 20 74 68 65 20 64 65 76 69 63 65 2e 0d 0a     ts the device...
	...

0000072e <__c.2736>:
     72e:	20 20 63 6c 65 61 72 20 2d 20 63 6c 65 61 72 73       clear - clears
     73e:	20 73 63 72 65 65 6e 2e 0d 0a 00                     screen....

00000749 <__c.2734>:
     749:	20 20 63 6f 6e 66 69 67 20 5b 2d 61 20 3c 6e 3e       config [-a <n>
     759:	5d 20 5b 2d 62 5d 20 5b 2d 63 5d 20 2d 20 63 6f     ] [-b] [-c] - co
     769:	6e 66 69 67 75 72 61 74 69 6f 6e 20 74 6f 6f 6c     nfiguration tool
     779:	2e 20 52 75 6e 20 27 63 6f 6e 66 69 67 20 2d 68     . Run 'config -h
     789:	27 20 66 6f 72 20 6d 6f 72 65 20 64 65 74 61 69     ' for more detai
     799:	6c 73 2e 0d 0a 00                                   ls....

0000079f <__c.2732>:
     79f:	41 76 61 69 6c 61 62 6c 65 20 63 6f 6d 6d 61 6e     Available comman
     7af:	64 73 3a 0d 0a 00                                   ds:...

000007b5 <__c.2904>:
     7b5:	0d 0a 72 6f 6f 74 40 63 61 6e 73 61 74 3a 3c 20     ..root@cansat:< 
	...

000007c6 <__c.2902>:
     7c6:	2b 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     +---------------
     7d6:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     7e6:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     7f6:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     806:	2d 2d 2b 0d 0a 00                                   --+...

0000080c <__c.2900>:
     80c:	7c 20 20 52 75 6e 20 27 63 6f 6e 66 69 67 27 20     |  Run 'config' 
     81c:	74 6f 20 63 68 61 6e 67 65 20 74 68 65 20 64 65     to change the de
     82c:	76 69 63 65 27 73 20 73 65 74 74 69 6e 67 73 2e     vice's settings.
     83c:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     84c:	20 20 7c 0d 0a 00                                     |...

00000852 <__c.2898>:
     852:	7c 20 20 52 75 6e 20 27 68 65 6c 70 27 20 74 6f     |  Run 'help' to
     862:	20 73 65 65 20 74 68 65 20 6c 69 73 74 20 6f 66      see the list of
     872:	20 61 76 61 69 6c 61 62 6c 65 20 63 6f 6d 6d 61      available comma
     882:	6e 64 73 2e 20 20 20 20 20 20 20 20 20 20 20 20     nds.            
     892:	20 20 7c 0d 0a 00                                     |...

00000898 <__c.2896>:
     898:	7c 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20     |               
     8a8:	20 20 20 20 20 20 20 20 43 61 6e 53 61 74 20 73             CanSat s
     8b8:	68 65 6c 6c 20 76 30 2e 30 2e 31 20 20 20 20 20     hell v0.0.1     
     8c8:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     8d8:	20 20 7c 0d 0a 00                                     |...

000008de <__c.2894>:
     8de:	2b 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     +---------------
     8ee:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     8fe:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     90e:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
     91e:	2d 2d 2b 0d 0a 00                                   --+...

00000924 <__c.2892>:
     924:	0c 00                                               ..

00000926 <__c.2890>:
     926:	49 6e 69 74 69 61 6c 69 7a 69 6e 67 20 73 68 65     Initializing she
     936:	6c 6c 2e 2e 2e 0d 0a 0d 0a 00                       ll........

00000940 <__c.2888>:
     940:	0c 00                                               ..

00000942 <__c.2884>:
     942:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     952:	20 20 20 20 20 20 20 20 20 4d 4d 4d 2e 20 20 20              MMM.   
     962:	0d 0a 00                                            ...

00000965 <__c.2882>:
     965:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     975:	20 20 20 20 20 20 20 20 20 4d 4d 4d 4d 4d 3f 20              MMMMM? 
     985:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     995:	20 20 20 20 20 20 20 20 20 20 20 20 20 0d 0a 00                  ...

000009a5 <__c.2880>:
     9a5:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     9b5:	20 20 20 20 20 20 20 2e 4d 4d 44 20 20 4d 4d 4d            .MMD  MMM
     9c5:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     9d5:	20 20 20 20 20 20 20 20 20 20 20 20 20 0d 0a 00                  ...

000009e5 <__c.2878>:
     9e5:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     9f5:	20 20 20 20 20 20 2e 4d 4d 4d 20 20 20 20 4d 4d           .MMM    MM
     a05:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     a15:	20 20 20 20 20 20 20 20 20 20 20 20 20 0d 0a 00                  ...

00000a25 <__c.2876>:
     a25:	20 20 20 20 20 2e 20 20 20 20 20 20 20 20 20 20          .          
     a35:	20 20 20 20 20 20 20 4d 4d 4d 20 20 20 20 20 20            MMM      
     a45:	4d 4d 20 20 20 20 20 20 20 20 20 20 20 20 20 20     MM              
     a55:	20 20 20 20 20 20 20 20 20 20 20 20 20 0d 0a 00                  ...

00000a65 <__c.2874>:
     a65:	20 20 20 20 4d 4d 4d 4d 20 20 20 20 20 20 20 20         MMMM        
     a75:	20 20 20 20 20 20 4f 4d 4d 20 20 20 20 20 20 20           OMM       
     a85:	2e 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20 20     .MM             
     a95:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 0d 0a                   ..
	...

00000aa6 <__c.2872>:
     aa6:	20 20 2e 4d 20 20 2e 4d 4d 37 20 20 20 20 20 20       .M  .MM7      
     ab6:	20 20 20 20 20 20 4d 4d 4d 20 4d 4d 4d 4d 20 20           MMM MMMM  
     ac6:	20 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20 20      MM             
     ad6:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 0d 0a                   ..
	...

00000ae7 <__c.2870>:
     ae7:	20 20 4d 3f 20 20 20 20 4e 4d 4d 20 20 20 20 20       M?    NMM     
     af7:	20 20 20 20 20 20 4d 4d 4d 4d 4d 4d 4d 4d 4d 20           MMMMMMMMM 
     b07:	20 20 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20       MM            
     b17:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     b27:	0d 0a 00                                            ...

00000b2a <__c.2868>:
     b2a:	20 20 4d 4d 20 20 20 20 20 20 2e 4d 4d 4e 20 20       MM      .MMN  
     b3a:	20 20 20 20 20 20 20 20 2e 2e 20 2e 20 2b 4d 4d             .. . +MM
     b4a:	2c 20 20 38 4d 4d 20 2e 4d 4d 4d 4d 4d 4d 4d 4d     ,  8MM .MMMMMMMM
     b5a:	2e 20 20 20 20 20 20 20 20 20 20 20 20 20 20 0d     .              .
     b6a:	0a 00                                               ..

00000b6c <__c.2866>:
     b6c:	20 20 4d 2e 20 20 20 4d 4d 4d 20 20 20 4d 4d 20       M.   MMM   MM 
     b7c:	20 20 20 20 20 20 20 20 20 20 20 20 20 4d 4d 4d                  MMM
     b8c:	4d 4d 20 20 4d 4d 4d 4d 4d 4d 4d 4d 4d 7e 4d 4d     MM  MMMMMMMMM~MM
     b9c:	4d 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20     MMMM            
     bac:	0d 0a 00                                            ...

00000baf <__c.2864>:
     baf:	20 4d 4d 20 20 20 4d 4d 24 4d 4d 20 20 20 4d 4d      MM   MM$MM   MM
     bbf:	4e 20 20 20 20 20 20 4d 4d 4d 4d 4d 4d 4d 4d 4d     N      MMMMMMMMM
     bcf:	4d 2e 20 20 20 20 20 20 20 20 20 20 4d 2e 20 20     M.          M.  
     bdf:	20 2e 4d 4d 4d 4d 20 20 20 20 20 20 20 20 20 20      .MMMM          
     bef:	20 0d 0a 00                                          ...

00000bf3 <__c.2862>:
     bf3:	20 4d 4d 20 4d 4d 4e 20 20 2e 4d 4d 20 20 20 20      MM MMN  .MM    
     c03:	4d 4d 20 4d 4d 4d 4d 4d 4d 4d 4d 7e 20 2e 20 20     MM MMMMMMMM~ .  
     c13:	20 20 20 20 20 20 20 20 20 20 20 20 4d 2e 20 20                 M.  
     c23:	20 20 20 2e 4d 4d 4d 4d 20 20 20 20 20 20 20 20        .MMMM        
     c33:	20 20 0d 0a 00                                        ...

00000c38 <__c.2860>:
     c38:	20 4d 4d 4d 4d 20 20 20 20 20 20 4d 4d 4e 20 20      MMMM      MMN  
     c48:	2e 4d 4d 4d 4d 4d 20 20 20 20 20 20 20 20 20 20     .MMMMM          
     c58:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     c68:	20 20 20 20 20 2e 4d 4d 4d 44 20 20 20 20 20 20          .MMMD      
     c78:	20 20 20 20 20 0d 0a 00                                  ...

00000c80 <__c.2858>:
     c80:	2e 20 20 20 20 20 20 20 20 20 20 4d 4d 4d 4d 4d     .          MMMMM
     c90:	4d 4d 2e 20 20 20 20 20 20 20 20 20 20 20 20 20     MM.             
     ca0:	20 20 20 20 20 20 20 20 4d 4d 4d 20 20 20 20 20             MMM     
     cb0:	20 20 20 20 20 20 20 4d 4d 4d 20 4d 4d 4d 4d 4d            MMM MMMMM
     cc0:	4d 2e 20 20 20 20 0d 0a 00                          M.    ...

00000cc9 <__c.2856>:
     cc9:	20 20 20 20 20 20 20 20 20 4d 4d 4d 4d 20 20 20              MMMM   
     cd9:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     ce9:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     cf9:	20 20 20 20 20 20 4d 4d 4d 4d 4d 2c 2e 20 4d 4d           MMMMM,. MM
     d09:	4d 20 20 20 20 20 0d 0a 00                          M     ...

00000d12 <__c.2854>:
     d12:	20 20 20 20 20 20 20 4d 4d 4d 4d 2e 20 20 20 20            MMMM.    
     d22:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     d32:	20 20 20 20 20 20 4d 4d 20 20 20 20 20 20 20 20           MM        
     d42:	20 20 20 20 20 20 4d 4d 4d 20 20 20 20 20 20 20           MMM       
     d52:	4d 20 20 20 20 20 20 0d 0a 00                       M      ...

00000d5c <__c.2852>:
     d5c:	20 20 20 20 20 3d 4d 4d 4d 2e 20 20 20 20 20 20          =MMM.      
     d6c:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     d7c:	20 20 20 20 20 20 4d 4d 2e 20 20 20 20 20 20 20           MM.       
     d8c:	20 20 20 20 20 20 4d 4d 4d 20 20 20 20 20 20 4d           MMM      M
     d9c:	4d 20 20 20 20 20 20 0d 0a 00                       M      ...

00000da6 <__c.2850>:
     da6:	20 20 20 20 4d 4d 4d 4d 20 20 20 20 20 20 20 20         MMMM        
     db6:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     dc6:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     dd6:	20 20 20 20 20 20 4d 4d 4d 2e 20 20 20 20 4d 4d           MMM.    MM
     de6:	20 20 20 20 20 20 20 20 0d 0a 00                            ...

00000df1 <__c.2848>:
     df1:	20 20 20 20 20 4d 4d 4d 20 20 20 20 20 20 20 20          MMM        
     e01:	20 20 20 20 20 20 20 4d 2e 20 20 20 20 20 20 20            M.       
     e11:	20 20 20 20 20 20 20 20 20 20 20 4d 4d 4d 20 20                MMM  
     e21:	20 20 20 20 20 20 20 4d 4d 4d 2e 20 20 2e 4d 4d            MMM.  .MM
     e31:	4d 4d 20 20 20 20 20 20 0d 0a 00                    MM      ...

00000e3c <__c.2846>:
     e3c:	20 20 20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20        MMM          
     e4c:	20 20 20 20 4d 4d 4d 4d 4d 2e 4d 4d 2e 20 20 20         MMMMM.MM.   
     e5c:	20 20 20 20 20 20 20 20 20 20 2c 4d 2c 20 20 20               ,M,   
     e6c:	20 20 20 20 2e 4d 4d 4d 2e 20 20 20 20 20 20 20         .MMM.       
     e7c:	20 4d 4d 20 20 20 20 20 0d 0a 00                     MM     ...

00000e87 <__c.2844>:
     e87:	2e 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20 20     .MM             
     e97:	4d 4d 4d 4d 20 4d 4d 4d 4d 4d 4d 20 20 20 20 20     MMMM MMMMMM     
     ea7:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
     eb7:	2e 4d 4d 4d 4d 4d 20 20 20 20 20 20 20 20 44 4d     .MMMMM        DM
     ec7:	4d 20 20 20 20 20 20 0d 0a 00                       M      ...

00000ed1 <__c.2842>:
     ed1:	20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20      MMM            
     ee1:	2e 4d 20 20 20 20 20 4e 20 20 4d 4d 20 20 20 20     .M     N  MM    
     ef1:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 2e 2e                   ..
     f01:	4d 4d 4d 4d 4d 2e 20 20 20 20 20 4d 4d 4d 4d 20     MMMMM.     MMMM 
     f11:	20 20 20 20 20 20 20 20 0d 0a 00                            ...

00000f1c <__c.2840>:
     f1c:	20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20      MMM            
     f2c:	20 20 4d 4d 20 20 20 20 20 4d 4d 20 20 20 20 20       MM     MM     
     f3c:	20 20 20 20 20 4d 4d 4d 4d 4d 4d 4d 4d 4d 4d 4d          MMMMMMMMMMM
     f4c:	4d 4d 4d 4d 20 20 20 20 20 4d 4d 4d 4d 4d 20 20     MMMM     MMMMM  
     f5c:	20 20 20 20 20 20 20 0d 0a 00                              ...

00000f66 <__c.2838>:
     f66:	2e 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20 20     .MM             
     f76:	20 20 20 20 4d 4d 20 20 4d 4d 20 20 20 20 20 20         MM  MM      
     f86:	20 20 20 20 20 20 2c 4d 4d 4d 4d 4d 4d 4d 4d 4d           ,MMMMMMMMM
     f96:	4d 4d 20 20 20 20 20 20 20 20 20 4d 4d 4d 4d 20     MM         MMMM 
     fa6:	20 20 20 20 20 20 0d 0a 00                                ...

00000faf <__c.2836>:
     faf:	3f 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20 20     ?MM             
     fbf:	20 20 20 20 20 4d 20 20 4d 4d 20 20 20 20 20 20          M  MM      
     fcf:	20 2e 20 20 20 20 20 20 4d 4d 4d 20 20 20 20 20      .      MMM     
     fdf:	20 7e 4d 4d 2e 20 20 20 20 20 20 20 4d 4d 4d 4d      ~MM.       MMMM
     fef:	20 20 20 20 20 20 20 0d 0a 00                              ...

00000ff9 <__c.2834>:
     ff9:	20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20      MMM            
    1009:	20 20 20 20 20 20 2b 4d 20 4d 4d 4d 20 20 20 20           +M MMM    
    1019:	20 20 4d 4d 20 20 20 20 2e 4d 4d 20 20 20 20 20       MM    .MM     
    1029:	2e 4d 4d 4d 4d 4d 4d 2e 20 20 20 20 20 20 2e 4d     .MMMMMM.      .M
    1039:	4d 4d 2e 20 20 20 20 20 0d 0a 00                    MM.     ...

00001044 <__c.2832>:
    1044:	20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20      MMM            
    1054:	20 20 20 20 20 20 2e 4d 20 20 4d 4d 20 20 20 20           .M  MM    
    1064:	20 20 4d 4d 4d 4d 4d 4d 2e 20 2e 2e 20 4d 4d 4d       MMMMMM. .. MMM
    1074:	4d 4d 4d 4d 20 4d 4d 4d 2e 20 20 20 20 20 20 20     MMMM MMM.       
    1084:	4d 4d 4d 2e 20 20 20 20 20 0d 0a 00                 MMM.     ...

00001090 <__c.2830>:
    1090:	20 4d 4d 2b 20 20 20 20 20 20 20 20 20 20 20 20      MM+            
    10a0:	20 20 20 20 20 20 20 4d 4d 20 4d 4d 4d 20 20 20            MM MMM   
    10b0:	20 2e 4d 4d 20 37 4d 4d 4d 4d 4d 4d 4d 4d 4d 4d      .MM 7MMMMMMMMMM
    10c0:	4d 20 20 20 20 20 20 4d 4d 4d 2e 20 20 20 20 20     M      MMM.     
    10d0:	20 20 4d 4d 20 20 20 20 20 20 0d 0a 00                MM      ...

000010dd <__c.2828>:
    10dd:	20 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20 20      MM             
    10ed:	20 20 20 20 20 20 20 20 4d 20 20 4d 4d 4e 20 20             M  MMN  
    10fd:	20 2e 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20      .MMM           
    110d:	20 20 20 20 20 20 20 20 4d 4d 4d 4d 20 20 20 20             MMMM    
    111d:	20 20 20 4d 4d 2e 20 20 20 20 0d 0a 00                 MM.    ...

0000112a <__c.2826>:
    112a:	20 4d 4d 2e 20 20 20 20 20 20 20 20 20 20 20 20      MM.            
    113a:	20 20 20 20 20 20 20 20 4d 4d 20 20 4d 4d 2e 20             MM  MM. 
    114a:	20 2e 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20      .MMM           
    115a:	20 20 20 20 20 20 20 20 20 2e 4d 4d 4d 2e 20 20              .MMM.  
    116a:	20 20 20 20 4d 4d 20 20 20 20 0d 0a 00                  MM    ...

00001177 <__c.2824>:
    1177:	20 4d 4d 7e 20 20 20 20 20 20 20 20 20 20 20 20      MM~            
    1187:	20 20 20 20 20 20 20 20 4d 4d 2e 20 4d 4d 4d 20             MM. MMM 
    1197:	20 20 4d 4d 4d 2e 20 20 20 20 20 20 20 20 20 20       MMM.          
    11a7:	20 20 20 20 20 20 20 20 20 20 20 4d 4d 4d 20 20                MMM  
    11b7:	20 20 20 20 49 4d 4d 20 20 20 0d 0a 00                  IMM   ...

000011c4 <__c.2822>:
    11c4:	20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20      MMM            
    11d4:	20 20 20 20 20 20 20 20 20 4d 4d 20 20 4d 4d 20              MM  MM 
    11e4:	20 20 2e 4d 4d 4d 20 20 20 20 20 20 20 20 20 20       .MMM          
    11f4:	20 20 20 20 20 20 20 20 20 20 20 20 4d 4d 4d 4d                 MMMM
    1204:	20 20 20 20 20 4d 4d 20 20 20 0d 0a 00                   MM   ...

00001211 <__c.2820>:
    1211:	20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20      MMM            
    1221:	20 20 20 20 20 20 20 20 20 4d 4d 2e 20 4d 4d 4d              MM. MMM
    1231:	20 20 20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20        MMM          
    1241:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 4d 4d                   MM
    1251:	4d 20 20 20 4d 4d 4f 20 20 20 0d 0a 00              M   MMO   ...

0000125e <__c.2818>:
    125e:	20 20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20       MMM           
    126e:	20 20 20 20 20 20 20 20 20 20 4d 4d 4d 20 2e 4d               MMM .M
    127e:	4d 2e 20 20 20 4d 4d 4d 20 20 20 20 20 20 20 20     M.   MMM        
    128e:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    129e:	20 4d 4d 4d 4d 4d 20 20 20 20 20 0d 0a 00            MMMMM     ...

000012ac <__c.2816>:
    12ac:	20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20      MMM            
    12bc:	20 20 20 20 20 20 20 20 20 2e 4d 4d 20 20 4d 4d              .MM  MM
    12cc:	2e 20 20 20 4d 4d 4d 7e 20 20 20 20 20 20 20 20     .   MMM~        
    12dc:	20 0d 0a 00                                          ...

000012e0 <__c.2814>:
    12e0:	20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20 20      MMM            
    12f0:	20 20 20 20 20 20 20 20 20 20 4d 4d 20 20 20 20               MM    
    1300:	20 20 20 20 2e 4d 4d 4d 20 20 20 20 20 20 20 20         .MMM        
    1310:	20 0d 0a 00                                          ...

00001314 <__c.2812>:
    1314:	20 20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20       MMM           
    1324:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    1334:	20 20 20 20 20 2e 4d 4d 4d 20 20 20 20 20 20 20          .MMM       
    1344:	20 0d 0a 00                                          ...

00001348 <__c.2810>:
    1348:	20 20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20 20       MMM           
    1358:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    1368:	20 20 20 20 20 20 4d 4d 4d 4d 20 20 20 20 20 20           MMMM      
    1378:	20 20 0d 0a 00                                        ...

0000137d <__c.2808>:
    137d:	20 20 20 4d 4d 4d 20 20 20 20 20 20 20 20 20 20        MMM          
    138d:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    139d:	20 20 20 20 20 20 44 4d 4d 4d 20 20 20 20 20 20           DMMM      
    13ad:	20 20 0d 0a 00                                        ...

000013b2 <__c.2806>:
    13b2:	20 20 20 2e 4d 4d 4d 20 20 20 20 20 20 20 20 20        .MMM         
    13c2:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    13d2:	20 20 20 20 20 20 20 4d 4d 4d 4d 20 20 20 20 20            MMMM     
    13e2:	20 0d 0a 00                                          ...

000013e6 <__c.2804>:
    13e6:	20 20 20 20 4d 4d 4d 2e 20 20 20 20 20 20 20 20         MMM.        
    13f6:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    1406:	20 20 20 20 20 20 20 4d 4d 4d 4d 20 20 20 20 20            MMMM     
    1416:	20 0d 0a 00                                          ...

0000141a <__c.2802>:
    141a:	20 20 20 20 20 4d 4d 4d 20 20 20 20 20 20 20 20          MMM        
    142a:	20 20 20 20 20 20 20 20 2e 7e 4d 4d 4d 4d 4d 4d             .~MMMMMM
    143a:	4d 2e 20 20 20 20 20 20 4d 4d 4d 2e 20 20 20 20     M.      MMM.    
    144a:	20 0d 0a 00                                          ...

0000144e <__c.2800>:
    144e:	20 20 20 20 20 2e 4d 4d 4d 20 20 20 20 20 20 20          .MMM       
    145e:	20 4d 4d 4d 4d 4d 4d 4d 4d 4d 4d 4d 2e 20 20 20      MMMMMMMMMMM.   
    146e:	20 20 20 20 20 20 20 20 4d 4d 4d 4d 20 20 20 20             MMMM    
    147e:	20 0d 0a 00                                          ...

00001482 <__c.2798>:
    1482:	20 20 20 20 20 20 2e 4d 4d 4d 4d 4d 4d 4d 4d 4d           .MMMMMMMMM
    1492:	4d 4d 4d 4d 4d 4d 20 20 20 20 20 20 20 4d 4d 4d     MMMMMM       MMM
    14a2:	4d 4d 4d 4d 4d 4d 2e 20 20 4d 4d 4d 20 20 20 20     MMMMMM.  MMM    
    14b2:	20 0d 0a 00                                          ...

000014b6 <__c.2796>:
    14b6:	20 20 20 20 20 20 20 4d 4d 4d 4d 4d 4d 4d 4d 2e            MMMMMMMM.
    14c6:	2e 20 20 20 20 20 20 20 20 20 20 4d 4d 4d 4d 4d     .          MMMMM
    14d6:	2e 20 20 20 20 20 4d 20 20 4d 4d 4d 20 20 20 20     .     M  MMM    
    14e6:	20 0d 0a 00                                          ...

000014ea <__c.2794>:
    14ea:	20 20 20 20 20 20 20 20 38 4d 4d 2e 20 20 20 20             8MM.    
    14fa:	4d 4d 4d 4d 4d 4d 4d 4d 3d 20 20 4d 4d 4d 4d 4d     MMMMMMMM=  MMMMM
    150a:	4d 4d 4d 2e 20 20 2e 4d 20 2c 4d 4d 37 20 20 20     MMM.  .M ,MM7   
    151a:	20 20 20 20 20 0d 0a 00                                  ...

00001522 <__c.2792>:
    1522:	20 20 20 20 20 20 20 20 20 4d 4d 4d 20 20 20 20              MMM    
    1532:	4d 4d 4d 3a 20 20 4d 4d 20 20 20 4d 4d 4d 4d 4d     MMM:  MM   MMMMM
    1542:	4d 4d 4d 4d 20 20 4d 4d 4d 20 4d 4d 4d 20 20 20     MMMM  MMM MMM   
    1552:	20 20 20 20 20 0d 0a 00                                  ...

0000155a <__c.2790>:
    155a:	20 20 20 20 20 20 20 20 20 20 20 4d 4d 4d 4d 4d                MMMMM
    156a:	4d 4d 4d 4d 4d 4d 4d 20 20 20 20 20 4d 4d 4d 4d     MMMMMMM     MMMM
    157a:	4d 4d 4d 4d 4d 20 20 4d 4d 4d 20 4d 4d 4d 20 20     MMMMM  MMM MMM  
    158a:	20 20 20 20 20 0d 0a 00                                  ...

00001592 <__c.2788>:
    1592:	20 20 20 20 20 20 20 20 20 20 20 4d 4d 4d 4d 4d                MMMMM
    15a2:	4d 4d 4d 2e 4d 4d 4d 4d 4d 4d 2e 20 20 4d 4d 4d     MMM.MMMMMM.  MMM
    15b2:	4d 4d 4d 4d 4d 20 4d 4d 4d 20 20 4d 4d 4d 20 20     MMMMM MMM  MMM  
    15c2:	20 20 20 0d 0a 00                                      ...

000015c8 <__c.2786>:
    15c8:	20 20 20 20 20 20 20 20 20 20 20 2e 4d 4d 4d 4d                .MMMM
    15d8:	4d 4d 4d 2e 20 20 20 4d 4d 2e 4d 2e 20 20 20 3d     MMM.   MM.M.   =
    15e8:	4d 4d 4d 4d 4d 4d 4d 4d 2e 20 20 20 4d 4d 4d 20     MMMMMMMM.   MMM 
    15f8:	20 20 20 20 0d 0a 00                                    ...

000015ff <__c.2784>:
    15ff:	20 20 20 20 20 20 20 20 20 20 20 4d 4d 4d 4d 4d                MMMMM
    160f:	4d 4d 4d 4d 20 2e 4d 4d 20 20 20 20 20 20 20 20     MMMM .MM        
    161f:	20 20 20 20 20 20 20 20 20 20 20 4d 4d 4d 20 20                MMM  
    162f:	20 20 20 0d 0a 00                                      ...

00001635 <__c.2782>:
    1635:	20 20 20 20 20 20 20 20 20 20 20 4d 4d 4d 4d 4d                MMMMM
    1645:	4d 4d 4d 4d 20 4d 4d 20 20 20 20 20 20 20 20 20     MMMM MM         
    1655:	20 20 20 20 20 20 20 20 20 20 4d 4d 4d 4d 20 20               MMMM  
    1665:	20 20 20 0d 0a 00                                      ...

0000166b <__c.2780>:
    166b:	20 20 20 20 20 20 20 20 20 20 20 20 2e 4d 4d 4d                 .MMM
    167b:	4d 4d 4d 4d 4d 37 4d 4d 20 20 20 20 20 20 20 20     MMMMM7MM        
    168b:	20 20 20 20 20 20 20 20 20 20 4d 4d 4d 4d 4d 20               MMMMM 
    169b:	20 20 0d 0a 00                                        ...

000016a0 <__c.2778>:
    16a0:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 4d                    M
    16b0:	4d 4d 4d 4d 4d 4d 4d 20 20 20 20 20 20 20 20 20     MMMMMMM         
    16c0:	20 20 20 20 20 20 20 20 20 3f 4d 4d 4d 4d 2e 20              ?MMMM. 
    16d0:	20 0d 0a 00                                          ...

000016d4 <__c.2776>:
    16d4:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    16e4:	20 20 20 20 20 4d 4d 4d 4d 4d 20 20 20 20 20 20          MMMMM      
    16f4:	20 20 20 20 20 20 20 20 4d 4d 4d 4d 4d 2e 20 20             MMMMM.  
    1704:	0d 0a 00                                            ...

00001707 <__c.2774>:
    1707:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    1717:	20 20 20 20 20 20 20 20 20 4d 4d 4d 4d 4d 4d 20              MMMMMM 
    1727:	20 20 20 20 20 20 20 20 4d 4d 4d 4d 20 20 20 0d             MMMM   .
    1737:	0a 00                                               ..

00001739 <__c.2772>:
    1739:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    1749:	20 20 20 20 20 20 20 20 20 20 20 2e 4d 4d 4d 4d                .MMMM
    1759:	4d 4d 4d 4d 4d 4d 4d 4d 4d 4d 20 20 20 0d 0a 00     MMMMMMMMMM   ...

00001769 <__c.2770>:
    1769:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    1779:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    1789:	4d 4d 4d 4d 4d 4d 3d 0d 0a 00                       MMMMMM=...

00001793 <__c.2728>:
    1793:	78 31 3a 20 25 66 2c 20 79 31 3a 20 25 66 2c 7a     x1: %f, y1: %f,z
    17a3:	31 3a 20 25 66 0d 0a 00                             1: %f...

000017ab <__c.2721>:
    17ab:	74 31 3a 20 25 66 2c 20 70 3a 20 25 66 0d 0a 00     t1: %f, p: %f...

000017bb <__c.2715>:
    17bb:	74 65 6d 70 65 72 61 74 75 72 65 3a 20 25 73 0d     temperature: %s.
    17cb:	0a 00                                               ..

000017cd <__c.2620>:
    17cd:	63 6c 69 3a 20 52 65 67 69 73 74 65 72 65 64 20     cli: Registered 
    17dd:	63 6f 6d 6d 61 6e 64 20 25 73 2c 20 68 61 6e 64     command %s, hand
    17ed:	6c 65 72 20 61 74 20 30 78 25 58 0d 0a 00           ler at 0x%X...

000017fb <levels>:
    17fb:	23 18 1c 18 15 18 0d 18 05 18                       #.........

00001805 <log_levelfatal>:
    1805:	5b 46 41 54 41 4c 5d 00                             [FATAL].

0000180d <log_levelerr>:
    180d:	5b 45 52 52 4f 52 5d 00                             [ERROR].

00001815 <log_levelwarn>:
    1815:	5b 57 41 52 4e 5d 00                                [WARN].

0000181c <log_levelinfo>:
    181c:	5b 49 4e 46 4f 5d 00                                [INFO].

00001823 <log_nolevel>:
	...

00001824 <__c.2722>:
    1824:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    1834:	20 20 5b 44 4f 4e 45 5d 0d 0a 00                      [DONE]...

0000183f <__c.2720>:
    183f:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 53 74     [INIT]kernel: St
    184f:	61 72 74 69 6e 67 20 74 61 73 6b 20 6d 61 6e 61     arting task mana
    185f:	67 65 72 00                                         ger.

00001863 <__c.2718>:
    1863:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    1873:	20 20 20 20 20 20 20 20 5b 44 4f 4e 45 5d 0d 0a             [DONE]..
	...

00001884 <__c.2777>:
    1884:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 53 74     [INIT]kernel: St
    1894:	61 72 74 69 6e 67 20 6b 65 72 6e 65 6c 00           arting kernel.

000018a2 <__c.2775>:
    18a2:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 53 74     [INIT]kernel: St
    18b2:	61 72 74 69 6e 67 20 74 69 6d 65 72 00              arting timer.

000018bf <__c.2773>:
    18bf:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
    18cf:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
    18df:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ----------------
    18ef:	2d 2d 2d 2d 2d 2d 2d 2d 0d 0a 0d 0a 00              --------.....

000018fc <__c.2771>:
    18fc:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 54 6f     [INIT]kernel: To
    190c:	74 61 6c 20 54 61 73 6b 20 4d 61 6e 61 67 65 72     tal Task Manager
    191c:	20 6d 65 6d 6f 72 79 20 75 73 61 67 65 3a 20 25      memory usage: %
    192c:	64 20 62 79 74 65 73 0d 0a 00                       d bytes...

00001936 <__c.2769>:
    1936:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 54 61     [INIT]kernel: Ta
    1946:	73 6b 20 71 75 65 75 65 20 6d 65 6d 6f 72 79 20     sk queue memory 
    1956:	75 73 61 67 65 3a 20 20 20 20 20 20 20 20 20 25     usage:         %
    1966:	64 20 62 79 74 65 73 0d 0a 00                       d bytes...

00001970 <__c.2767>:
    1970:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 4c 4f     [INIT]kernel: LO
    1980:	57 50 52 49 4f 20 71 75 65 75 65 20 6d 65 6d 6f     WPRIO queue memo
    1990:	72 79 20 75 73 61 67 65 3a 20 20 20 20 20 20 25     ry usage:      %
    19a0:	64 20 62 79 74 65 73 0d 0a 00                       d bytes...

000019aa <__c.2765>:
    19aa:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 4e 4f     [INIT]kernel: NO
    19ba:	52 4d 50 52 49 4f 20 71 75 65 75 65 20 6d 65 6d     RMPRIO queue mem
    19ca:	6f 72 79 20 75 73 61 67 65 3a 20 20 20 20 20 25     ory usage:     %
    19da:	64 20 62 79 74 65 73 0d 0a 00                       d bytes...

000019e4 <__c.2763>:
    19e4:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 48 49     [INIT]kernel: HI
    19f4:	47 48 50 52 49 4f 20 71 75 65 75 65 20 6d 65 6d     GHPRIO queue mem
    1a04:	6f 72 79 20 75 73 61 67 65 3a 20 20 20 20 20 25     ory usage:     %
    1a14:	64 20 62 79 74 65 73 0d 0a 00                       d bytes...

00001a1e <__c.2761>:
    1a1e:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 54 61     [INIT]kernel: Ta
    1a2e:	73 6b 20 71 75 65 75 65 20 73 69 7a 65 3a 20 20     sk queue size:  
    1a3e:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 25                    %
    1a4e:	64 0d 0a 00                                         d...

00001a52 <__c.2759>:
    1a52:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 4c 4f     [INIT]kernel: LO
    1a62:	57 50 52 49 4f 20 71 75 65 75 65 20 73 69 7a 65     WPRIO queue size
    1a72:	3a 20 20 20 20 20 20 20 20 20 20 20 20 20 20 25     :              %
    1a82:	64 0d 0a 00                                         d...

00001a86 <__c.2757>:
    1a86:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 4e 4f     [INIT]kernel: NO
    1a96:	52 4d 50 52 49 4f 20 71 75 65 75 65 20 73 69 7a     RMPRIO queue siz
    1aa6:	65 3a 20 20 20 20 20 20 20 20 20 20 20 20 20 25     e:             %
    1ab6:	64 0d 0a 00                                         d...

00001aba <__c.2755>:
    1aba:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 48 49     [INIT]kernel: HI
    1aca:	47 48 50 52 49 4f 20 71 75 65 75 65 20 73 69 7a     GHPRIO queue siz
    1ada:	65 3a 20 20 20 20 20 20 20 20 20 20 20 20 20 25     e:             %
    1aea:	64 0d 0a 00                                         d...

00001aee <__c.2753>:
    1aee:	0d 0a 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     ..--------------
    1afe:	2d 2d 2d 2d 2d 2d 2d 2d 4d 65 6d 6f 72 79 20 75     --------Memory u
    1b0e:	73 61 67 65 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d     sage------------
    1b1e:	2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 0d 0a 00              ----------...

00001b2b <__c.2751>:
    1b2b:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    1b3b:	20 20 5b 44 4f 4e 45 5d 0d 0a 00                      [DONE]...

00001b46 <__c.2749>:
    1b46:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 53 65     [INIT]kernel: Se
    1b56:	74 74 69 6e 67 20 75 70 20 74 61 73 6b 20 71 75     tting up task qu
    1b66:	65 75 65 00                                         eue.

00001b6a <__c.2747>:
    1b6a:	20 20 20 20 20 20 20 20 20 20 5b 44 4f 4e 45 5d               [DONE]
    1b7a:	0d 0a 00                                            ...

00001b7d <__c.2745>:
    1b7d:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 53 65     [INIT]kernel: Se
    1b8d:	74 74 69 6e 67 20 75 70 20 50 52 49 4f 52 49 54     tting up PRIORIT
    1b9d:	59 5f 4c 4f 57 20 71 75 65 75 65 00                 Y_LOW queue.

00001ba9 <__c.2743>:
    1ba9:	20 20 20 20 20 20 20 20 20 5b 44 4f 4e 45 5d 0d              [DONE].
    1bb9:	0a 00                                               ..

00001bbb <__c.2741>:
    1bbb:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 53 65     [INIT]kernel: Se
    1bcb:	74 74 69 6e 67 20 75 70 20 50 52 49 4f 52 49 54     tting up PRIORIT
    1bdb:	59 5f 4e 4f 52 4d 20 71 75 65 75 65 00              Y_NORM queue.

00001be8 <__c.2739>:
    1be8:	20 20 20 20 20 20 20 20 20 5b 44 4f 4e 45 5d 0d              [DONE].
    1bf8:	0a 00                                               ..

00001bfa <__c.2737>:
    1bfa:	5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20 53 65     [INIT]kernel: Se
    1c0a:	74 74 69 6e 67 20 75 70 20 50 52 49 4f 52 49 54     tting up PRIORIT
    1c1a:	59 5f 48 49 47 48 20 71 75 65 75 65 00              Y_HIGH queue.

00001c27 <__c.2735>:
    1c27:	0d 0a 5b 49 4e 49 54 5d 6b 65 72 6e 65 6c 3a 20     ..[INIT]kernel: 
    1c37:	53 74 61 72 74 69 6e 67 20 75 70 20 43 61 6e 53     Starting up CanS
    1c47:	61 74 20 6b 65 72 6e 65 6c 20 76 25 73 0d 0a 0d     at kernel v%s...
    1c57:	0a 00                                               ..

00001c59 <__c.2731>:
    1c59:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    1c69:	20 20 20 20 20 20 20 20 20 5b 44 4f 4e 45 5d 0d              [DONE].
    1c79:	0a 00                                               ..

00001c7b <__c.2609>:
    1c7b:	68 75 6d 3a 20 25 66 2c 20 74 32 3a 20 25 66 0d     hum: %f, t2: %f.
    1c8b:	0a 00 00                                            ...

00001c8e <__ctors_end>:
    1c8e:	11 24       	eor	r1, r1
    1c90:	1f be       	out	0x3f, r1	; 63
    1c92:	cf ef       	ldi	r28, 0xFF	; 255
    1c94:	d0 e1       	ldi	r29, 0x10	; 16
    1c96:	de bf       	out	0x3e, r29	; 62
    1c98:	cd bf       	out	0x3d, r28	; 61

00001c9a <wdt_saveMCUCSR>:

uint8_t mcucsr_mirror __attribute__ ((section (".noinit")));

void wdt_saveMCUCSR(void)
{
	mcucsr_mirror = MCUCSR;
    1c9a:	84 b7       	in	r24, 0x34	; 52
    1c9c:	80 93 9f 04 	sts	0x049F, r24	; 0x80049f <__bss_end>
	MCUCSR = 0;
    1ca0:	14 be       	out	0x34, r1	; 52
void wdt_disable (void)
{
	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
	{
        uint8_t register temp_reg;
		__asm__ __volatile__ (
    1ca2:	0f b6       	in	r0, 0x3f	; 63
    1ca4:	f8 94       	cli
    1ca6:	a8 95       	wdr
    1ca8:	81 b5       	in	r24, 0x21	; 33
    1caa:	88 61       	ori	r24, 0x18	; 24
    1cac:	81 bd       	out	0x21, r24	; 33
    1cae:	11 bc       	out	0x21, r1	; 33
    1cb0:	0f be       	out	0x3f, r0	; 63

00001cb2 <__do_copy_data>:
    1cb2:	11 e0       	ldi	r17, 0x01	; 1
    1cb4:	a0 e0       	ldi	r26, 0x00	; 0
    1cb6:	b1 e0       	ldi	r27, 0x01	; 1
    1cb8:	ee e3       	ldi	r30, 0x3E	; 62
    1cba:	f1 e6       	ldi	r31, 0x61	; 97
    1cbc:	00 e0       	ldi	r16, 0x00	; 0
    1cbe:	0b bf       	out	0x3b, r16	; 59
    1cc0:	02 c0       	rjmp	.+4      	; 0x1cc6 <__do_copy_data+0x14>
    1cc2:	07 90       	elpm	r0, Z+
    1cc4:	0d 92       	st	X+, r0
    1cc6:	a8 3a       	cpi	r26, 0xA8	; 168
    1cc8:	b1 07       	cpc	r27, r17
    1cca:	d9 f7       	brne	.-10     	; 0x1cc2 <__do_copy_data+0x10>

00001ccc <__do_clear_bss>:
    1ccc:	24 e0       	ldi	r18, 0x04	; 4
    1cce:	a8 ea       	ldi	r26, 0xA8	; 168
    1cd0:	b1 e0       	ldi	r27, 0x01	; 1
    1cd2:	01 c0       	rjmp	.+2      	; 0x1cd6 <.do_clear_bss_start>

00001cd4 <.do_clear_bss_loop>:
    1cd4:	1d 92       	st	X+, r1

00001cd6 <.do_clear_bss_start>:
    1cd6:	af 39       	cpi	r26, 0x9F	; 159
    1cd8:	b2 07       	cpc	r27, r18
    1cda:	e1 f7       	brne	.-8      	; 0x1cd4 <.do_clear_bss_loop>
    1cdc:	0e 94 aa 23 	call	0x4754	; 0x4754 <main>
    1ce0:	0c 94 9d 30 	jmp	0x613a	; 0x613a <_exit>

00001ce4 <__bad_interrupt>:
    1ce4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001ce8 <adxl345_pinSetup>:
uint8_t adxl345_checkDevId(uint8_t devid){
	if(devid != ADXL345_DEFAULT_DEVID)
		return ERR_ADXL_DEVID_MISMATCH;
	else
		return 0;
}
    1ce8:	13 9a       	sbi	0x02, 3	; 2
    1cea:	93 b1       	in	r25, 0x03	; 3
    1cec:	23 b1       	in	r18, 0x03	; 3
    1cee:	89 2f       	mov	r24, r25
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	80 95       	com	r24
    1cf4:	90 95       	com	r25
    1cf6:	88 70       	andi	r24, 0x08	; 8
    1cf8:	99 27       	eor	r25, r25
    1cfa:	82 27       	eor	r24, r18
    1cfc:	83 b9       	out	0x03, r24	; 3
    1cfe:	83 b1       	in	r24, 0x03	; 3
    1d00:	93 b1       	in	r25, 0x03	; 3
    1d02:	88 70       	andi	r24, 0x08	; 8
    1d04:	89 27       	eor	r24, r25
    1d06:	83 b9       	out	0x03, r24	; 3
    1d08:	8f e3       	ldi	r24, 0x3F	; 63
    1d0a:	9c e9       	ldi	r25, 0x9C	; 156
    1d0c:	01 97       	sbiw	r24, 0x01	; 1
    1d0e:	f1 f7       	brne	.-4      	; 0x1d0c <adxl345_pinSetup+0x24>
    1d10:	00 c0       	rjmp	.+0      	; 0x1d12 <adxl345_pinSetup+0x2a>
    1d12:	00 00       	nop
    1d14:	93 b1       	in	r25, 0x03	; 3
    1d16:	23 b1       	in	r18, 0x03	; 3
    1d18:	89 2f       	mov	r24, r25
    1d1a:	90 e0       	ldi	r25, 0x00	; 0
    1d1c:	80 95       	com	r24
    1d1e:	90 95       	com	r25
    1d20:	88 70       	andi	r24, 0x08	; 8
    1d22:	99 27       	eor	r25, r25
    1d24:	82 27       	eor	r24, r18
    1d26:	83 b9       	out	0x03, r24	; 3
    1d28:	08 95       	ret

00001d2a <adxl345_init>:
    1d2a:	cf 93       	push	r28
    1d2c:	20 e0       	ldi	r18, 0x00	; 0
    1d2e:	43 e0       	ldi	r20, 0x03	; 3
    1d30:	60 e0       	ldi	r22, 0x00	; 0
    1d32:	81 e0       	ldi	r24, 0x01	; 1
    1d34:	0e 94 7d 14 	call	0x28fa	; 0x28fa <spi_busSetup>
    1d38:	83 b1       	in	r24, 0x03	; 3
    1d3a:	93 b1       	in	r25, 0x03	; 3
    1d3c:	88 70       	andi	r24, 0x08	; 8
    1d3e:	89 27       	eor	r24, r25
    1d40:	83 b9       	out	0x03, r24	; 3
    1d42:	20 e0       	ldi	r18, 0x00	; 0
    1d44:	40 e8       	ldi	r20, 0x80	; 128
    1d46:	61 e0       	ldi	r22, 0x01	; 1
    1d48:	80 e0       	ldi	r24, 0x00	; 0
    1d4a:	0e 94 15 14 	call	0x282a	; 0x282a <spi_readRegister>
    1d4e:	c8 2f       	mov	r28, r24
    1d50:	21 e0       	ldi	r18, 0x01	; 1
    1d52:	40 e8       	ldi	r20, 0x80	; 128
    1d54:	68 e0       	ldi	r22, 0x08	; 8
    1d56:	8d e2       	ldi	r24, 0x2D	; 45
    1d58:	0e 94 c0 13 	call	0x2780	; 0x2780 <spi_writeRegister>
    1d5c:	21 e0       	ldi	r18, 0x01	; 1
    1d5e:	40 e8       	ldi	r20, 0x80	; 128
    1d60:	63 e0       	ldi	r22, 0x03	; 3
    1d62:	81 e3       	ldi	r24, 0x31	; 49
    1d64:	0e 94 c0 13 	call	0x2780	; 0x2780 <spi_writeRegister>
    1d68:	93 b1       	in	r25, 0x03	; 3
    1d6a:	23 b1       	in	r18, 0x03	; 3
    1d6c:	89 2f       	mov	r24, r25
    1d6e:	90 e0       	ldi	r25, 0x00	; 0
    1d70:	80 95       	com	r24
    1d72:	90 95       	com	r25
    1d74:	88 70       	andi	r24, 0x08	; 8
    1d76:	99 27       	eor	r25, r25
    1d78:	82 27       	eor	r24, r18
    1d7a:	83 b9       	out	0x03, r24	; 3
    1d7c:	0e 94 ea 14 	call	0x29d4	; 0x29d4 <spi_busStop>
    1d80:	8c 2f       	mov	r24, r28
    1d82:	cf 91       	pop	r28
    1d84:	08 95       	ret

00001d86 <adxl345_readX>:

int16_t adxl345_readX(){
    1d86:	1f 93       	push	r17
    1d88:	cf 93       	push	r28
    1d8a:	df 93       	push	r29
	spi_busSetup(SPI_PRESCALER_16, MSBFIRST, SPI_MODE3, SPI_1X);
    1d8c:	20 e0       	ldi	r18, 0x00	; 0
    1d8e:	43 e0       	ldi	r20, 0x03	; 3
    1d90:	60 e0       	ldi	r22, 0x00	; 0
    1d92:	81 e0       	ldi	r24, 0x01	; 1
    1d94:	0e 94 7d 14 	call	0x28fa	; 0x28fa <spi_busSetup>
	return (*reg >> bit) & 1;
}

inline void hal_writePin(volatile uint8_t *port, uint8_t pin, uint8_t value){
	uint8_t nvalue = !!value;
	*port ^= (-1 * nvalue ^ *port) & (1 << pin);
    1d98:	83 b1       	in	r24, 0x03	; 3
    1d9a:	93 b1       	in	r25, 0x03	; 3
    1d9c:	88 70       	andi	r24, 0x08	; 8
    1d9e:	89 27       	eor	r24, r25
    1da0:	83 b9       	out	0x03, r24	; 3
	hal_writePin(&ADXL345_PORT, ADXL345_CS, 0);
	int16_t x0 = spi_readRegister(ADXL345_REG_X0, 1, 0x80, 0);
    1da2:	20 e0       	ldi	r18, 0x00	; 0
    1da4:	40 e8       	ldi	r20, 0x80	; 128
    1da6:	61 e0       	ldi	r22, 0x01	; 1
    1da8:	82 e3       	ldi	r24, 0x32	; 50
    1daa:	0e 94 15 14 	call	0x282a	; 0x282a <spi_readRegister>
    1dae:	18 2f       	mov	r17, r24
	int16_t x1 = spi_readRegister(ADXL345_REG_X1, 1, 0x80, 0);
    1db0:	20 e0       	ldi	r18, 0x00	; 0
    1db2:	40 e8       	ldi	r20, 0x80	; 128
    1db4:	61 e0       	ldi	r22, 0x01	; 1
    1db6:	83 e3       	ldi	r24, 0x33	; 51
    1db8:	0e 94 15 14 	call	0x282a	; 0x282a <spi_readRegister>
    1dbc:	c8 2f       	mov	r28, r24
    1dbe:	d0 e0       	ldi	r29, 0x00	; 0
    1dc0:	93 b1       	in	r25, 0x03	; 3
    1dc2:	83 b1       	in	r24, 0x03	; 3
    1dc4:	29 2f       	mov	r18, r25
    1dc6:	30 e0       	ldi	r19, 0x00	; 0
    1dc8:	20 95       	com	r18
    1dca:	30 95       	com	r19
    1dcc:	28 70       	andi	r18, 0x08	; 8
    1dce:	33 27       	eor	r19, r19
    1dd0:	28 27       	eor	r18, r24
    1dd2:	23 b9       	out	0x03, r18	; 3
	hal_writePin(&ADXL345_PORT, ADXL345_CS, 1);
	spi_busStop();
    1dd4:	0e 94 ea 14 	call	0x29d4	; 0x29d4 <spi_busStop>
	x1 = x1 << 8;
    1dd8:	7c 2f       	mov	r23, r28
    1dda:	66 27       	eor	r22, r22
	x1 |= x0;
	return (int16_t)(((float)x1/32.0)*10.0);
    1ddc:	61 2b       	or	r22, r17
    1dde:	07 2e       	mov	r0, r23
    1de0:	00 0c       	add	r0, r0
    1de2:	88 0b       	sbc	r24, r24
    1de4:	99 0b       	sbc	r25, r25
    1de6:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    1dea:	20 e0       	ldi	r18, 0x00	; 0
    1dec:	30 e0       	ldi	r19, 0x00	; 0
    1dee:	40 e0       	ldi	r20, 0x00	; 0
    1df0:	5d e3       	ldi	r21, 0x3D	; 61
    1df2:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    1df6:	20 e0       	ldi	r18, 0x00	; 0
    1df8:	30 e0       	ldi	r19, 0x00	; 0
    1dfa:	40 e2       	ldi	r20, 0x20	; 32
    1dfc:	51 e4       	ldi	r21, 0x41	; 65
    1dfe:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    1e02:	0e 94 b1 24 	call	0x4962	; 0x4962 <__fixsfsi>
}
    1e06:	cb 01       	movw	r24, r22
    1e08:	df 91       	pop	r29
    1e0a:	cf 91       	pop	r28
    1e0c:	1f 91       	pop	r17
    1e0e:	08 95       	ret

00001e10 <adxl345_readY>:

int16_t adxl345_readY(){
    1e10:	1f 93       	push	r17
    1e12:	cf 93       	push	r28
    1e14:	df 93       	push	r29
	spi_busSetup(SPI_PRESCALER_16, MSBFIRST, SPI_MODE3, SPI_1X);
    1e16:	20 e0       	ldi	r18, 0x00	; 0
    1e18:	43 e0       	ldi	r20, 0x03	; 3
    1e1a:	60 e0       	ldi	r22, 0x00	; 0
    1e1c:	81 e0       	ldi	r24, 0x01	; 1
    1e1e:	0e 94 7d 14 	call	0x28fa	; 0x28fa <spi_busSetup>
    1e22:	83 b1       	in	r24, 0x03	; 3
    1e24:	93 b1       	in	r25, 0x03	; 3
    1e26:	88 70       	andi	r24, 0x08	; 8
    1e28:	89 27       	eor	r24, r25
    1e2a:	83 b9       	out	0x03, r24	; 3
	hal_writePin(&ADXL345_PORT, ADXL345_CS, 0);
	int16_t y0 = spi_readRegister(ADXL345_REG_Y0, 1, 0x80, 0);
    1e2c:	20 e0       	ldi	r18, 0x00	; 0
    1e2e:	40 e8       	ldi	r20, 0x80	; 128
    1e30:	61 e0       	ldi	r22, 0x01	; 1
    1e32:	84 e3       	ldi	r24, 0x34	; 52
    1e34:	0e 94 15 14 	call	0x282a	; 0x282a <spi_readRegister>
    1e38:	18 2f       	mov	r17, r24
	int16_t y1 = spi_readRegister(ADXL345_REG_Y1, 1, 0x80, 0);
    1e3a:	20 e0       	ldi	r18, 0x00	; 0
    1e3c:	40 e8       	ldi	r20, 0x80	; 128
    1e3e:	61 e0       	ldi	r22, 0x01	; 1
    1e40:	85 e3       	ldi	r24, 0x35	; 53
    1e42:	0e 94 15 14 	call	0x282a	; 0x282a <spi_readRegister>
    1e46:	c8 2f       	mov	r28, r24
    1e48:	d0 e0       	ldi	r29, 0x00	; 0
    1e4a:	93 b1       	in	r25, 0x03	; 3
    1e4c:	83 b1       	in	r24, 0x03	; 3
    1e4e:	29 2f       	mov	r18, r25
    1e50:	30 e0       	ldi	r19, 0x00	; 0
    1e52:	20 95       	com	r18
    1e54:	30 95       	com	r19
    1e56:	28 70       	andi	r18, 0x08	; 8
    1e58:	33 27       	eor	r19, r19
    1e5a:	28 27       	eor	r18, r24
    1e5c:	23 b9       	out	0x03, r18	; 3
	hal_writePin(&ADXL345_PORT, ADXL345_CS, 1);
	spi_busStop();
    1e5e:	0e 94 ea 14 	call	0x29d4	; 0x29d4 <spi_busStop>
	y1 = y1 << 8;
    1e62:	7c 2f       	mov	r23, r28
    1e64:	66 27       	eor	r22, r22
	y1 |= y0;
	return (int16_t)(((float)y1/32.0)*10.0);
    1e66:	61 2b       	or	r22, r17
    1e68:	07 2e       	mov	r0, r23
    1e6a:	00 0c       	add	r0, r0
    1e6c:	88 0b       	sbc	r24, r24
    1e6e:	99 0b       	sbc	r25, r25
    1e70:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    1e74:	20 e0       	ldi	r18, 0x00	; 0
    1e76:	30 e0       	ldi	r19, 0x00	; 0
    1e78:	40 e0       	ldi	r20, 0x00	; 0
    1e7a:	5d e3       	ldi	r21, 0x3D	; 61
    1e7c:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    1e80:	20 e0       	ldi	r18, 0x00	; 0
    1e82:	30 e0       	ldi	r19, 0x00	; 0
    1e84:	40 e2       	ldi	r20, 0x20	; 32
    1e86:	51 e4       	ldi	r21, 0x41	; 65
    1e88:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    1e8c:	0e 94 b1 24 	call	0x4962	; 0x4962 <__fixsfsi>
}
    1e90:	cb 01       	movw	r24, r22
    1e92:	df 91       	pop	r29
    1e94:	cf 91       	pop	r28
    1e96:	1f 91       	pop	r17
    1e98:	08 95       	ret

00001e9a <adxl345_readZ>:

int16_t adxl345_readZ(){
    1e9a:	1f 93       	push	r17
    1e9c:	cf 93       	push	r28
    1e9e:	df 93       	push	r29
	spi_busSetup(SPI_PRESCALER_16, MSBFIRST, SPI_MODE3, SPI_1X);
    1ea0:	20 e0       	ldi	r18, 0x00	; 0
    1ea2:	43 e0       	ldi	r20, 0x03	; 3
    1ea4:	60 e0       	ldi	r22, 0x00	; 0
    1ea6:	81 e0       	ldi	r24, 0x01	; 1
    1ea8:	0e 94 7d 14 	call	0x28fa	; 0x28fa <spi_busSetup>
    1eac:	83 b1       	in	r24, 0x03	; 3
    1eae:	93 b1       	in	r25, 0x03	; 3
    1eb0:	88 70       	andi	r24, 0x08	; 8
    1eb2:	89 27       	eor	r24, r25
    1eb4:	83 b9       	out	0x03, r24	; 3
	hal_writePin(&ADXL345_PORT, ADXL345_CS, 0);
	int16_t z0 = spi_readRegister(ADXL345_REG_Z0, 1, 0x80, 0);
    1eb6:	20 e0       	ldi	r18, 0x00	; 0
    1eb8:	40 e8       	ldi	r20, 0x80	; 128
    1eba:	61 e0       	ldi	r22, 0x01	; 1
    1ebc:	86 e3       	ldi	r24, 0x36	; 54
    1ebe:	0e 94 15 14 	call	0x282a	; 0x282a <spi_readRegister>
    1ec2:	18 2f       	mov	r17, r24
	int16_t z1 = spi_readRegister(ADXL345_REG_Z1, 1, 0x80, 0);
    1ec4:	20 e0       	ldi	r18, 0x00	; 0
    1ec6:	40 e8       	ldi	r20, 0x80	; 128
    1ec8:	61 e0       	ldi	r22, 0x01	; 1
    1eca:	87 e3       	ldi	r24, 0x37	; 55
    1ecc:	0e 94 15 14 	call	0x282a	; 0x282a <spi_readRegister>
    1ed0:	c8 2f       	mov	r28, r24
    1ed2:	d0 e0       	ldi	r29, 0x00	; 0
    1ed4:	93 b1       	in	r25, 0x03	; 3
    1ed6:	83 b1       	in	r24, 0x03	; 3
    1ed8:	29 2f       	mov	r18, r25
    1eda:	30 e0       	ldi	r19, 0x00	; 0
    1edc:	20 95       	com	r18
    1ede:	30 95       	com	r19
    1ee0:	28 70       	andi	r18, 0x08	; 8
    1ee2:	33 27       	eor	r19, r19
    1ee4:	28 27       	eor	r18, r24
    1ee6:	23 b9       	out	0x03, r18	; 3
	hal_writePin(&ADXL345_PORT, ADXL345_CS, 1);
	spi_busStop();
    1ee8:	0e 94 ea 14 	call	0x29d4	; 0x29d4 <spi_busStop>
	z1 = z1 << 8;
    1eec:	7c 2f       	mov	r23, r28
    1eee:	66 27       	eor	r22, r22
	z1 |= z0;
	return (int16_t)(((float)z1/32.0)*10.0);
    1ef0:	61 2b       	or	r22, r17
    1ef2:	07 2e       	mov	r0, r23
    1ef4:	00 0c       	add	r0, r0
    1ef6:	88 0b       	sbc	r24, r24
    1ef8:	99 0b       	sbc	r25, r25
    1efa:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    1efe:	20 e0       	ldi	r18, 0x00	; 0
    1f00:	30 e0       	ldi	r19, 0x00	; 0
    1f02:	40 e0       	ldi	r20, 0x00	; 0
    1f04:	5d e3       	ldi	r21, 0x3D	; 61
    1f06:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    1f0a:	20 e0       	ldi	r18, 0x00	; 0
    1f0c:	30 e0       	ldi	r19, 0x00	; 0
    1f0e:	40 e2       	ldi	r20, 0x20	; 32
    1f10:	51 e4       	ldi	r21, 0x41	; 65
    1f12:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    1f16:	0e 94 b1 24 	call	0x4962	; 0x4962 <__fixsfsi>
    1f1a:	cb 01       	movw	r24, r22
    1f1c:	df 91       	pop	r29
    1f1e:	cf 91       	pop	r28
    1f20:	1f 91       	pop	r17
    1f22:	08 95       	ret

00001f24 <bmp280_readRegister3>:
	dig_P4 = (int16_t)bmp280_readRegister2(BMP280_REG_DIG_P4);
	dig_P5 = (int16_t)bmp280_readRegister2(BMP280_REG_DIG_P5);
	dig_P6 = (int16_t)bmp280_readRegister2(BMP280_REG_DIG_P6);
	dig_P7 = (int16_t)bmp280_readRegister2(BMP280_REG_DIG_P7);
	dig_P8 = (int16_t)bmp280_readRegister2(BMP280_REG_DIG_P8);
	dig_P9 = (int16_t)bmp280_readRegister2(BMP280_REG_DIG_P9);
    1f24:	cf 92       	push	r12
    1f26:	df 92       	push	r13
    1f28:	ef 92       	push	r14
    1f2a:	ff 92       	push	r15
    1f2c:	cf 93       	push	r28
    1f2e:	c8 2f       	mov	r28, r24
    1f30:	20 e0       	ldi	r18, 0x00	; 0
    1f32:	43 e0       	ldi	r20, 0x03	; 3
    1f34:	60 e0       	ldi	r22, 0x00	; 0
    1f36:	81 e0       	ldi	r24, 0x01	; 1
    1f38:	0e 94 7d 14 	call	0x28fa	; 0x28fa <spi_busSetup>
    1f3c:	c0 98       	cbi	0x18, 0	; 24
    1f3e:	1c 98       	cbi	0x03, 4	; 3
    1f40:	8c 2f       	mov	r24, r28
    1f42:	80 68       	ori	r24, 0x80	; 128
    1f44:	0e 94 8f 14 	call	0x291e	; 0x291e <spi_simpleWrite>
    1f48:	80 e0       	ldi	r24, 0x00	; 0
    1f4a:	0e 94 bc 14 	call	0x2978	; 0x2978 <spi_simpleRead>
    1f4e:	c8 2e       	mov	r12, r24
    1f50:	d1 2c       	mov	r13, r1
    1f52:	e1 2c       	mov	r14, r1
    1f54:	f1 2c       	mov	r15, r1
    1f56:	fe 2c       	mov	r15, r14
    1f58:	ed 2c       	mov	r14, r13
    1f5a:	dc 2c       	mov	r13, r12
    1f5c:	cc 24       	eor	r12, r12
    1f5e:	80 e0       	ldi	r24, 0x00	; 0
    1f60:	0e 94 bc 14 	call	0x2978	; 0x2978 <spi_simpleRead>
    1f64:	c8 2a       	or	r12, r24
    1f66:	fe 2c       	mov	r15, r14
    1f68:	ed 2c       	mov	r14, r13
    1f6a:	dc 2c       	mov	r13, r12
    1f6c:	cc 24       	eor	r12, r12
    1f6e:	80 e0       	ldi	r24, 0x00	; 0
    1f70:	0e 94 bc 14 	call	0x2978	; 0x2978 <spi_simpleRead>
    1f74:	c8 2a       	or	r12, r24
    1f76:	1c 9a       	sbi	0x03, 4	; 3
    1f78:	c0 9a       	sbi	0x18, 0	; 24
    1f7a:	0e 94 ea 14 	call	0x29d4	; 0x29d4 <spi_busStop>
    1f7e:	c7 01       	movw	r24, r14
    1f80:	b6 01       	movw	r22, r12
    1f82:	cf 91       	pop	r28
    1f84:	ff 90       	pop	r15
    1f86:	ef 90       	pop	r14
    1f88:	df 90       	pop	r13
    1f8a:	cf 90       	pop	r12
    1f8c:	08 95       	ret

00001f8e <bmp280_readTemperature>:
}

double bmp280_readTemperature(){
    1f8e:	4f 92       	push	r4
    1f90:	5f 92       	push	r5
    1f92:	6f 92       	push	r6
    1f94:	7f 92       	push	r7
    1f96:	8f 92       	push	r8
    1f98:	9f 92       	push	r9
    1f9a:	af 92       	push	r10
    1f9c:	bf 92       	push	r11
    1f9e:	cf 92       	push	r12
    1fa0:	df 92       	push	r13
    1fa2:	ef 92       	push	r14
    1fa4:	ff 92       	push	r15
	double var1, var2, t;
	int32_t adc_T = (int32_t)bmp280_readRegister3(BMP280_REG_TEMPDATA);
    1fa6:	8a ef       	ldi	r24, 0xFA	; 250
    1fa8:	0e 94 92 0f 	call	0x1f24	; 0x1f24 <bmp280_readRegister3>
	adc_T >>= 4;
	var1 = (((double)adc_T)/16384.0 - (double)dig_T1/1024.0)*((double)dig_T2);
    1fac:	24 e0       	ldi	r18, 0x04	; 4
    1fae:	95 95       	asr	r25
    1fb0:	87 95       	ror	r24
    1fb2:	77 95       	ror	r23
    1fb4:	67 95       	ror	r22
    1fb6:	2a 95       	dec	r18
    1fb8:	d1 f7       	brne	.-12     	; 0x1fae <bmp280_readTemperature+0x20>
    1fba:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    1fbe:	4b 01       	movw	r8, r22
    1fc0:	5c 01       	movw	r10, r24
    1fc2:	60 91 80 04 	lds	r22, 0x0480	; 0x800480 <dig_T1>
    1fc6:	70 91 81 04 	lds	r23, 0x0481	; 0x800481 <dig_T1+0x1>
    1fca:	80 e0       	ldi	r24, 0x00	; 0
    1fcc:	90 e0       	ldi	r25, 0x00	; 0
    1fce:	0e 94 e7 24 	call	0x49ce	; 0x49ce <__floatunsisf>
    1fd2:	2b 01       	movw	r4, r22
    1fd4:	3c 01       	movw	r6, r24
	var2 = ((((double)adc_T)/131072.0-((double)dig_T1)/8192.0)*(((double)adc_T)/131072.0 - ((double)dig_T1)/8192.0))*((double)dig_T3);
    1fd6:	20 e0       	ldi	r18, 0x00	; 0
    1fd8:	30 e0       	ldi	r19, 0x00	; 0
    1fda:	40 e0       	ldi	r20, 0x00	; 0
    1fdc:	57 e3       	ldi	r21, 0x37	; 55
    1fde:	c5 01       	movw	r24, r10
    1fe0:	b4 01       	movw	r22, r8
    1fe2:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    1fe6:	6b 01       	movw	r12, r22
    1fe8:	7c 01       	movw	r14, r24
    1fea:	20 e0       	ldi	r18, 0x00	; 0
    1fec:	30 e0       	ldi	r19, 0x00	; 0
    1fee:	40 e0       	ldi	r20, 0x00	; 0
    1ff0:	59 e3       	ldi	r21, 0x39	; 57
    1ff2:	c3 01       	movw	r24, r6
    1ff4:	b2 01       	movw	r22, r4
    1ff6:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    1ffa:	9b 01       	movw	r18, r22
    1ffc:	ac 01       	movw	r20, r24
    1ffe:	c7 01       	movw	r24, r14
    2000:	b6 01       	movw	r22, r12
    2002:	0e 94 cd 23 	call	0x479a	; 0x479a <__subsf3>
    2006:	6b 01       	movw	r12, r22
    2008:	7c 01       	movw	r14, r24
	temp_calibrated = (int32_t)(var1 + var2);
    200a:	20 e0       	ldi	r18, 0x00	; 0
    200c:	30 e0       	ldi	r19, 0x00	; 0
    200e:	40 e8       	ldi	r20, 0x80	; 128
    2010:	58 e3       	ldi	r21, 0x38	; 56
    2012:	c5 01       	movw	r24, r10
    2014:	b4 01       	movw	r22, r8
    2016:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    201a:	4b 01       	movw	r8, r22
    201c:	5c 01       	movw	r10, r24
    201e:	20 e0       	ldi	r18, 0x00	; 0
    2020:	30 e0       	ldi	r19, 0x00	; 0
    2022:	40 e8       	ldi	r20, 0x80	; 128
    2024:	5a e3       	ldi	r21, 0x3A	; 58
    2026:	c3 01       	movw	r24, r6
    2028:	b2 01       	movw	r22, r4
    202a:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    202e:	9b 01       	movw	r18, r22
    2030:	ac 01       	movw	r20, r24
    2032:	c5 01       	movw	r24, r10
    2034:	b4 01       	movw	r22, r8
    2036:	0e 94 cd 23 	call	0x479a	; 0x479a <__subsf3>
    203a:	4b 01       	movw	r8, r22
    203c:	5c 01       	movw	r10, r24
    203e:	60 91 86 04 	lds	r22, 0x0486	; 0x800486 <dig_T2>
    2042:	70 91 87 04 	lds	r23, 0x0487	; 0x800487 <dig_T2+0x1>
    2046:	07 2e       	mov	r0, r23
    2048:	00 0c       	add	r0, r0
    204a:	88 0b       	sbc	r24, r24
    204c:	99 0b       	sbc	r25, r25
    204e:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    2052:	9b 01       	movw	r18, r22
    2054:	ac 01       	movw	r20, r24
    2056:	c5 01       	movw	r24, r10
    2058:	b4 01       	movw	r22, r8
    205a:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    205e:	4b 01       	movw	r8, r22
    2060:	5c 01       	movw	r10, r24
    2062:	60 91 96 04 	lds	r22, 0x0496	; 0x800496 <dig_T3>
    2066:	70 91 97 04 	lds	r23, 0x0497	; 0x800497 <dig_T3+0x1>
    206a:	07 2e       	mov	r0, r23
    206c:	00 0c       	add	r0, r0
    206e:	88 0b       	sbc	r24, r24
    2070:	99 0b       	sbc	r25, r25
    2072:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    2076:	2b 01       	movw	r4, r22
    2078:	3c 01       	movw	r6, r24
    207a:	a7 01       	movw	r20, r14
    207c:	96 01       	movw	r18, r12
    207e:	c7 01       	movw	r24, r14
    2080:	b6 01       	movw	r22, r12
    2082:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    2086:	9b 01       	movw	r18, r22
    2088:	ac 01       	movw	r20, r24
    208a:	c3 01       	movw	r24, r6
    208c:	b2 01       	movw	r22, r4
    208e:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    2092:	9b 01       	movw	r18, r22
    2094:	ac 01       	movw	r20, r24
    2096:	c5 01       	movw	r24, r10
    2098:	b4 01       	movw	r22, r8
    209a:	0e 94 ce 23 	call	0x479c	; 0x479c <__addsf3>
    209e:	6b 01       	movw	r12, r22
    20a0:	7c 01       	movw	r14, r24
    20a2:	0e 94 b1 24 	call	0x4962	; 0x4962 <__fixsfsi>
    20a6:	60 93 82 04 	sts	0x0482, r22	; 0x800482 <temp_calibrated>
    20aa:	70 93 83 04 	sts	0x0483, r23	; 0x800483 <temp_calibrated+0x1>
    20ae:	80 93 84 04 	sts	0x0484, r24	; 0x800484 <temp_calibrated+0x2>
    20b2:	90 93 85 04 	sts	0x0485, r25	; 0x800485 <temp_calibrated+0x3>
	t = (var1 + var2)/5120.0;
	
	return t;
    20b6:	20 e0       	ldi	r18, 0x00	; 0
    20b8:	30 e0       	ldi	r19, 0x00	; 0
    20ba:	40 ea       	ldi	r20, 0xA0	; 160
    20bc:	55 e4       	ldi	r21, 0x45	; 69
    20be:	c7 01       	movw	r24, r14
    20c0:	b6 01       	movw	r22, r12
    20c2:	0e 94 3f 24 	call	0x487e	; 0x487e <__divsf3>
}
    20c6:	ff 90       	pop	r15
    20c8:	ef 90       	pop	r14
    20ca:	df 90       	pop	r13
    20cc:	cf 90       	pop	r12
    20ce:	bf 90       	pop	r11
    20d0:	af 90       	pop	r10
    20d2:	9f 90       	pop	r9
    20d4:	8f 90       	pop	r8
    20d6:	7f 90       	pop	r7
    20d8:	6f 90       	pop	r6
    20da:	5f 90       	pop	r5
    20dc:	4f 90       	pop	r4
    20de:	08 95       	ret

000020e0 <bmp280_readPressure>:

double bmp280_readPressure(){
    20e0:	4f 92       	push	r4
    20e2:	5f 92       	push	r5
    20e4:	6f 92       	push	r6
    20e6:	7f 92       	push	r7
    20e8:	8f 92       	push	r8
    20ea:	9f 92       	push	r9
    20ec:	af 92       	push	r10
    20ee:	bf 92       	push	r11
    20f0:	cf 92       	push	r12
    20f2:	df 92       	push	r13
    20f4:	ef 92       	push	r14
    20f6:	ff 92       	push	r15
    20f8:	cf 93       	push	r28
    20fa:	df 93       	push	r29
    20fc:	00 d0       	rcall	.+0      	; 0x20fe <bmp280_readPressure+0x1e>
    20fe:	00 d0       	rcall	.+0      	; 0x2100 <bmp280_readPressure+0x20>
    2100:	cd b7       	in	r28, 0x3d	; 61
    2102:	de b7       	in	r29, 0x3e	; 62
	double var1, var2, p;
	
	int32_t adc_P = (int32_t)bmp280_readRegister3(BMP280_REG_PRESSUREDATA);
    2104:	87 ef       	ldi	r24, 0xF7	; 247
    2106:	0e 94 92 0f 	call	0x1f24	; 0x1f24 <bmp280_readRegister3>
    210a:	4b 01       	movw	r8, r22
    210c:	5c 01       	movw	r10, r24
	adc_P >>= 4;
	
	var1 = ((double)temp_calibrated/2.0)-64000.0;
    210e:	60 91 82 04 	lds	r22, 0x0482	; 0x800482 <temp_calibrated>
    2112:	70 91 83 04 	lds	r23, 0x0483	; 0x800483 <temp_calibrated+0x1>
    2116:	80 91 84 04 	lds	r24, 0x0484	; 0x800484 <temp_calibrated+0x2>
    211a:	90 91 85 04 	lds	r25, 0x0485	; 0x800485 <temp_calibrated+0x3>
    211e:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    2122:	20 e0       	ldi	r18, 0x00	; 0
    2124:	30 e0       	ldi	r19, 0x00	; 0
    2126:	40 e0       	ldi	r20, 0x00	; 0
    2128:	5f e3       	ldi	r21, 0x3F	; 63
    212a:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    212e:	20 e0       	ldi	r18, 0x00	; 0
    2130:	30 e0       	ldi	r19, 0x00	; 0
    2132:	4a e7       	ldi	r20, 0x7A	; 122
    2134:	57 e4       	ldi	r21, 0x47	; 71
    2136:	0e 94 cd 23 	call	0x479a	; 0x479a <__subsf3>
    213a:	6b 01       	movw	r12, r22
    213c:	7c 01       	movw	r14, r24
	var2 = var1*var1*((double)dig_P6)/32768.0;
    213e:	60 91 98 04 	lds	r22, 0x0498	; 0x800498 <dig_P6>
    2142:	70 91 99 04 	lds	r23, 0x0499	; 0x800499 <dig_P6+0x1>
    2146:	07 2e       	mov	r0, r23
    2148:	00 0c       	add	r0, r0
    214a:	88 0b       	sbc	r24, r24
    214c:	99 0b       	sbc	r25, r25
    214e:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    2152:	2b 01       	movw	r4, r22
    2154:	3c 01       	movw	r6, r24
    2156:	a7 01       	movw	r20, r14
    2158:	96 01       	movw	r18, r12
    215a:	c7 01       	movw	r24, r14
    215c:	b6 01       	movw	r22, r12
    215e:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    2162:	9b 01       	movw	r18, r22
    2164:	ac 01       	movw	r20, r24
    2166:	c3 01       	movw	r24, r6
    2168:	b2 01       	movw	r22, r4
    216a:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    216e:	20 e0       	ldi	r18, 0x00	; 0
    2170:	30 e0       	ldi	r19, 0x00	; 0
    2172:	40 e0       	ldi	r20, 0x00	; 0
    2174:	58 e3       	ldi	r21, 0x38	; 56
    2176:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    217a:	2b 01       	movw	r4, r22
    217c:	3c 01       	movw	r6, r24
	var2 = var2+var1*((double)dig_P5)/2.0;
	var2 = (var2/4.0)+(((double)dig_P4)*65536.0);
    217e:	60 91 8c 04 	lds	r22, 0x048C	; 0x80048c <dig_P5>
    2182:	70 91 8d 04 	lds	r23, 0x048D	; 0x80048d <dig_P5+0x1>
    2186:	07 2e       	mov	r0, r23
    2188:	00 0c       	add	r0, r0
    218a:	88 0b       	sbc	r24, r24
    218c:	99 0b       	sbc	r25, r25
    218e:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    2192:	a7 01       	movw	r20, r14
    2194:	96 01       	movw	r18, r12
    2196:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    219a:	20 e0       	ldi	r18, 0x00	; 0
    219c:	30 e0       	ldi	r19, 0x00	; 0
    219e:	40 e0       	ldi	r20, 0x00	; 0
    21a0:	5f e3       	ldi	r21, 0x3F	; 63
    21a2:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    21a6:	a3 01       	movw	r20, r6
    21a8:	92 01       	movw	r18, r4
    21aa:	0e 94 ce 23 	call	0x479c	; 0x479c <__addsf3>
    21ae:	20 e0       	ldi	r18, 0x00	; 0
    21b0:	30 e0       	ldi	r19, 0x00	; 0
    21b2:	40 e8       	ldi	r20, 0x80	; 128
    21b4:	5e e3       	ldi	r21, 0x3E	; 62
    21b6:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    21ba:	69 83       	std	Y+1, r22	; 0x01
    21bc:	7a 83       	std	Y+2, r23	; 0x02
    21be:	8b 83       	std	Y+3, r24	; 0x03
    21c0:	9c 83       	std	Y+4, r25	; 0x04
	var1 = (((double)dig_P3)*var1*var1/524288.0+((double)dig_P2)*var1)/524288.0;
    21c2:	60 91 90 04 	lds	r22, 0x0490	; 0x800490 <dig_P3>
    21c6:	70 91 91 04 	lds	r23, 0x0491	; 0x800491 <dig_P3+0x1>
    21ca:	07 2e       	mov	r0, r23
    21cc:	00 0c       	add	r0, r0
    21ce:	88 0b       	sbc	r24, r24
    21d0:	99 0b       	sbc	r25, r25
    21d2:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    21d6:	a7 01       	movw	r20, r14
    21d8:	96 01       	movw	r18, r12
    21da:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    21de:	a7 01       	movw	r20, r14
    21e0:	96 01       	movw	r18, r12
    21e2:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    21e6:	20 e0       	ldi	r18, 0x00	; 0
    21e8:	30 e0       	ldi	r19, 0x00	; 0
    21ea:	40 e0       	ldi	r20, 0x00	; 0
    21ec:	56 e3       	ldi	r21, 0x36	; 54
    21ee:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    21f2:	2b 01       	movw	r4, r22
    21f4:	3c 01       	movw	r6, r24
    21f6:	60 91 88 04 	lds	r22, 0x0488	; 0x800488 <dig_P2>
    21fa:	70 91 89 04 	lds	r23, 0x0489	; 0x800489 <dig_P2+0x1>
    21fe:	07 2e       	mov	r0, r23
    2200:	00 0c       	add	r0, r0
    2202:	88 0b       	sbc	r24, r24
    2204:	99 0b       	sbc	r25, r25
    2206:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    220a:	a7 01       	movw	r20, r14
    220c:	96 01       	movw	r18, r12
    220e:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    2212:	9b 01       	movw	r18, r22
    2214:	ac 01       	movw	r20, r24
    2216:	c3 01       	movw	r24, r6
    2218:	b2 01       	movw	r22, r4
    221a:	0e 94 ce 23 	call	0x479c	; 0x479c <__addsf3>
	var1 = (1.0 + var1/32768.0)*((double)dig_P1);
    221e:	20 e0       	ldi	r18, 0x00	; 0
    2220:	30 e0       	ldi	r19, 0x00	; 0
    2222:	40 e0       	ldi	r20, 0x00	; 0
    2224:	56 e3       	ldi	r21, 0x36	; 54
    2226:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    222a:	20 e0       	ldi	r18, 0x00	; 0
    222c:	30 e0       	ldi	r19, 0x00	; 0
    222e:	40 e0       	ldi	r20, 0x00	; 0
    2230:	58 e3       	ldi	r21, 0x38	; 56
    2232:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    2236:	20 e0       	ldi	r18, 0x00	; 0
    2238:	30 e0       	ldi	r19, 0x00	; 0
    223a:	40 e8       	ldi	r20, 0x80	; 128
    223c:	5f e3       	ldi	r21, 0x3F	; 63
    223e:	0e 94 ce 23 	call	0x479c	; 0x479c <__addsf3>
    2242:	6b 01       	movw	r12, r22
    2244:	7c 01       	movw	r14, r24
	p = 1048576.0 - (double)adc_P;
	p = (p - (var2/4096.0))*6250.0/var1;
    2246:	c5 01       	movw	r24, r10
    2248:	b4 01       	movw	r22, r8
    224a:	24 e0       	ldi	r18, 0x04	; 4
    224c:	95 95       	asr	r25
    224e:	87 95       	ror	r24
    2250:	77 95       	ror	r23
    2252:	67 95       	ror	r22
    2254:	2a 95       	dec	r18
    2256:	d1 f7       	brne	.-12     	; 0x224c <bmp280_readPressure+0x16c>
    2258:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    225c:	9b 01       	movw	r18, r22
    225e:	ac 01       	movw	r20, r24
    2260:	60 e0       	ldi	r22, 0x00	; 0
    2262:	70 e0       	ldi	r23, 0x00	; 0
    2264:	80 e8       	ldi	r24, 0x80	; 128
    2266:	99 e4       	ldi	r25, 0x49	; 73
    2268:	0e 94 cd 23 	call	0x479a	; 0x479a <__subsf3>
    226c:	4b 01       	movw	r8, r22
    226e:	5c 01       	movw	r10, r24
    2270:	60 91 8a 04 	lds	r22, 0x048A	; 0x80048a <dig_P4>
    2274:	70 91 8b 04 	lds	r23, 0x048B	; 0x80048b <dig_P4+0x1>
    2278:	07 2e       	mov	r0, r23
    227a:	00 0c       	add	r0, r0
    227c:	88 0b       	sbc	r24, r24
    227e:	99 0b       	sbc	r25, r25
    2280:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    2284:	20 e0       	ldi	r18, 0x00	; 0
    2286:	30 e0       	ldi	r19, 0x00	; 0
    2288:	40 e8       	ldi	r20, 0x80	; 128
    228a:	57 e4       	ldi	r21, 0x47	; 71
    228c:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    2290:	29 81       	ldd	r18, Y+1	; 0x01
    2292:	3a 81       	ldd	r19, Y+2	; 0x02
    2294:	4b 81       	ldd	r20, Y+3	; 0x03
    2296:	5c 81       	ldd	r21, Y+4	; 0x04
    2298:	0e 94 ce 23 	call	0x479c	; 0x479c <__addsf3>
    229c:	20 e0       	ldi	r18, 0x00	; 0
    229e:	30 e0       	ldi	r19, 0x00	; 0
    22a0:	40 e8       	ldi	r20, 0x80	; 128
    22a2:	59 e3       	ldi	r21, 0x39	; 57
    22a4:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    22a8:	9b 01       	movw	r18, r22
    22aa:	ac 01       	movw	r20, r24
    22ac:	c5 01       	movw	r24, r10
    22ae:	b4 01       	movw	r22, r8
    22b0:	0e 94 cd 23 	call	0x479a	; 0x479a <__subsf3>
    22b4:	20 e0       	ldi	r18, 0x00	; 0
    22b6:	30 e5       	ldi	r19, 0x50	; 80
    22b8:	43 ec       	ldi	r20, 0xC3	; 195
    22ba:	55 e4       	ldi	r21, 0x45	; 69
    22bc:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    22c0:	4b 01       	movw	r8, r22
    22c2:	5c 01       	movw	r10, r24
    22c4:	60 91 8e 04 	lds	r22, 0x048E	; 0x80048e <dig_P1>
    22c8:	70 91 8f 04 	lds	r23, 0x048F	; 0x80048f <dig_P1+0x1>
    22cc:	80 e0       	ldi	r24, 0x00	; 0
    22ce:	90 e0       	ldi	r25, 0x00	; 0
    22d0:	0e 94 e7 24 	call	0x49ce	; 0x49ce <__floatunsisf>
    22d4:	a7 01       	movw	r20, r14
    22d6:	96 01       	movw	r18, r12
    22d8:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    22dc:	9b 01       	movw	r18, r22
    22de:	ac 01       	movw	r20, r24
    22e0:	c5 01       	movw	r24, r10
    22e2:	b4 01       	movw	r22, r8
    22e4:	0e 94 3f 24 	call	0x487e	; 0x487e <__divsf3>
    22e8:	6b 01       	movw	r12, r22
    22ea:	7c 01       	movw	r14, r24
	var1 = ((double)dig_P9)*p*p/2147483648.0;
	var2 = p*((double)dig_P8)/32768.0;
	
	p = p+(var1+var2+((double)dig_P7))/16.0;
    22ec:	60 91 94 04 	lds	r22, 0x0494	; 0x800494 <dig_P9>
    22f0:	70 91 95 04 	lds	r23, 0x0495	; 0x800495 <dig_P9+0x1>
    22f4:	07 2e       	mov	r0, r23
    22f6:	00 0c       	add	r0, r0
    22f8:	88 0b       	sbc	r24, r24
    22fa:	99 0b       	sbc	r25, r25
    22fc:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    2300:	a7 01       	movw	r20, r14
    2302:	96 01       	movw	r18, r12
    2304:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    2308:	a7 01       	movw	r20, r14
    230a:	96 01       	movw	r18, r12
    230c:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    2310:	20 e0       	ldi	r18, 0x00	; 0
    2312:	30 e0       	ldi	r19, 0x00	; 0
    2314:	40 e0       	ldi	r20, 0x00	; 0
    2316:	50 e3       	ldi	r21, 0x30	; 48
    2318:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    231c:	4b 01       	movw	r8, r22
    231e:	5c 01       	movw	r10, r24
    2320:	60 91 92 04 	lds	r22, 0x0492	; 0x800492 <dig_P8>
    2324:	70 91 93 04 	lds	r23, 0x0493	; 0x800493 <dig_P8+0x1>
    2328:	07 2e       	mov	r0, r23
    232a:	00 0c       	add	r0, r0
    232c:	88 0b       	sbc	r24, r24
    232e:	99 0b       	sbc	r25, r25
    2330:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    2334:	a7 01       	movw	r20, r14
    2336:	96 01       	movw	r18, r12
    2338:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    233c:	20 e0       	ldi	r18, 0x00	; 0
    233e:	30 e0       	ldi	r19, 0x00	; 0
    2340:	40 e0       	ldi	r20, 0x00	; 0
    2342:	58 e3       	ldi	r21, 0x38	; 56
    2344:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    2348:	9b 01       	movw	r18, r22
    234a:	ac 01       	movw	r20, r24
    234c:	c5 01       	movw	r24, r10
    234e:	b4 01       	movw	r22, r8
    2350:	0e 94 ce 23 	call	0x479c	; 0x479c <__addsf3>
    2354:	4b 01       	movw	r8, r22
    2356:	5c 01       	movw	r10, r24
    2358:	60 91 7e 04 	lds	r22, 0x047E	; 0x80047e <dig_P7>
    235c:	70 91 7f 04 	lds	r23, 0x047F	; 0x80047f <dig_P7+0x1>
    2360:	07 2e       	mov	r0, r23
    2362:	00 0c       	add	r0, r0
    2364:	88 0b       	sbc	r24, r24
    2366:	99 0b       	sbc	r25, r25
    2368:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    236c:	9b 01       	movw	r18, r22
    236e:	ac 01       	movw	r20, r24
    2370:	c5 01       	movw	r24, r10
    2372:	b4 01       	movw	r22, r8
    2374:	0e 94 ce 23 	call	0x479c	; 0x479c <__addsf3>
    2378:	20 e0       	ldi	r18, 0x00	; 0
    237a:	30 e0       	ldi	r19, 0x00	; 0
    237c:	40 e8       	ldi	r20, 0x80	; 128
    237e:	5d e3       	ldi	r21, 0x3D	; 61
    2380:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <__mulsf3>
    2384:	9b 01       	movw	r18, r22
    2386:	ac 01       	movw	r20, r24
	return p;
    2388:	c7 01       	movw	r24, r14
    238a:	b6 01       	movw	r22, r12
    238c:	0e 94 ce 23 	call	0x479c	; 0x479c <__addsf3>
}
    2390:	0f 90       	pop	r0
    2392:	0f 90       	pop	r0
    2394:	0f 90       	pop	r0
    2396:	0f 90       	pop	r0
    2398:	df 91       	pop	r29
    239a:	cf 91       	pop	r28
    239c:	ff 90       	pop	r15
    239e:	ef 90       	pop	r14
    23a0:	df 90       	pop	r13
    23a2:	cf 90       	pop	r12
    23a4:	bf 90       	pop	r11
    23a6:	af 90       	pop	r10
    23a8:	9f 90       	pop	r9
    23aa:	8f 90       	pop	r8
    23ac:	7f 90       	pop	r7
    23ae:	6f 90       	pop	r6
    23b0:	5f 90       	pop	r5
    23b2:	4f 90       	pop	r4
    23b4:	08 95       	ret

000023b6 <DHT_Setup>:

//Read temperature in Celsius.
enum DHT_Status_t DHT_GetTemperature(double *Temperature)
{
	double *waste = 0;
	return DHT_Read(Temperature, waste);
    23b6:	2f e7       	ldi	r18, 0x7F	; 127
    23b8:	8a e1       	ldi	r24, 0x1A	; 26
    23ba:	96 e0       	ldi	r25, 0x06	; 6
    23bc:	21 50       	subi	r18, 0x01	; 1
    23be:	80 40       	sbci	r24, 0x00	; 0
    23c0:	90 40       	sbci	r25, 0x00	; 0
    23c2:	e1 f7       	brne	.-8      	; 0x23bc <DHT_Setup+0x6>
    23c4:	00 c0       	rjmp	.+0      	; 0x23c6 <DHT_Setup+0x10>
    23c6:	00 00       	nop
    23c8:	10 92 9a 04 	sts	0x049A, r1	; 0x80049a <__DHT_STATUS>
    23cc:	08 95       	ret

000023ce <DHT_ReadRaw>:
    23ce:	af 92       	push	r10
    23d0:	bf 92       	push	r11
    23d2:	cf 92       	push	r12
    23d4:	df 92       	push	r13
    23d6:	ef 92       	push	r14
    23d8:	ff 92       	push	r15
    23da:	0f 93       	push	r16
    23dc:	1f 93       	push	r17
    23de:	cf 93       	push	r28
    23e0:	df 93       	push	r29
    23e2:	00 d0       	rcall	.+0      	; 0x23e4 <DHT_ReadRaw+0x16>
    23e4:	00 d0       	rcall	.+0      	; 0x23e6 <DHT_ReadRaw+0x18>
    23e6:	1f 92       	push	r1
    23e8:	cd b7       	in	r28, 0x3d	; 61
    23ea:	de b7       	in	r29, 0x3e	; 62
    23ec:	fe 01       	movw	r30, r28
    23ee:	31 96       	adiw	r30, 0x01	; 1
    23f0:	25 e0       	ldi	r18, 0x05	; 5
    23f2:	df 01       	movw	r26, r30
    23f4:	1d 92       	st	X+, r1
    23f6:	2a 95       	dec	r18
    23f8:	e9 f7       	brne	.-6      	; 0x23f4 <DHT_ReadRaw+0x26>
    23fa:	10 92 9a 04 	sts	0x049A, r1	; 0x80049a <__DHT_STATUS>
    23fe:	ad 98       	cbi	0x15, 5	; 21
    2400:	a5 9a       	sbi	0x14, 5	; 20
    2402:	a3 ed       	ldi	r26, 0xD3	; 211
    2404:	b0 e3       	ldi	r27, 0x30	; 48
    2406:	11 97       	sbiw	r26, 0x01	; 1
    2408:	f1 f7       	brne	.-4      	; 0x2406 <DHT_ReadRaw+0x38>
    240a:	00 c0       	rjmp	.+0      	; 0x240c <DHT_ReadRaw+0x3e>
    240c:	00 00       	nop
    240e:	ad 9a       	sbi	0x15, 5	; 21
    2410:	a5 98       	cbi	0x14, 5	; 20
    2412:	2f e1       	ldi	r18, 0x1F	; 31
    2414:	9d 9b       	sbis	0x13, 5	; 19
    2416:	06 c0       	rjmp	.+12     	; 0x2424 <DHT_ReadRaw+0x56>
    2418:	00 c0       	rjmp	.+0      	; 0x241a <DHT_ReadRaw+0x4c>
    241a:	21 50       	subi	r18, 0x01	; 1
    241c:	d9 f7       	brne	.-10     	; 0x2414 <DHT_ReadRaw+0x46>
    241e:	24 e0       	ldi	r18, 0x04	; 4
    2420:	20 93 9a 04 	sts	0x049A, r18	; 0x80049a <__DHT_STATUS>
    2424:	20 91 9a 04 	lds	r18, 0x049A	; 0x80049a <__DHT_STATUS>
    2428:	21 11       	cpse	r18, r1
    242a:	12 c0       	rjmp	.+36     	; 0x2450 <DHT_ReadRaw+0x82>
    242c:	23 e3       	ldi	r18, 0x33	; 51
    242e:	9d 99       	sbic	0x13, 5	; 19
    2430:	06 c0       	rjmp	.+12     	; 0x243e <DHT_ReadRaw+0x70>
    2432:	00 c0       	rjmp	.+0      	; 0x2434 <DHT_ReadRaw+0x66>
    2434:	21 50       	subi	r18, 0x01	; 1
    2436:	d9 f7       	brne	.-10     	; 0x242e <DHT_ReadRaw+0x60>
    2438:	24 e0       	ldi	r18, 0x04	; 4
    243a:	20 93 9a 04 	sts	0x049A, r18	; 0x80049a <__DHT_STATUS>
    243e:	23 e3       	ldi	r18, 0x33	; 51
    2440:	9d 9b       	sbis	0x13, 5	; 19
    2442:	06 c0       	rjmp	.+12     	; 0x2450 <DHT_ReadRaw+0x82>
    2444:	00 c0       	rjmp	.+0      	; 0x2446 <DHT_ReadRaw+0x78>
    2446:	21 50       	subi	r18, 0x01	; 1
    2448:	d9 f7       	brne	.-10     	; 0x2440 <DHT_ReadRaw+0x72>
    244a:	24 e0       	ldi	r18, 0x04	; 4
    244c:	20 93 9a 04 	sts	0x049A, r18	; 0x80049a <__DHT_STATUS>
    2450:	20 91 9a 04 	lds	r18, 0x049A	; 0x80049a <__DHT_STATUS>
    2454:	21 11       	cpse	r18, r1
    2456:	3b c0       	rjmp	.+118    	; 0x24ce <DHT_ReadRaw+0x100>
    2458:	30 e0       	ldi	r19, 0x00	; 0
    245a:	c1 2c       	mov	r12, r1
    245c:	d1 2c       	mov	r13, r1
    245e:	76 01       	movw	r14, r12
    2460:	c3 94       	inc	r12
    2462:	44 e0       	ldi	r20, 0x04	; 4
    2464:	a4 2e       	mov	r10, r20
    2466:	27 e0       	ldi	r18, 0x07	; 7
    2468:	44 e2       	ldi	r20, 0x24	; 36
    246a:	9d 99       	sbic	0x13, 5	; 19
    246c:	07 c0       	rjmp	.+14     	; 0x247c <DHT_ReadRaw+0xae>
    246e:	00 c0       	rjmp	.+0      	; 0x2470 <DHT_ReadRaw+0xa2>
    2470:	41 50       	subi	r20, 0x01	; 1
    2472:	d9 f7       	brne	.-10     	; 0x246a <DHT_ReadRaw+0x9c>
    2474:	a0 92 9a 04 	sts	0x049A, r10	; 0x80049a <__DHT_STATUS>
    2478:	2f ef       	ldi	r18, 0xFF	; 255
    247a:	35 e0       	ldi	r19, 0x05	; 5
    247c:	40 91 9a 04 	lds	r20, 0x049A	; 0x80049a <__DHT_STATUS>
    2480:	41 11       	cpse	r20, r1
    2482:	1f c0       	rjmp	.+62     	; 0x24c2 <DHT_ReadRaw+0xf4>
    2484:	bb e0       	ldi	r27, 0x0B	; 11
    2486:	ba 95       	dec	r27
    2488:	f1 f7       	brne	.-4      	; 0x2486 <DHT_ReadRaw+0xb8>
    248a:	00 c0       	rjmp	.+0      	; 0x248c <DHT_ReadRaw+0xbe>
    248c:	9d 9b       	sbis	0x13, 5	; 19
    248e:	11 c0       	rjmp	.+34     	; 0x24b2 <DHT_ReadRaw+0xe4>
    2490:	8f 01       	movw	r16, r30
    2492:	03 0f       	add	r16, r19
    2494:	11 1d       	adc	r17, r1
    2496:	d8 01       	movw	r26, r16
    2498:	bc 90       	ld	r11, X
    249a:	b7 01       	movw	r22, r14
    249c:	a6 01       	movw	r20, r12
    249e:	02 2e       	mov	r0, r18
    24a0:	04 c0       	rjmp	.+8      	; 0x24aa <DHT_ReadRaw+0xdc>
    24a2:	44 0f       	add	r20, r20
    24a4:	55 1f       	adc	r21, r21
    24a6:	66 1f       	adc	r22, r22
    24a8:	77 1f       	adc	r23, r23
    24aa:	0a 94       	dec	r0
    24ac:	d2 f7       	brpl	.-12     	; 0x24a2 <DHT_ReadRaw+0xd4>
    24ae:	4b 29       	or	r20, r11
    24b0:	4c 93       	st	X, r20
    24b2:	43 e3       	ldi	r20, 0x33	; 51
    24b4:	9d 9b       	sbis	0x13, 5	; 19
    24b6:	05 c0       	rjmp	.+10     	; 0x24c2 <DHT_ReadRaw+0xf4>
    24b8:	00 c0       	rjmp	.+0      	; 0x24ba <DHT_ReadRaw+0xec>
    24ba:	41 50       	subi	r20, 0x01	; 1
    24bc:	d9 f7       	brne	.-10     	; 0x24b4 <DHT_ReadRaw+0xe6>
    24be:	a0 92 9a 04 	sts	0x049A, r10	; 0x80049a <__DHT_STATUS>
    24c2:	21 50       	subi	r18, 0x01	; 1
    24c4:	27 ff       	sbrs	r18, 7
    24c6:	d0 cf       	rjmp	.-96     	; 0x2468 <DHT_ReadRaw+0x9a>
    24c8:	3f 5f       	subi	r19, 0xFF	; 255
    24ca:	35 30       	cpi	r19, 0x05	; 5
    24cc:	60 f2       	brcs	.-104    	; 0x2466 <DHT_ReadRaw+0x98>
    24ce:	20 91 9a 04 	lds	r18, 0x049A	; 0x80049a <__DHT_STATUS>
    24d2:	21 11       	cpse	r18, r1
    24d4:	16 c0       	rjmp	.+44     	; 0x2502 <DHT_ReadRaw+0x134>
    24d6:	39 81       	ldd	r19, Y+1	; 0x01
    24d8:	2a 81       	ldd	r18, Y+2	; 0x02
    24da:	23 0f       	add	r18, r19
    24dc:	3b 81       	ldd	r19, Y+3	; 0x03
    24de:	23 0f       	add	r18, r19
    24e0:	3c 81       	ldd	r19, Y+4	; 0x04
    24e2:	23 0f       	add	r18, r19
    24e4:	3d 81       	ldd	r19, Y+5	; 0x05
    24e6:	23 17       	cp	r18, r19
    24e8:	21 f0       	breq	.+8      	; 0x24f2 <DHT_ReadRaw+0x124>
    24ea:	83 e0       	ldi	r24, 0x03	; 3
    24ec:	80 93 9a 04 	sts	0x049A, r24	; 0x80049a <__DHT_STATUS>
    24f0:	08 c0       	rjmp	.+16     	; 0x2502 <DHT_ReadRaw+0x134>
    24f2:	dc 01       	movw	r26, r24
    24f4:	ce 01       	movw	r24, r28
    24f6:	05 96       	adiw	r24, 0x05	; 5
    24f8:	21 91       	ld	r18, Z+
    24fa:	2d 93       	st	X+, r18
    24fc:	e8 17       	cp	r30, r24
    24fe:	f9 07       	cpc	r31, r25
    2500:	d9 f7       	brne	.-10     	; 0x24f8 <DHT_ReadRaw+0x12a>
    2502:	80 91 9a 04 	lds	r24, 0x049A	; 0x80049a <__DHT_STATUS>
    2506:	0f 90       	pop	r0
    2508:	0f 90       	pop	r0
    250a:	0f 90       	pop	r0
    250c:	0f 90       	pop	r0
    250e:	0f 90       	pop	r0
    2510:	df 91       	pop	r29
    2512:	cf 91       	pop	r28
    2514:	1f 91       	pop	r17
    2516:	0f 91       	pop	r16
    2518:	ff 90       	pop	r15
    251a:	ef 90       	pop	r14
    251c:	df 90       	pop	r13
    251e:	cf 90       	pop	r12
    2520:	bf 90       	pop	r11
    2522:	af 90       	pop	r10
    2524:	08 95       	ret

00002526 <DHT_Read>:
    2526:	8f 92       	push	r8
    2528:	9f 92       	push	r9
    252a:	af 92       	push	r10
    252c:	bf 92       	push	r11
    252e:	cf 92       	push	r12
    2530:	df 92       	push	r13
    2532:	ef 92       	push	r14
    2534:	ff 92       	push	r15
    2536:	0f 93       	push	r16
    2538:	1f 93       	push	r17
    253a:	cf 93       	push	r28
    253c:	df 93       	push	r29
    253e:	00 d0       	rcall	.+0      	; 0x2540 <DHT_Read+0x1a>
    2540:	00 d0       	rcall	.+0      	; 0x2542 <DHT_Read+0x1c>
    2542:	cd b7       	in	r28, 0x3d	; 61
    2544:	de b7       	in	r29, 0x3e	; 62
    2546:	8c 01       	movw	r16, r24
    2548:	5b 01       	movw	r10, r22
    254a:	19 82       	std	Y+1, r1	; 0x01
    254c:	1a 82       	std	Y+2, r1	; 0x02
    254e:	1b 82       	std	Y+3, r1	; 0x03
    2550:	1c 82       	std	Y+4, r1	; 0x04
    2552:	ce 01       	movw	r24, r28
    2554:	01 96       	adiw	r24, 0x01	; 1
    2556:	0e 94 e7 11 	call	0x23ce	; 0x23ce <DHT_ReadRaw>
    255a:	81 11       	cpse	r24, r1
    255c:	49 c0       	rjmp	.+146    	; 0x25f0 <DHT_Read+0xca>
    255e:	6b 81       	ldd	r22, Y+3	; 0x03
    2560:	70 e0       	ldi	r23, 0x00	; 0
    2562:	80 e0       	ldi	r24, 0x00	; 0
    2564:	90 e0       	ldi	r25, 0x00	; 0
    2566:	0e 94 e7 24 	call	0x49ce	; 0x49ce <__floatunsisf>
    256a:	f8 01       	movw	r30, r16
    256c:	60 83       	st	Z, r22
    256e:	71 83       	std	Z+1, r23	; 0x01
    2570:	82 83       	std	Z+2, r24	; 0x02
    2572:	93 83       	std	Z+3, r25	; 0x03
    2574:	69 81       	ldd	r22, Y+1	; 0x01
    2576:	70 e0       	ldi	r23, 0x00	; 0
    2578:	80 e0       	ldi	r24, 0x00	; 0
    257a:	90 e0       	ldi	r25, 0x00	; 0
    257c:	0e 94 e7 24 	call	0x49ce	; 0x49ce <__floatunsisf>
    2580:	6b 01       	movw	r12, r22
    2582:	7c 01       	movw	r14, r24
    2584:	f5 01       	movw	r30, r10
    2586:	60 83       	st	Z, r22
    2588:	71 83       	std	Z+1, r23	; 0x01
    258a:	82 83       	std	Z+2, r24	; 0x02
    258c:	93 83       	std	Z+3, r25	; 0x03
    258e:	f8 01       	movw	r30, r16
    2590:	80 80       	ld	r8, Z
    2592:	91 80       	ldd	r9, Z+1	; 0x01
    2594:	a2 80       	ldd	r10, Z+2	; 0x02
    2596:	b3 80       	ldd	r11, Z+3	; 0x03
    2598:	20 e0       	ldi	r18, 0x00	; 0
    259a:	30 e0       	ldi	r19, 0x00	; 0
    259c:	a9 01       	movw	r20, r18
    259e:	c5 01       	movw	r24, r10
    25a0:	b4 01       	movw	r22, r8
    25a2:	0e 94 3a 24 	call	0x4874	; 0x4874 <__cmpsf2>
    25a6:	87 fd       	sbrc	r24, 7
    25a8:	0a c0       	rjmp	.+20     	; 0x25be <DHT_Read+0x98>
    25aa:	20 e0       	ldi	r18, 0x00	; 0
    25ac:	30 e0       	ldi	r19, 0x00	; 0
    25ae:	48 e4       	ldi	r20, 0x48	; 72
    25b0:	52 e4       	ldi	r21, 0x42	; 66
    25b2:	c5 01       	movw	r24, r10
    25b4:	b4 01       	movw	r22, r8
    25b6:	0e 94 99 25 	call	0x4b32	; 0x4b32 <__gesf2>
    25ba:	18 16       	cp	r1, r24
    25bc:	14 f4       	brge	.+4      	; 0x25c2 <DHT_Read+0x9c>
    25be:	82 e0       	ldi	r24, 0x02	; 2
    25c0:	15 c0       	rjmp	.+42     	; 0x25ec <DHT_Read+0xc6>
    25c2:	20 e0       	ldi	r18, 0x00	; 0
    25c4:	30 e0       	ldi	r19, 0x00	; 0
    25c6:	40 ea       	ldi	r20, 0xA0	; 160
    25c8:	51 e4       	ldi	r21, 0x41	; 65
    25ca:	c7 01       	movw	r24, r14
    25cc:	b6 01       	movw	r22, r12
    25ce:	0e 94 3a 24 	call	0x4874	; 0x4874 <__cmpsf2>
    25d2:	87 fd       	sbrc	r24, 7
    25d4:	0a c0       	rjmp	.+20     	; 0x25ea <DHT_Read+0xc4>
    25d6:	20 e0       	ldi	r18, 0x00	; 0
    25d8:	30 e0       	ldi	r19, 0x00	; 0
    25da:	44 eb       	ldi	r20, 0xB4	; 180
    25dc:	52 e4       	ldi	r21, 0x42	; 66
    25de:	c7 01       	movw	r24, r14
    25e0:	b6 01       	movw	r22, r12
    25e2:	0e 94 99 25 	call	0x4b32	; 0x4b32 <__gesf2>
    25e6:	18 16       	cp	r1, r24
    25e8:	1c f4       	brge	.+6      	; 0x25f0 <DHT_Read+0xca>
    25ea:	81 e0       	ldi	r24, 0x01	; 1
    25ec:	80 93 9a 04 	sts	0x049A, r24	; 0x80049a <__DHT_STATUS>
    25f0:	80 91 9a 04 	lds	r24, 0x049A	; 0x80049a <__DHT_STATUS>
    25f4:	0f 90       	pop	r0
    25f6:	0f 90       	pop	r0
    25f8:	0f 90       	pop	r0
    25fa:	0f 90       	pop	r0
    25fc:	df 91       	pop	r29
    25fe:	cf 91       	pop	r28
    2600:	1f 91       	pop	r17
    2602:	0f 91       	pop	r16
    2604:	ff 90       	pop	r15
    2606:	ef 90       	pop	r14
    2608:	df 90       	pop	r13
    260a:	cf 90       	pop	r12
    260c:	bf 90       	pop	r11
    260e:	af 90       	pop	r10
    2610:	9f 90       	pop	r9
    2612:	8f 90       	pop	r8
    2614:	08 95       	ret

00002616 <DHT_GetHumidity>:

//Read humidity percentage.
enum DHT_Status_t DHT_GetHumidity(double *Humidity)
{
	double *waste = 0;
	return DHT_Read(waste, Humidity);
    2616:	bc 01       	movw	r22, r24
    2618:	80 e0       	ldi	r24, 0x00	; 0
    261a:	90 e0       	ldi	r25, 0x00	; 0
    261c:	0c 94 93 12 	jmp	0x2526	; 0x2526 <DHT_Read>

00002620 <ds18b20_reset>:
 *  Author: ThePetrovich
 */ 
#include "../ds18b20.h"

uint8_t ds18b20_reset(){
	cli();
    2620:	f8 94       	cli
	DS18B20_PORT &= ~(1 << DS18B20_IO);
    2622:	c7 98       	cbi	0x18, 7	; 24
	DS18B20_DDR |= (1 << DS18B20_IO);
    2624:	bf 9a       	sbi	0x17, 7	; 23
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2626:	8f eb       	ldi	r24, 0xBF	; 191
    2628:	93 e0       	ldi	r25, 0x03	; 3
    262a:	01 97       	sbiw	r24, 0x01	; 1
    262c:	f1 f7       	brne	.-4      	; 0x262a <ds18b20_reset+0xa>
    262e:	00 c0       	rjmp	.+0      	; 0x2630 <ds18b20_reset+0x10>
    2630:	00 00       	nop
	_delay_us(480);
	DS18B20_DDR &= ~(1 << DS18B20_IO);
    2632:	bf 98       	cbi	0x17, 7	; 23
    2634:	90 ea       	ldi	r25, 0xA0	; 160
    2636:	9a 95       	dec	r25
    2638:	f1 f7       	brne	.-4      	; 0x2636 <ds18b20_reset+0x16>
	_delay_us(60);
	uint8_t i = (DS18B20_PIN & (1<<DS18B20_IO));
    263a:	86 b3       	in	r24, 0x16	; 22
    263c:	e3 e3       	ldi	r30, 0x33	; 51
    263e:	f3 e0       	ldi	r31, 0x03	; 3
    2640:	31 97       	sbiw	r30, 0x01	; 1
    2642:	f1 f7       	brne	.-4      	; 0x2640 <ds18b20_reset+0x20>
    2644:	00 c0       	rjmp	.+0      	; 0x2646 <ds18b20_reset+0x26>
    2646:	00 00       	nop
	_delay_us(410);
	sei();
    2648:	78 94       	sei
	return i;
}
    264a:	80 78       	andi	r24, 0x80	; 128
    264c:	08 95       	ret

0000264e <ds18b20_writeBit>:

void ds18b20_writeBit(uint8_t value){
	cli();
    264e:	f8 94       	cli
	DS18B20_PORT &= ~(1 << DS18B20_IO);
    2650:	c7 98       	cbi	0x18, 7	; 24
	DS18B20_DDR |= (1 << DS18B20_IO);
    2652:	bf 9a       	sbi	0x17, 7	; 23
    2654:	90 e1       	ldi	r25, 0x10	; 16
    2656:	9a 95       	dec	r25
    2658:	f1 f7       	brne	.-4      	; 0x2656 <ds18b20_writeBit+0x8>
	_delay_us(6);
	if(value) 
    265a:	81 11       	cpse	r24, r1
		DS18B20_DDR &= ~(1 << DS18B20_IO);
    265c:	bf 98       	cbi	0x17, 7	; 23
    265e:	80 ea       	ldi	r24, 0xA0	; 160
    2660:	8a 95       	dec	r24
    2662:	f1 f7       	brne	.-4      	; 0x2660 <ds18b20_writeBit+0x12>
	_delay_us(60);
	DS18B20_DDR &= ~(1 << DS18B20_IO);
    2664:	bf 98       	cbi	0x17, 7	; 23
	sei();
    2666:	78 94       	sei
    2668:	08 95       	ret

0000266a <ds18b20_readBit>:
}

uint8_t ds18b20_readBit(void){
	uint8_t value = 0;
	cli();
    266a:	f8 94       	cli
	DS18B20_PORT &= ~(1 << DS18B20_IO);
    266c:	c7 98       	cbi	0x18, 7	; 24
	DS18B20_DDR |= (1 << DS18B20_IO);
    266e:	bf 9a       	sbi	0x17, 7	; 23
    2670:	80 e1       	ldi	r24, 0x10	; 16
    2672:	8a 95       	dec	r24
    2674:	f1 f7       	brne	.-4      	; 0x2672 <ds18b20_readBit+0x8>
	_delay_us(6);
	DS18B20_DDR &= ~(1 << DS18B20_IO);
    2676:	bf 98       	cbi	0x17, 7	; 23
    2678:	9a e1       	ldi	r25, 0x1A	; 26
    267a:	9a 95       	dec	r25
    267c:	f1 f7       	brne	.-4      	; 0x267a <ds18b20_readBit+0x10>
    267e:	00 c0       	rjmp	.+0      	; 0x2680 <ds18b20_readBit+0x16>
	_delay_us(10);
	if(DS18B20_PIN & (1<<DS18B20_IO)) 
    2680:	86 b3       	in	r24, 0x16	; 22
    2682:	92 e9       	ldi	r25, 0x92	; 146
    2684:	9a 95       	dec	r25
    2686:	f1 f7       	brne	.-4      	; 0x2684 <ds18b20_readBit+0x1a>
    2688:	00 c0       	rjmp	.+0      	; 0x268a <ds18b20_readBit+0x20>
		value = 1;
	_delay_us(55);
	sei();
    268a:	78 94       	sei
	return value;
}
    268c:	88 1f       	adc	r24, r24
    268e:	88 27       	eor	r24, r24
    2690:	88 1f       	adc	r24, r24
    2692:	08 95       	ret

00002694 <ds18b20_readByte>:

uint8_t ds18b20_readByte(void){
    2694:	cf 93       	push	r28
    2696:	df 93       	push	r29
    2698:	d8 e0       	ldi	r29, 0x08	; 8
	uint8_t n = 0;
    269a:	c0 e0       	ldi	r28, 0x00	; 0
	for(uint8_t i = 8; i != 0; i--){
		n = (n >> 1);
		n |= (ds18b20_readBit() << 7);
    269c:	0e 94 35 13 	call	0x266a	; 0x266a <ds18b20_readBit>
    26a0:	20 e8       	ldi	r18, 0x80	; 128
    26a2:	82 9f       	mul	r24, r18
    26a4:	c0 01       	movw	r24, r0
    26a6:	11 24       	eor	r1, r1
    26a8:	c6 95       	lsr	r28
    26aa:	c8 2b       	or	r28, r24
    26ac:	d1 50       	subi	r29, 0x01	; 1
	return value;
}

uint8_t ds18b20_readByte(void){
	uint8_t n = 0;
	for(uint8_t i = 8; i != 0; i--){
    26ae:	b1 f7       	brne	.-20     	; 0x269c <ds18b20_readByte+0x8>
		n = (n >> 1);
		n |= (ds18b20_readBit() << 7);
	}
	return n;
}
    26b0:	8c 2f       	mov	r24, r28
    26b2:	df 91       	pop	r29
    26b4:	cf 91       	pop	r28
    26b6:	08 95       	ret

000026b8 <ds18b20_writeByte>:

void ds18b20_writeByte(uint8_t value){
    26b8:	cf 93       	push	r28
    26ba:	df 93       	push	r29
    26bc:	d8 2f       	mov	r29, r24
    26be:	c8 e0       	ldi	r28, 0x08	; 8
	for(uint8_t i = 8; i != 0; i--){
		ds18b20_writeBit(value & 1);
    26c0:	8d 2f       	mov	r24, r29
    26c2:	81 70       	andi	r24, 0x01	; 1
    26c4:	0e 94 27 13 	call	0x264e	; 0x264e <ds18b20_writeBit>
		value = (value >> 1);
    26c8:	d6 95       	lsr	r29
    26ca:	c1 50       	subi	r28, 0x01	; 1
	}
	return n;
}

void ds18b20_writeByte(uint8_t value){
	for(uint8_t i = 8; i != 0; i--){
    26cc:	c9 f7       	brne	.-14     	; 0x26c0 <ds18b20_writeByte+0x8>
		ds18b20_writeBit(value & 1);
		value = (value >> 1);
	}
}
    26ce:	df 91       	pop	r29
    26d0:	cf 91       	pop	r28
    26d2:	08 95       	ret

000026d4 <ds18b20_requestTemperature>:

void ds18b20_requestTemperature(void){
	ds18b20_reset();
    26d4:	0e 94 10 13 	call	0x2620	; 0x2620 <ds18b20_reset>
	ds18b20_writeByte(DS_CMD_SKIPROM);
    26d8:	8c ec       	ldi	r24, 0xCC	; 204
    26da:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <ds18b20_writeByte>
	ds18b20_writeByte(DS_CMD_CONVERTTEMP);
    26de:	84 e4       	ldi	r24, 0x44	; 68
    26e0:	0c 94 5c 13 	jmp	0x26b8	; 0x26b8 <ds18b20_writeByte>

000026e4 <ds18b20_readTemperature>:
}
	
char * ds18b20_readTemperature(){
    26e4:	cf 93       	push	r28
    26e6:	df 93       	push	r29
	uint8_t raw[2];
	int8_t digit;
	uint16_t decimal;
	//float value = 0;
	
	ds18b20_reset();
    26e8:	0e 94 10 13 	call	0x2620	; 0x2620 <ds18b20_reset>
	ds18b20_writeByte(DS_CMD_SKIPROM);
    26ec:	8c ec       	ldi	r24, 0xCC	; 204
    26ee:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <ds18b20_writeByte>
	ds18b20_writeByte(DS_CMD_RSCRATCHPAD);
    26f2:	8e eb       	ldi	r24, 0xBE	; 190
    26f4:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <ds18b20_writeByte>
	
	raw[0] = ds18b20_readByte();
    26f8:	0e 94 4a 13 	call	0x2694	; 0x2694 <ds18b20_readByte>
    26fc:	d8 2f       	mov	r29, r24
	raw[1] = ds18b20_readByte();
    26fe:	0e 94 4a 13 	call	0x2694	; 0x2694 <ds18b20_readByte>
    2702:	c8 2f       	mov	r28, r24
	ds18b20_reset();
    2704:	0e 94 10 13 	call	0x2620	; 0x2620 <ds18b20_reset>
	
	digit = raw[0] >> 4;
    2708:	4d 2f       	mov	r20, r29
    270a:	42 95       	swap	r20
    270c:	4f 70       	andi	r20, 0x0F	; 15
	digit |= (raw[1] & 0x7) << 4;
	
	decimal = raw[0] & 0xF;
    270e:	df 70       	andi	r29, 0x0F	; 15
	decimal *= 625;
	
	sprintf(ds_data, "%d.%04u", digit, (unsigned int)decimal);
    2710:	81 e7       	ldi	r24, 0x71	; 113
    2712:	92 e0       	ldi	r25, 0x02	; 2
    2714:	d8 9f       	mul	r29, r24
    2716:	90 01       	movw	r18, r0
    2718:	d9 9f       	mul	r29, r25
    271a:	30 0d       	add	r19, r0
    271c:	11 24       	eor	r1, r1
    271e:	3f 93       	push	r19
    2720:	2f 93       	push	r18
    2722:	c7 70       	andi	r28, 0x07	; 7
    2724:	20 e1       	ldi	r18, 0x10	; 16
    2726:	c2 9f       	mul	r28, r18
    2728:	c0 01       	movw	r24, r0
    272a:	11 24       	eor	r1, r1
    272c:	84 2b       	or	r24, r20
    272e:	28 2f       	mov	r18, r24
    2730:	08 2e       	mov	r0, r24
    2732:	00 0c       	add	r0, r0
    2734:	33 0b       	sbc	r19, r19
    2736:	3f 93       	push	r19
    2738:	8f 93       	push	r24
    273a:	86 e0       	ldi	r24, 0x06	; 6
    273c:	91 e0       	ldi	r25, 0x01	; 1
    273e:	9f 93       	push	r25
    2740:	8f 93       	push	r24
    2742:	8a ea       	ldi	r24, 0xAA	; 170
    2744:	91 e0       	ldi	r25, 0x01	; 1
    2746:	9f 93       	push	r25
    2748:	8f 93       	push	r24
    274a:	0e 94 4a 2c 	call	0x5894	; 0x5894 <sprintf>
	/*if(digit < 0) value -= (float)(decimal / 1000);
	else value += (float)(decimal / 1000);*/
	
	return ds_data;
    274e:	8d b7       	in	r24, 0x3d	; 61
    2750:	9e b7       	in	r25, 0x3e	; 62
    2752:	08 96       	adiw	r24, 0x08	; 8
    2754:	0f b6       	in	r0, 0x3f	; 63
    2756:	f8 94       	cli
    2758:	9e bf       	out	0x3e, r25	; 62
    275a:	0f be       	out	0x3f, r0	; 63
    275c:	8d bf       	out	0x3d, r24	; 61
    275e:	8a ea       	ldi	r24, 0xAA	; 170
    2760:	91 e0       	ldi	r25, 0x01	; 1
    2762:	df 91       	pop	r29
    2764:	cf 91       	pop	r28
    2766:	08 95       	ret

00002768 <spi_timerISR>:
		debug_logMessage(PGM_ON, L_ERROR, PSTR("spid: operation timeout\r\n"));
		return;
	}
	
	spi_cshigh();
}
    2768:	81 e0       	ldi	r24, 0x01	; 1
    276a:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <spi_interruptFlag>
    276e:	08 95       	ret

00002770 <spi_init>:
    2770:	87 b3       	in	r24, 0x17	; 23
    2772:	87 60       	ori	r24, 0x07	; 7
    2774:	87 bb       	out	0x17, r24	; 23
    2776:	88 b3       	in	r24, 0x18	; 24
    2778:	8f 60       	ori	r24, 0x0F	; 15
    277a:	88 bb       	out	0x18, r24	; 24
    277c:	1e b8       	out	0x0e, r1	; 14
    277e:	08 95       	ret

00002780 <spi_writeRegister>:
    2780:	0f 93       	push	r16
    2782:	1f 93       	push	r17
    2784:	cf 93       	push	r28
    2786:	df 93       	push	r29
    2788:	d8 2f       	mov	r29, r24
    278a:	16 2f       	mov	r17, r22
    278c:	c4 2f       	mov	r28, r20
    278e:	02 2f       	mov	r16, r18
    2790:	4a ef       	ldi	r20, 0xFA	; 250
    2792:	50 e0       	ldi	r21, 0x00	; 0
    2794:	60 e0       	ldi	r22, 0x00	; 0
    2796:	70 e0       	ldi	r23, 0x00	; 0
    2798:	84 eb       	ldi	r24, 0xB4	; 180
    279a:	93 e1       	ldi	r25, 0x13	; 19
    279c:	0e 94 7c 22 	call	0x44f8	; 0x44f8 <kernel_setTimer>
    27a0:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <spi_interruptFlag>
    27a4:	c0 98       	cbi	0x18, 0	; 24
    27a6:	00 23       	and	r16, r16
    27a8:	29 f0       	breq	.+10     	; 0x27b4 <spi_writeRegister+0x34>
    27aa:	8c 2f       	mov	r24, r28
    27ac:	80 95       	com	r24
    27ae:	c8 2f       	mov	r28, r24
    27b0:	cd 23       	and	r28, r29
    27b2:	01 c0       	rjmp	.+2      	; 0x27b6 <spi_writeRegister+0x36>
    27b4:	cd 2b       	or	r28, r29
    27b6:	cf b9       	out	0x0f, r28	; 15
    27b8:	77 99       	sbic	0x0e, 7	; 14
    27ba:	04 c0       	rjmp	.+8      	; 0x27c4 <spi_writeRegister+0x44>
    27bc:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <spi_interruptFlag>
    27c0:	88 23       	and	r24, r24
    27c2:	d1 f3       	breq	.-12     	; 0x27b8 <spi_writeRegister+0x38>
    27c4:	4a ef       	ldi	r20, 0xFA	; 250
    27c6:	50 e0       	ldi	r21, 0x00	; 0
    27c8:	60 e0       	ldi	r22, 0x00	; 0
    27ca:	70 e0       	ldi	r23, 0x00	; 0
    27cc:	84 eb       	ldi	r24, 0xB4	; 180
    27ce:	93 e1       	ldi	r25, 0x13	; 19
    27d0:	0e 94 7c 22 	call	0x44f8	; 0x44f8 <kernel_setTimer>
    27d4:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <spi_interruptFlag>
    27d8:	88 23       	and	r24, r24
    27da:	19 f0       	breq	.+6      	; 0x27e2 <spi_writeRegister+0x62>
    27dc:	8c e1       	ldi	r24, 0x1C	; 28
    27de:	92 e0       	ldi	r25, 0x02	; 2
    27e0:	11 c0       	rjmp	.+34     	; 0x2804 <spi_writeRegister+0x84>
    27e2:	1f b9       	out	0x0f, r17	; 15
    27e4:	77 99       	sbic	0x0e, 7	; 14
    27e6:	04 c0       	rjmp	.+8      	; 0x27f0 <spi_writeRegister+0x70>
    27e8:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <spi_interruptFlag>
    27ec:	88 23       	and	r24, r24
    27ee:	d1 f3       	breq	.-12     	; 0x27e4 <spi_writeRegister+0x64>
    27f0:	84 eb       	ldi	r24, 0xB4	; 180
    27f2:	93 e1       	ldi	r25, 0x13	; 19
    27f4:	0e 94 e2 22 	call	0x45c4	; 0x45c4 <kernel_removeTimer>
    27f8:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <spi_interruptFlag>
    27fc:	88 23       	and	r24, r24
    27fe:	79 f0       	breq	.+30     	; 0x281e <spi_writeRegister+0x9e>
    2800:	82 e0       	ldi	r24, 0x02	; 2
    2802:	92 e0       	ldi	r25, 0x02	; 2
    2804:	9f 93       	push	r25
    2806:	8f 93       	push	r24
    2808:	83 e0       	ldi	r24, 0x03	; 3
    280a:	8f 93       	push	r24
    280c:	81 e0       	ldi	r24, 0x01	; 1
    280e:	8f 93       	push	r24
    2810:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
    2814:	0f 90       	pop	r0
    2816:	0f 90       	pop	r0
    2818:	0f 90       	pop	r0
    281a:	0f 90       	pop	r0
    281c:	01 c0       	rjmp	.+2      	; 0x2820 <spi_writeRegister+0xa0>
    281e:	c0 9a       	sbi	0x18, 0	; 24
    2820:	df 91       	pop	r29
    2822:	cf 91       	pop	r28
    2824:	1f 91       	pop	r17
    2826:	0f 91       	pop	r16
    2828:	08 95       	ret

0000282a <spi_readRegister>:
    282a:	0f 93       	push	r16
    282c:	1f 93       	push	r17
    282e:	cf 93       	push	r28
    2830:	df 93       	push	r29
    2832:	d8 2f       	mov	r29, r24
    2834:	16 2f       	mov	r17, r22
    2836:	c4 2f       	mov	r28, r20
    2838:	02 2f       	mov	r16, r18
    283a:	4a ef       	ldi	r20, 0xFA	; 250
    283c:	50 e0       	ldi	r21, 0x00	; 0
    283e:	60 e0       	ldi	r22, 0x00	; 0
    2840:	70 e0       	ldi	r23, 0x00	; 0
    2842:	84 eb       	ldi	r24, 0xB4	; 180
    2844:	93 e1       	ldi	r25, 0x13	; 19
    2846:	0e 94 7c 22 	call	0x44f8	; 0x44f8 <kernel_setTimer>
    284a:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <spi_interruptFlag>
    284e:	c0 98       	cbi	0x18, 0	; 24
    2850:	00 23       	and	r16, r16
    2852:	29 f0       	breq	.+10     	; 0x285e <spi_readRegister+0x34>
    2854:	8c 2f       	mov	r24, r28
    2856:	80 95       	com	r24
    2858:	c8 2f       	mov	r28, r24
    285a:	cd 23       	and	r28, r29
    285c:	01 c0       	rjmp	.+2      	; 0x2860 <spi_readRegister+0x36>
    285e:	cd 2b       	or	r28, r29
    2860:	cf b9       	out	0x0f, r28	; 15
    2862:	77 99       	sbic	0x0e, 7	; 14
    2864:	04 c0       	rjmp	.+8      	; 0x286e <spi_readRegister+0x44>
    2866:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <spi_interruptFlag>
    286a:	88 23       	and	r24, r24
    286c:	d1 f3       	breq	.-12     	; 0x2862 <spi_readRegister+0x38>
    286e:	c0 91 ba 01 	lds	r28, 0x01BA	; 0x8001ba <spi_interruptFlag>
    2872:	cc 23       	and	r28, r28
    2874:	81 f0       	breq	.+32     	; 0x2896 <spi_readRegister+0x6c>
    2876:	88 ee       	ldi	r24, 0xE8	; 232
    2878:	91 e0       	ldi	r25, 0x01	; 1
    287a:	9f 93       	push	r25
    287c:	8f 93       	push	r24
    287e:	83 e0       	ldi	r24, 0x03	; 3
    2880:	8f 93       	push	r24
    2882:	81 e0       	ldi	r24, 0x01	; 1
    2884:	8f 93       	push	r24
    2886:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
    288a:	0f 90       	pop	r0
    288c:	0f 90       	pop	r0
    288e:	0f 90       	pop	r0
    2890:	0f 90       	pop	r0
    2892:	c0 e0       	ldi	r28, 0x00	; 0
    2894:	2c c0       	rjmp	.+88     	; 0x28ee <spi_readRegister+0xc4>
    2896:	11 11       	cpse	r17, r1
    2898:	17 c0       	rjmp	.+46     	; 0x28c8 <spi_readRegister+0x9e>
    289a:	84 eb       	ldi	r24, 0xB4	; 180
    289c:	93 e1       	ldi	r25, 0x13	; 19
    289e:	0e 94 e2 22 	call	0x45c4	; 0x45c4 <kernel_removeTimer>
    28a2:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <spi_interruptFlag>
    28a6:	88 23       	and	r24, r24
    28a8:	01 f1       	breq	.+64     	; 0x28ea <spi_readRegister+0xc0>
    28aa:	8e ec       	ldi	r24, 0xCE	; 206
    28ac:	91 e0       	ldi	r25, 0x01	; 1
    28ae:	9f 93       	push	r25
    28b0:	8f 93       	push	r24
    28b2:	83 e0       	ldi	r24, 0x03	; 3
    28b4:	8f 93       	push	r24
    28b6:	81 e0       	ldi	r24, 0x01	; 1
    28b8:	8f 93       	push	r24
    28ba:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
    28be:	0f 90       	pop	r0
    28c0:	0f 90       	pop	r0
    28c2:	0f 90       	pop	r0
    28c4:	0f 90       	pop	r0
    28c6:	13 c0       	rjmp	.+38     	; 0x28ee <spi_readRegister+0xc4>
    28c8:	4a ef       	ldi	r20, 0xFA	; 250
    28ca:	50 e0       	ldi	r21, 0x00	; 0
    28cc:	60 e0       	ldi	r22, 0x00	; 0
    28ce:	70 e0       	ldi	r23, 0x00	; 0
    28d0:	84 eb       	ldi	r24, 0xB4	; 180
    28d2:	93 e1       	ldi	r25, 0x13	; 19
    28d4:	0e 94 7c 22 	call	0x44f8	; 0x44f8 <kernel_setTimer>
    28d8:	8f ef       	ldi	r24, 0xFF	; 255
    28da:	8f b9       	out	0x0f, r24	; 15
    28dc:	77 99       	sbic	0x0e, 7	; 14
    28de:	dd cf       	rjmp	.-70     	; 0x289a <spi_readRegister+0x70>
    28e0:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <spi_interruptFlag>
    28e4:	88 23       	and	r24, r24
    28e6:	d1 f3       	breq	.-12     	; 0x28dc <spi_readRegister+0xb2>
    28e8:	d8 cf       	rjmp	.-80     	; 0x289a <spi_readRegister+0x70>
    28ea:	c0 9a       	sbi	0x18, 0	; 24
    28ec:	cf b1       	in	r28, 0x0f	; 15
    28ee:	8c 2f       	mov	r24, r28
    28f0:	df 91       	pop	r29
    28f2:	cf 91       	pop	r28
    28f4:	1f 91       	pop	r17
    28f6:	0f 91       	pop	r16
    28f8:	08 95       	ret

000028fa <spi_busSetup>:
		   uint8_t spi2x - if set to SPI_2X, doubles the SCKL speed
			Values: SPI_1X, SPI_2X
Returns: nothing
------------------------------------------------------------*/
void spi_busSetup(uint8_t speed, uint8_t dord, uint8_t mode, uint8_t spi2x){
	SPCR = (0<<SPIE)|(1<<SPE)|(dord<<DORD)|(SPIMSTR<<MSTR)|(mode<<CPHA)|(speed << SPR0);
    28fa:	94 e0       	ldi	r25, 0x04	; 4
    28fc:	49 9f       	mul	r20, r25
    28fe:	a0 01       	movw	r20, r0
    2900:	11 24       	eor	r1, r1
    2902:	80 65       	ori	r24, 0x50	; 80
    2904:	48 2b       	or	r20, r24
    2906:	80 e2       	ldi	r24, 0x20	; 32
    2908:	68 9f       	mul	r22, r24
    290a:	b0 01       	movw	r22, r0
    290c:	11 24       	eor	r1, r1
    290e:	64 2b       	or	r22, r20
    2910:	6d b9       	out	0x0d, r22	; 13
	
	if(spi2x) SPSR |= (1 << SPI2X);	
    2912:	22 23       	and	r18, r18
    2914:	11 f0       	breq	.+4      	; 0x291a <spi_busSetup+0x20>
    2916:	70 9a       	sbi	0x0e, 0	; 14
    2918:	08 95       	ret
	else SPSR &= ~(1 << SPI2X);	
    291a:	70 98       	cbi	0x0e, 0	; 14
    291c:	08 95       	ret

0000291e <spi_simpleWrite>:
SPI single write function - spi_simpleWrite(uint8_t data)
Sends a single byte to the SPI bus.
Arguments: uint8_t data - data to be sent 
Returns: nothing
------------------------------------------------------------*/
void spi_simpleWrite(uint8_t data){
    291e:	cf 93       	push	r28
    2920:	c8 2f       	mov	r28, r24
	kernel_setTimer(spi_timerISR, 250);
    2922:	4a ef       	ldi	r20, 0xFA	; 250
    2924:	50 e0       	ldi	r21, 0x00	; 0
    2926:	60 e0       	ldi	r22, 0x00	; 0
    2928:	70 e0       	ldi	r23, 0x00	; 0
    292a:	84 eb       	ldi	r24, 0xB4	; 180
    292c:	93 e1       	ldi	r25, 0x13	; 19
    292e:	0e 94 7c 22 	call	0x44f8	; 0x44f8 <kernel_setTimer>
	spi_interruptFlag = 0;
    2932:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <spi_interruptFlag>
	
	SPDR = data;
    2936:	cf b9       	out	0x0f, r28	; 15
	while(!(SPSR & (1<<SPIF)) && !spi_interruptFlag);
    2938:	77 99       	sbic	0x0e, 7	; 14
    293a:	04 c0       	rjmp	.+8      	; 0x2944 <spi_simpleWrite+0x26>
    293c:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <spi_interruptFlag>
    2940:	88 23       	and	r24, r24
    2942:	d1 f3       	breq	.-12     	; 0x2938 <spi_simpleWrite+0x1a>
	if(spi_interruptFlag){
    2944:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <spi_interruptFlag>
    2948:	88 23       	and	r24, r24
    294a:	89 f0       	breq	.+34     	; 0x296e <spi_simpleWrite+0x50>
		debug_logMessage(PGM_ON, L_ERROR, PSTR("spid: operation timeout\r\n"));
    294c:	84 eb       	ldi	r24, 0xB4	; 180
    294e:	91 e0       	ldi	r25, 0x01	; 1
    2950:	9f 93       	push	r25
    2952:	8f 93       	push	r24
    2954:	83 e0       	ldi	r24, 0x03	; 3
    2956:	8f 93       	push	r24
    2958:	81 e0       	ldi	r24, 0x01	; 1
    295a:	8f 93       	push	r24
    295c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		SPDR = 0x00;
    2960:	1f b8       	out	0x0f, r1	; 15
		return;
    2962:	0f 90       	pop	r0
    2964:	0f 90       	pop	r0
    2966:	0f 90       	pop	r0
    2968:	0f 90       	pop	r0
	}
	kernel_removeTimer(spi_timerISR);
}
    296a:	cf 91       	pop	r28
    296c:	08 95       	ret
	if(spi_interruptFlag){
		debug_logMessage(PGM_ON, L_ERROR, PSTR("spid: operation timeout\r\n"));
		SPDR = 0x00;
		return;
	}
	kernel_removeTimer(spi_timerISR);
    296e:	84 eb       	ldi	r24, 0xB4	; 180
    2970:	93 e1       	ldi	r25, 0x13	; 19
}
    2972:	cf 91       	pop	r28
	if(spi_interruptFlag){
		debug_logMessage(PGM_ON, L_ERROR, PSTR("spid: operation timeout\r\n"));
		SPDR = 0x00;
		return;
	}
	kernel_removeTimer(spi_timerISR);
    2974:	0c 94 e2 22 	jmp	0x45c4	; 0x45c4 <kernel_removeTimer>

00002978 <spi_simpleRead>:
Receives a single byte from the SPI bus.
Arguments: uint8_t filler - a placeholder byte to complete
			the read operation.
Returns: uint8_t - received data
------------------------------------------------------------*/
uint8_t spi_simpleRead(uint8_t filler){
    2978:	cf 93       	push	r28
    297a:	c8 2f       	mov	r28, r24
	kernel_setTimer(spi_timerISR, 250);
    297c:	4a ef       	ldi	r20, 0xFA	; 250
    297e:	50 e0       	ldi	r21, 0x00	; 0
    2980:	60 e0       	ldi	r22, 0x00	; 0
    2982:	70 e0       	ldi	r23, 0x00	; 0
    2984:	84 eb       	ldi	r24, 0xB4	; 180
    2986:	93 e1       	ldi	r25, 0x13	; 19
    2988:	0e 94 7c 22 	call	0x44f8	; 0x44f8 <kernel_setTimer>
	spi_interruptFlag = 0;
    298c:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <spi_interruptFlag>
	
	SPDR = filler;
    2990:	cf b9       	out	0x0f, r28	; 15
	while(!(SPSR & (1<<SPIF)) && !spi_interruptFlag);
    2992:	77 99       	sbic	0x0e, 7	; 14
    2994:	04 c0       	rjmp	.+8      	; 0x299e <spi_simpleRead+0x26>
    2996:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <spi_interruptFlag>
    299a:	88 23       	and	r24, r24
    299c:	d1 f3       	breq	.-12     	; 0x2992 <spi_simpleRead+0x1a>
	kernel_removeTimer(spi_timerISR);
    299e:	84 eb       	ldi	r24, 0xB4	; 180
    29a0:	93 e1       	ldi	r25, 0x13	; 19
    29a2:	0e 94 e2 22 	call	0x45c4	; 0x45c4 <kernel_removeTimer>
	if(spi_interruptFlag){
    29a6:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <spi_interruptFlag>
    29aa:	88 23       	and	r24, r24
    29ac:	81 f0       	breq	.+32     	; 0x29ce <spi_simpleRead+0x56>
		debug_logMessage(PGM_ON, L_ERROR, PSTR("spid: operation timeout\r\n"));
    29ae:	8a e9       	ldi	r24, 0x9A	; 154
    29b0:	91 e0       	ldi	r25, 0x01	; 1
    29b2:	9f 93       	push	r25
    29b4:	8f 93       	push	r24
    29b6:	83 e0       	ldi	r24, 0x03	; 3
    29b8:	8f 93       	push	r24
    29ba:	81 e0       	ldi	r24, 0x01	; 1
    29bc:	8f 93       	push	r24
    29be:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		return 0;
    29c2:	0f 90       	pop	r0
    29c4:	0f 90       	pop	r0
    29c6:	0f 90       	pop	r0
    29c8:	0f 90       	pop	r0
    29ca:	80 e0       	ldi	r24, 0x00	; 0
    29cc:	01 c0       	rjmp	.+2      	; 0x29d0 <spi_simpleRead+0x58>
	}
	
	return SPDR;
    29ce:	8f b1       	in	r24, 0x0f	; 15
}
    29d0:	cf 91       	pop	r28
    29d2:	08 95       	ret

000029d4 <spi_busStop>:
Disables the SPI bus and makes it available for other devices.
Arguments: none
Returns: nothing
------------------------------------------------------------*/
void spi_busStop(){
	SPCR = 0; //TODO: save interrupt flag - for slave mode
    29d4:	1d b8       	out	0x0d, r1	; 13
	SPSR &= ~(1 << SPI2X);	
    29d6:	70 98       	cbi	0x0e, 0	; 14
    29d8:	08 95       	ret

000029da <tx0_buffer_flush>:
	creg1 |= ~(1 << TX1_IE);
}

void tx1_disableInterrupt(){
	UCSR1B &= ~(1 << UDRIE);
	creg1 &= ~(1 << TX1_IE);
    29da:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <tx0_pointer+0x1>
    29de:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <tx0_pointer>
    29e2:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <tx0_buffer>
    29e6:	08 95       	ret

000029e8 <__vector_19>:
    29e8:	1f 92       	push	r1
    29ea:	0f 92       	push	r0
    29ec:	0f b6       	in	r0, 0x3f	; 63
    29ee:	0f 92       	push	r0
    29f0:	11 24       	eor	r1, r1
    29f2:	0b b6       	in	r0, 0x3b	; 59
    29f4:	0f 92       	push	r0
    29f6:	2f 93       	push	r18
    29f8:	3f 93       	push	r19
    29fa:	4f 93       	push	r20
    29fc:	5f 93       	push	r21
    29fe:	6f 93       	push	r22
    2a00:	7f 93       	push	r23
    2a02:	8f 93       	push	r24
    2a04:	9f 93       	push	r25
    2a06:	af 93       	push	r26
    2a08:	bf 93       	push	r27
    2a0a:	ef 93       	push	r30
    2a0c:	ff 93       	push	r31
    2a0e:	80 91 3f 02 	lds	r24, 0x023F	; 0x80023f <tx0_pointer>
    2a12:	90 91 40 02 	lds	r25, 0x0240	; 0x800240 <tx0_pointer+0x1>
    2a16:	01 96       	adiw	r24, 0x01	; 1
    2a18:	90 93 40 02 	sts	0x0240, r25	; 0x800240 <tx0_pointer+0x1>
    2a1c:	80 93 3f 02 	sts	0x023F, r24	; 0x80023f <tx0_pointer>
    2a20:	e0 91 3f 02 	lds	r30, 0x023F	; 0x80023f <tx0_pointer>
    2a24:	f0 91 40 02 	lds	r31, 0x0240	; 0x800240 <tx0_pointer+0x1>
    2a28:	ef 5b       	subi	r30, 0xBF	; 191
    2a2a:	fd 4f       	sbci	r31, 0xFD	; 253
    2a2c:	80 81       	ld	r24, Z
    2a2e:	88 23       	and	r24, r24
    2a30:	49 f0       	breq	.+18     	; 0x2a44 <__vector_19+0x5c>
    2a32:	e0 91 3f 02 	lds	r30, 0x023F	; 0x80023f <tx0_pointer>
    2a36:	f0 91 40 02 	lds	r31, 0x0240	; 0x800240 <tx0_pointer+0x1>
    2a3a:	ef 5b       	subi	r30, 0xBF	; 191
    2a3c:	fd 4f       	sbci	r31, 0xFD	; 253
    2a3e:	80 81       	ld	r24, Z
    2a40:	8c b9       	out	0x0c, r24	; 12
    2a42:	08 c0       	rjmp	.+16     	; 0x2a54 <__vector_19+0x6c>
    2a44:	55 98       	cbi	0x0a, 5	; 10
    2a46:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <creg0>
    2a4a:	8e 7f       	andi	r24, 0xFE	; 254
    2a4c:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <creg0>
    2a50:	0e 94 ed 14 	call	0x29da	; 0x29da <tx0_buffer_flush>
    2a54:	ff 91       	pop	r31
    2a56:	ef 91       	pop	r30
    2a58:	bf 91       	pop	r27
    2a5a:	af 91       	pop	r26
    2a5c:	9f 91       	pop	r25
    2a5e:	8f 91       	pop	r24
    2a60:	7f 91       	pop	r23
    2a62:	6f 91       	pop	r22
    2a64:	5f 91       	pop	r21
    2a66:	4f 91       	pop	r20
    2a68:	3f 91       	pop	r19
    2a6a:	2f 91       	pop	r18
    2a6c:	0f 90       	pop	r0
    2a6e:	0b be       	out	0x3b, r0	; 59
    2a70:	0f 90       	pop	r0
    2a72:	0f be       	out	0x3f, r0	; 63
    2a74:	0f 90       	pop	r0
    2a76:	1f 90       	pop	r1
    2a78:	18 95       	reti

00002a7a <tx1_buffer_flush>:
    2a7a:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <tx1_pointer+0x1>
    2a7e:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <tx1_pointer>
    2a82:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <tx1_buffer>
    2a86:	08 95       	ret

00002a88 <__vector_31>:
Pushes the next character in tx0_buffer to uart0 line
Arguments: none
Returns: nothing
------------------------------------------------------------*/
#if UART1_USE_EXT_UDRE_ISR == 0
ISR(USART1_UDRE_vect){
    2a88:	1f 92       	push	r1
    2a8a:	0f 92       	push	r0
    2a8c:	0f b6       	in	r0, 0x3f	; 63
    2a8e:	0f 92       	push	r0
    2a90:	11 24       	eor	r1, r1
    2a92:	0b b6       	in	r0, 0x3b	; 59
    2a94:	0f 92       	push	r0
    2a96:	2f 93       	push	r18
    2a98:	3f 93       	push	r19
    2a9a:	4f 93       	push	r20
    2a9c:	5f 93       	push	r21
    2a9e:	6f 93       	push	r22
    2aa0:	7f 93       	push	r23
    2aa2:	8f 93       	push	r24
    2aa4:	9f 93       	push	r25
    2aa6:	af 93       	push	r26
    2aa8:	bf 93       	push	r27
    2aaa:	ef 93       	push	r30
    2aac:	ff 93       	push	r31
	tx1_pointer+=1;
    2aae:	80 91 bb 01 	lds	r24, 0x01BB	; 0x8001bb <tx1_pointer>
    2ab2:	90 91 bc 01 	lds	r25, 0x01BC	; 0x8001bc <tx1_pointer+0x1>
    2ab6:	01 96       	adiw	r24, 0x01	; 1
    2ab8:	90 93 bc 01 	sts	0x01BC, r25	; 0x8001bc <tx1_pointer+0x1>
    2abc:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <tx1_pointer>
	if(tx1_buffer[tx1_pointer] != '\x0'){
    2ac0:	e0 91 bb 01 	lds	r30, 0x01BB	; 0x8001bb <tx1_pointer>
    2ac4:	f0 91 bc 01 	lds	r31, 0x01BC	; 0x8001bc <tx1_pointer+0x1>
    2ac8:	e3 54       	subi	r30, 0x43	; 67
    2aca:	fe 4f       	sbci	r31, 0xFE	; 254
    2acc:	80 81       	ld	r24, Z
    2ace:	88 23       	and	r24, r24
    2ad0:	51 f0       	breq	.+20     	; 0x2ae6 <__vector_31+0x5e>
		UDR1 = tx1_buffer[tx1_pointer];
    2ad2:	e0 91 bb 01 	lds	r30, 0x01BB	; 0x8001bb <tx1_pointer>
    2ad6:	f0 91 bc 01 	lds	r31, 0x01BC	; 0x8001bc <tx1_pointer+0x1>
    2ada:	e3 54       	subi	r30, 0x43	; 67
    2adc:	fe 4f       	sbci	r31, 0xFE	; 254
    2ade:	80 81       	ld	r24, Z
    2ae0:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    2ae4:	0c c0       	rjmp	.+24     	; 0x2afe <__vector_31+0x76>
	}
	else {
		UCSR1B &= ~(1<<UDRIE);
    2ae6:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
    2aea:	8f 7d       	andi	r24, 0xDF	; 223
    2aec:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
		creg1 &= ~(1<<TX1BUSY);
    2af0:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <creg1>
    2af4:	8e 7f       	andi	r24, 0xFE	; 254
    2af6:	80 93 3d 02 	sts	0x023D, r24	; 0x80023d <creg1>
		tx1_buffer_flush();
    2afa:	0e 94 3d 15 	call	0x2a7a	; 0x2a7a <tx1_buffer_flush>
	}
}
    2afe:	ff 91       	pop	r31
    2b00:	ef 91       	pop	r30
    2b02:	bf 91       	pop	r27
    2b04:	af 91       	pop	r26
    2b06:	9f 91       	pop	r25
    2b08:	8f 91       	pop	r24
    2b0a:	7f 91       	pop	r23
    2b0c:	6f 91       	pop	r22
    2b0e:	5f 91       	pop	r21
    2b10:	4f 91       	pop	r20
    2b12:	3f 91       	pop	r19
    2b14:	2f 91       	pop	r18
    2b16:	0f 90       	pop	r0
    2b18:	0b be       	out	0x3b, r0	; 59
    2b1a:	0f 90       	pop	r0
    2b1c:	0f be       	out	0x3f, r0	; 63
    2b1e:	0f 90       	pop	r0
    2b20:	1f 90       	pop	r1
    2b22:	18 95       	reti

00002b24 <datetime>:
{
	debug_logMessage(PGM_ON, L_NONE, PSTR("Reboot command\r\n"));
}

static void datetime()
{
    2b24:	08 95       	ret

00002b26 <dickbutt>:
	debug_logMessage(PGM_ON, L_NONE, PSTR("  HAL: CanSatHAL version %s built %s\r\n"), KERNEL_VER, KERNEL_TIMESTAMP);
	debug_logMessage(PGM_ON, L_NONE, PSTR("  FatFS: Petit FatFS version R0.02\r\n"), KERNEL_VER, KERNEL_TIMESTAMP);
}

void dickbutt()
{
    2b26:	cf 93       	push	r28
	debug_logMessage(PGM_ON, L_NONE, PSTR("                                MMMMMM=\r\n"));
    2b28:	89 e6       	ldi	r24, 0x69	; 105
    2b2a:	97 e1       	ldi	r25, 0x17	; 23
    2b2c:	9f 93       	push	r25
    2b2e:	8f 93       	push	r24
    2b30:	1f 92       	push	r1
    2b32:	c1 e0       	ldi	r28, 0x01	; 1
    2b34:	cf 93       	push	r28
    2b36:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("                           .MMMMMMMMMMMMMM   \r\n"));
    2b3a:	89 e3       	ldi	r24, 0x39	; 57
    2b3c:	97 e1       	ldi	r25, 0x17	; 23
    2b3e:	9f 93       	push	r25
    2b40:	8f 93       	push	r24
    2b42:	1f 92       	push	r1
    2b44:	cf 93       	push	r28
    2b46:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("                         MMMMMM         MMMM   \r\n"));
    2b4a:	87 e0       	ldi	r24, 0x07	; 7
    2b4c:	97 e1       	ldi	r25, 0x17	; 23
    2b4e:	9f 93       	push	r25
    2b50:	8f 93       	push	r24
    2b52:	1f 92       	push	r1
    2b54:	cf 93       	push	r28
    2b56:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("                     MMMMM              MMMMM.  \r\n"));
    2b5a:	84 ed       	ldi	r24, 0xD4	; 212
    2b5c:	96 e1       	ldi	r25, 0x16	; 22
    2b5e:	9f 93       	push	r25
    2b60:	8f 93       	push	r24
    2b62:	1f 92       	push	r1
    2b64:	cf 93       	push	r28
    2b66:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("               MMMMMMMM                  ?MMMM.  \r\n"));
    2b6a:	80 ea       	ldi	r24, 0xA0	; 160
    2b6c:	96 e1       	ldi	r25, 0x16	; 22
    2b6e:	9f 93       	push	r25
    2b70:	8f 93       	push	r24
    2b72:	1f 92       	push	r1
    2b74:	cf 93       	push	r28
    2b76:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("            .MMMMMMMM7MM                  MMMMM   \r\n"));
    2b7a:	8b e6       	ldi	r24, 0x6B	; 107
    2b7c:	96 e1       	ldi	r25, 0x16	; 22
    2b7e:	9f 93       	push	r25
    2b80:	8f 93       	push	r24
    2b82:	1f 92       	push	r1
    2b84:	cf 93       	push	r28
    2b86:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("           MMMMMMMMM MM                   MMMM     \r\n"));
    2b8a:	85 e3       	ldi	r24, 0x35	; 53
    2b8c:	96 e1       	ldi	r25, 0x16	; 22
    2b8e:	9f 93       	push	r25
    2b90:	8f 93       	push	r24
    2b92:	1f 92       	push	r1
    2b94:	cf 93       	push	r28
    2b96:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("           MMMMMMMMM .MM                   MMM     \r\n"));
    2b9a:	8f ef       	ldi	r24, 0xFF	; 255
    2b9c:	95 e1       	ldi	r25, 0x15	; 21
    2b9e:	9f 93       	push	r25
    2ba0:	8f 93       	push	r24
    2ba2:	1f 92       	push	r1
    2ba4:	cf 93       	push	r28
    2ba6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("           .MMMMMMM.   MM.M.   =MMMMMMMM.   MMM     \r\n"));
    2baa:	8d b7       	in	r24, 0x3d	; 61
    2bac:	9e b7       	in	r25, 0x3e	; 62
    2bae:	80 96       	adiw	r24, 0x20	; 32
    2bb0:	0f b6       	in	r0, 0x3f	; 63
    2bb2:	f8 94       	cli
    2bb4:	9e bf       	out	0x3e, r25	; 62
    2bb6:	0f be       	out	0x3f, r0	; 63
    2bb8:	8d bf       	out	0x3d, r24	; 61
    2bba:	88 ec       	ldi	r24, 0xC8	; 200
    2bbc:	95 e1       	ldi	r25, 0x15	; 21
    2bbe:	9f 93       	push	r25
    2bc0:	8f 93       	push	r24
    2bc2:	1f 92       	push	r1
    2bc4:	cf 93       	push	r28
    2bc6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("           MMMMMMMM.MMMMMM.  MMMMMMMM MMM  MMM     \r\n"));
    2bca:	82 e9       	ldi	r24, 0x92	; 146
    2bcc:	95 e1       	ldi	r25, 0x15	; 21
    2bce:	9f 93       	push	r25
    2bd0:	8f 93       	push	r24
    2bd2:	1f 92       	push	r1
    2bd4:	cf 93       	push	r28
    2bd6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("           MMMMMMMMMMMM     MMMMMMMMM  MMM MMM       \r\n"));
    2bda:	8a e5       	ldi	r24, 0x5A	; 90
    2bdc:	95 e1       	ldi	r25, 0x15	; 21
    2bde:	9f 93       	push	r25
    2be0:	8f 93       	push	r24
    2be2:	1f 92       	push	r1
    2be4:	cf 93       	push	r28
    2be6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("         MMM    MMM:  MM   MMMMMMMMM  MMM MMM        \r\n"));
    2bea:	82 e2       	ldi	r24, 0x22	; 34
    2bec:	95 e1       	ldi	r25, 0x15	; 21
    2bee:	9f 93       	push	r25
    2bf0:	8f 93       	push	r24
    2bf2:	1f 92       	push	r1
    2bf4:	cf 93       	push	r28
    2bf6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("        8MM.    MMMMMMMM=  MMMMMMMM.  .M ,MM7        \r\n"));
    2bfa:	8a ee       	ldi	r24, 0xEA	; 234
    2bfc:	94 e1       	ldi	r25, 0x14	; 20
    2bfe:	9f 93       	push	r25
    2c00:	8f 93       	push	r24
    2c02:	1f 92       	push	r1
    2c04:	cf 93       	push	r28
    2c06:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("       MMMMMMMM..          MMMMM.     M  MMM     \r\n"));
    2c0a:	86 eb       	ldi	r24, 0xB6	; 182
    2c0c:	94 e1       	ldi	r25, 0x14	; 20
    2c0e:	9f 93       	push	r25
    2c10:	8f 93       	push	r24
    2c12:	1f 92       	push	r1
    2c14:	cf 93       	push	r28
    2c16:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("      .MMMMMMMMMMMMMMM       MMMMMMMMM.  MMM     \r\n"));
    2c1a:	82 e8       	ldi	r24, 0x82	; 130
    2c1c:	94 e1       	ldi	r25, 0x14	; 20
    2c1e:	9f 93       	push	r25
    2c20:	8f 93       	push	r24
    2c22:	1f 92       	push	r1
    2c24:	cf 93       	push	r28
    2c26:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("     .MMM        MMMMMMMMMMM.           MMMM     \r\n"));
    2c2a:	8e e4       	ldi	r24, 0x4E	; 78
    2c2c:	94 e1       	ldi	r25, 0x14	; 20
    2c2e:	9f 93       	push	r25
    2c30:	8f 93       	push	r24
    2c32:	1f 92       	push	r1
    2c34:	cf 93       	push	r28
    2c36:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("     MMM                .~MMMMMMM.      MMM.     \r\n"));
    2c3a:	8d b7       	in	r24, 0x3d	; 61
    2c3c:	9e b7       	in	r25, 0x3e	; 62
    2c3e:	80 96       	adiw	r24, 0x20	; 32
    2c40:	0f b6       	in	r0, 0x3f	; 63
    2c42:	f8 94       	cli
    2c44:	9e bf       	out	0x3e, r25	; 62
    2c46:	0f be       	out	0x3f, r0	; 63
    2c48:	8d bf       	out	0x3d, r24	; 61
    2c4a:	8a e1       	ldi	r24, 0x1A	; 26
    2c4c:	94 e1       	ldi	r25, 0x14	; 20
    2c4e:	9f 93       	push	r25
    2c50:	8f 93       	push	r24
    2c52:	1f 92       	push	r1
    2c54:	cf 93       	push	r28
    2c56:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("    MMM.                               MMMM      \r\n"));
    2c5a:	86 ee       	ldi	r24, 0xE6	; 230
    2c5c:	93 e1       	ldi	r25, 0x13	; 19
    2c5e:	9f 93       	push	r25
    2c60:	8f 93       	push	r24
    2c62:	1f 92       	push	r1
    2c64:	cf 93       	push	r28
    2c66:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("   .MMM                                MMMM      \r\n"));
    2c6a:	82 eb       	ldi	r24, 0xB2	; 178
    2c6c:	93 e1       	ldi	r25, 0x13	; 19
    2c6e:	9f 93       	push	r25
    2c70:	8f 93       	push	r24
    2c72:	1f 92       	push	r1
    2c74:	cf 93       	push	r28
    2c76:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("   MMM                                DMMM        \r\n"));
    2c7a:	8d e7       	ldi	r24, 0x7D	; 125
    2c7c:	93 e1       	ldi	r25, 0x13	; 19
    2c7e:	9f 93       	push	r25
    2c80:	8f 93       	push	r24
    2c82:	1f 92       	push	r1
    2c84:	cf 93       	push	r28
    2c86:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  MMM                                 MMMM        \r\n"));
    2c8a:	88 e4       	ldi	r24, 0x48	; 72
    2c8c:	93 e1       	ldi	r25, 0x13	; 19
    2c8e:	9f 93       	push	r25
    2c90:	8f 93       	push	r24
    2c92:	1f 92       	push	r1
    2c94:	cf 93       	push	r28
    2c96:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  MMM                                .MMM        \r\n"));
    2c9a:	84 e1       	ldi	r24, 0x14	; 20
    2c9c:	93 e1       	ldi	r25, 0x13	; 19
    2c9e:	9f 93       	push	r25
    2ca0:	8f 93       	push	r24
    2ca2:	1f 92       	push	r1
    2ca4:	cf 93       	push	r28
    2ca6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MMM                      MM        .MMM         \r\n"));
    2caa:	80 ee       	ldi	r24, 0xE0	; 224
    2cac:	92 e1       	ldi	r25, 0x12	; 18
    2cae:	9f 93       	push	r25
    2cb0:	8f 93       	push	r24
    2cb2:	1f 92       	push	r1
    2cb4:	cf 93       	push	r28
    2cb6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MMM                     .MM  MM.   MMM~         \r\n"));
    2cba:	8c ea       	ldi	r24, 0xAC	; 172
    2cbc:	92 e1       	ldi	r25, 0x12	; 18
    2cbe:	9f 93       	push	r25
    2cc0:	8f 93       	push	r24
    2cc2:	1f 92       	push	r1
    2cc4:	cf 93       	push	r28
    2cc6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  MMM                     MMM .MM.   MMM                         MMMMM     \r\n"));
    2cca:	8d b7       	in	r24, 0x3d	; 61
    2ccc:	9e b7       	in	r25, 0x3e	; 62
    2cce:	80 96       	adiw	r24, 0x20	; 32
    2cd0:	0f b6       	in	r0, 0x3f	; 63
    2cd2:	f8 94       	cli
    2cd4:	9e bf       	out	0x3e, r25	; 62
    2cd6:	0f be       	out	0x3f, r0	; 63
    2cd8:	8d bf       	out	0x3d, r24	; 61
    2cda:	8e e5       	ldi	r24, 0x5E	; 94
    2cdc:	92 e1       	ldi	r25, 0x12	; 18
    2cde:	9f 93       	push	r25
    2ce0:	8f 93       	push	r24
    2ce2:	1f 92       	push	r1
    2ce4:	cf 93       	push	r28
    2ce6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MMM                     MM. MMM   MMM                        MMM   MMO   \r\n"));
    2cea:	81 e1       	ldi	r24, 0x11	; 17
    2cec:	92 e1       	ldi	r25, 0x12	; 18
    2cee:	9f 93       	push	r25
    2cf0:	8f 93       	push	r24
    2cf2:	1f 92       	push	r1
    2cf4:	cf 93       	push	r28
    2cf6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MMM                     MM  MM   .MMM                      MMMM     MM   \r\n"));
    2cfa:	84 ec       	ldi	r24, 0xC4	; 196
    2cfc:	91 e1       	ldi	r25, 0x11	; 17
    2cfe:	9f 93       	push	r25
    2d00:	8f 93       	push	r24
    2d02:	1f 92       	push	r1
    2d04:	cf 93       	push	r28
    2d06:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MM~                    MM. MMM   MMM.                     MMM      IMM   \r\n"));
    2d0a:	87 e7       	ldi	r24, 0x77	; 119
    2d0c:	91 e1       	ldi	r25, 0x11	; 17
    2d0e:	9f 93       	push	r25
    2d10:	8f 93       	push	r24
    2d12:	1f 92       	push	r1
    2d14:	cf 93       	push	r28
    2d16:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MM.                    MM  MM.  .MMM                    .MMM.      MM    \r\n"));
    2d1a:	8a e2       	ldi	r24, 0x2A	; 42
    2d1c:	91 e1       	ldi	r25, 0x11	; 17
    2d1e:	9f 93       	push	r25
    2d20:	8f 93       	push	r24
    2d22:	1f 92       	push	r1
    2d24:	cf 93       	push	r28
    2d26:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MM                     M  MMN   .MMM                   MMMM       MM.    \r\n"));
    2d2a:	8d ed       	ldi	r24, 0xDD	; 221
    2d2c:	90 e1       	ldi	r25, 0x10	; 16
    2d2e:	9f 93       	push	r25
    2d30:	8f 93       	push	r24
    2d32:	1f 92       	push	r1
    2d34:	cf 93       	push	r28
    2d36:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MM+                   MM MMM    .MM 7MMMMMMMMMMM      MMM.       MM      \r\n"));
    2d3a:	80 e9       	ldi	r24, 0x90	; 144
    2d3c:	90 e1       	ldi	r25, 0x10	; 16
    2d3e:	9f 93       	push	r25
    2d40:	8f 93       	push	r24
    2d42:	1f 92       	push	r1
    2d44:	cf 93       	push	r28
    2d46:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MMM                  .M  MM      MMMMMM. .. MMMMMMM MMM.       MMM.     \r\n"));
    2d4a:	84 e4       	ldi	r24, 0x44	; 68
    2d4c:	90 e1       	ldi	r25, 0x10	; 16
    2d4e:	9f 93       	push	r25
    2d50:	8f 93       	push	r24
    2d52:	1f 92       	push	r1
    2d54:	cf 93       	push	r28
    2d56:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MMM                  +M MMM      MM    .MM     .MMMMMM.      .MMM.     \r\n"));
    2d5a:	8d b7       	in	r24, 0x3d	; 61
    2d5c:	9e b7       	in	r25, 0x3e	; 62
    2d5e:	80 96       	adiw	r24, 0x20	; 32
    2d60:	0f b6       	in	r0, 0x3f	; 63
    2d62:	f8 94       	cli
    2d64:	9e bf       	out	0x3e, r25	; 62
    2d66:	0f be       	out	0x3f, r0	; 63
    2d68:	8d bf       	out	0x3d, r24	; 61
    2d6a:	89 ef       	ldi	r24, 0xF9	; 249
    2d6c:	9f e0       	ldi	r25, 0x0F	; 15
    2d6e:	9f 93       	push	r25
    2d70:	8f 93       	push	r24
    2d72:	1f 92       	push	r1
    2d74:	cf 93       	push	r28
    2d76:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("?MM                  M  MM       .      MMM      ~MM.       MMMM       \r\n"));
    2d7a:	8f ea       	ldi	r24, 0xAF	; 175
    2d7c:	9f e0       	ldi	r25, 0x0F	; 15
    2d7e:	9f 93       	push	r25
    2d80:	8f 93       	push	r24
    2d82:	1f 92       	push	r1
    2d84:	cf 93       	push	r28
    2d86:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(".MM                 MM  MM            ,MMMMMMMMMMM         MMMM       \r\n"));
    2d8a:	86 e6       	ldi	r24, 0x66	; 102
    2d8c:	9f e0       	ldi	r25, 0x0F	; 15
    2d8e:	9f 93       	push	r25
    2d90:	8f 93       	push	r24
    2d92:	1f 92       	push	r1
    2d94:	cf 93       	push	r28
    2d96:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MMM              MM     MM          MMMMMMMMMMMMMMM     MMMMM         \r\n"));
    2d9a:	8c e1       	ldi	r24, 0x1C	; 28
    2d9c:	9f e0       	ldi	r25, 0x0F	; 15
    2d9e:	9f 93       	push	r25
    2da0:	8f 93       	push	r24
    2da2:	1f 92       	push	r1
    2da4:	cf 93       	push	r28
    2da6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MMM            .M     N  MM                  ..MMMMM.     MMMM         \r\n"));
    2daa:	81 ed       	ldi	r24, 0xD1	; 209
    2dac:	9e e0       	ldi	r25, 0x0E	; 14
    2dae:	9f 93       	push	r25
    2db0:	8f 93       	push	r24
    2db2:	1f 92       	push	r1
    2db4:	cf 93       	push	r28
    2db6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(".MM             MMMM MMMMMM                     .MMMMM        DMM      \r\n"));
    2dba:	87 e8       	ldi	r24, 0x87	; 135
    2dbc:	9e e0       	ldi	r25, 0x0E	; 14
    2dbe:	9f 93       	push	r25
    2dc0:	8f 93       	push	r24
    2dc2:	1f 92       	push	r1
    2dc4:	cf 93       	push	r28
    2dc6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("   MMM              MMMMM.MM.             ,M,       .MMM.        MM     \r\n"));
    2dca:	8c e3       	ldi	r24, 0x3C	; 60
    2dcc:	9e e0       	ldi	r25, 0x0E	; 14
    2dce:	9f 93       	push	r25
    2dd0:	8f 93       	push	r24
    2dd2:	1f 92       	push	r1
    2dd4:	cf 93       	push	r28
    2dd6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("     MMM               M.                  MMM         MMM.  .MMMM      \r\n"));
    2dda:	81 ef       	ldi	r24, 0xF1	; 241
    2ddc:	9d e0       	ldi	r25, 0x0D	; 13
    2dde:	9f 93       	push	r25
    2de0:	8f 93       	push	r24
    2de2:	1f 92       	push	r1
    2de4:	cf 93       	push	r28
    2de6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("    MMMM                                              MMM.    MM        \r\n"));
    2dea:	8d b7       	in	r24, 0x3d	; 61
    2dec:	9e b7       	in	r25, 0x3e	; 62
    2dee:	80 96       	adiw	r24, 0x20	; 32
    2df0:	0f b6       	in	r0, 0x3f	; 63
    2df2:	f8 94       	cli
    2df4:	9e bf       	out	0x3e, r25	; 62
    2df6:	0f be       	out	0x3f, r0	; 63
    2df8:	8d bf       	out	0x3d, r24	; 61
    2dfa:	86 ea       	ldi	r24, 0xA6	; 166
    2dfc:	9d e0       	ldi	r25, 0x0D	; 13
    2dfe:	9f 93       	push	r25
    2e00:	8f 93       	push	r24
    2e02:	1f 92       	push	r1
    2e04:	cf 93       	push	r28
    2e06:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("     =MMM.                            MM.             MMM      MM      \r\n"));
    2e0a:	8c e5       	ldi	r24, 0x5C	; 92
    2e0c:	9d e0       	ldi	r25, 0x0D	; 13
    2e0e:	9f 93       	push	r25
    2e10:	8f 93       	push	r24
    2e12:	1f 92       	push	r1
    2e14:	cf 93       	push	r28
    2e16:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("       MMMM.                          MM              MMM       M      \r\n"));
    2e1a:	82 e1       	ldi	r24, 0x12	; 18
    2e1c:	9d e0       	ldi	r25, 0x0D	; 13
    2e1e:	9f 93       	push	r25
    2e20:	8f 93       	push	r24
    2e22:	1f 92       	push	r1
    2e24:	cf 93       	push	r28
    2e26:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("         MMMM                                         MMMMM,. MMM     \r\n"));
    2e2a:	89 ec       	ldi	r24, 0xC9	; 201
    2e2c:	9c e0       	ldi	r25, 0x0C	; 12
    2e2e:	9f 93       	push	r25
    2e30:	8f 93       	push	r24
    2e32:	1f 92       	push	r1
    2e34:	cf 93       	push	r28
    2e36:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(".          MMMMMMM.                     MMM            MMM MMMMMM.    \r\n"));
    2e3a:	80 e8       	ldi	r24, 0x80	; 128
    2e3c:	9c e0       	ldi	r25, 0x0C	; 12
    2e3e:	9f 93       	push	r25
    2e40:	8f 93       	push	r24
    2e42:	1f 92       	push	r1
    2e44:	cf 93       	push	r28
    2e46:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MMMM      MMN  .MMMMM                               .MMMD           \r\n"));
    2e4a:	88 e3       	ldi	r24, 0x38	; 56
    2e4c:	9c e0       	ldi	r25, 0x0C	; 12
    2e4e:	9f 93       	push	r25
    2e50:	8f 93       	push	r24
    2e52:	1f 92       	push	r1
    2e54:	cf 93       	push	r28
    2e56:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MM MMN  .MM    MM MMMMMMMM~ .              M.     .MMMM          \r\n"));
    2e5a:	83 ef       	ldi	r24, 0xF3	; 243
    2e5c:	9b e0       	ldi	r25, 0x0B	; 11
    2e5e:	9f 93       	push	r25
    2e60:	8f 93       	push	r24
    2e62:	1f 92       	push	r1
    2e64:	cf 93       	push	r28
    2e66:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR(" MM   MM$MM   MMN      MMMMMMMMMM.          M.   .MMMM           \r\n"));
    2e6a:	8f ea       	ldi	r24, 0xAF	; 175
    2e6c:	9b e0       	ldi	r25, 0x0B	; 11
    2e6e:	9f 93       	push	r25
    2e70:	8f 93       	push	r24
    2e72:	1f 92       	push	r1
    2e74:	cf 93       	push	r28
    2e76:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  M.   MMM   MM              MMMMM  MMMMMMMMM~MMMMMM            \r\n"));
    2e7a:	8d b7       	in	r24, 0x3d	; 61
    2e7c:	9e b7       	in	r25, 0x3e	; 62
    2e7e:	80 96       	adiw	r24, 0x20	; 32
    2e80:	0f b6       	in	r0, 0x3f	; 63
    2e82:	f8 94       	cli
    2e84:	9e bf       	out	0x3e, r25	; 62
    2e86:	0f be       	out	0x3f, r0	; 63
    2e88:	8d bf       	out	0x3d, r24	; 61
    2e8a:	8c e6       	ldi	r24, 0x6C	; 108
    2e8c:	9b e0       	ldi	r25, 0x0B	; 11
    2e8e:	9f 93       	push	r25
    2e90:	8f 93       	push	r24
    2e92:	1f 92       	push	r1
    2e94:	cf 93       	push	r28
    2e96:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  MM      .MMN          .. . +MM,  8MM .MMMMMMMM.              \r\n"));
    2e9a:	8a e2       	ldi	r24, 0x2A	; 42
    2e9c:	9b e0       	ldi	r25, 0x0B	; 11
    2e9e:	9f 93       	push	r25
    2ea0:	8f 93       	push	r24
    2ea2:	1f 92       	push	r1
    2ea4:	cf 93       	push	r28
    2ea6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  M?    NMM           MMMMMMMMM   MM                            \r\n"));
    2eaa:	87 ee       	ldi	r24, 0xE7	; 231
    2eac:	9a e0       	ldi	r25, 0x0A	; 10
    2eae:	9f 93       	push	r25
    2eb0:	8f 93       	push	r24
    2eb2:	1f 92       	push	r1
    2eb4:	cf 93       	push	r28
    2eb6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  .M  .MM7            MMM MMMM   MM                           \r\n"));
    2eba:	86 ea       	ldi	r24, 0xA6	; 166
    2ebc:	9a e0       	ldi	r25, 0x0A	; 10
    2ebe:	9f 93       	push	r25
    2ec0:	8f 93       	push	r24
    2ec2:	1f 92       	push	r1
    2ec4:	cf 93       	push	r28
    2ec6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("    MMMM              OMM       .MM                           \r\n"));
    2eca:	85 e6       	ldi	r24, 0x65	; 101
    2ecc:	9a e0       	ldi	r25, 0x0A	; 10
    2ece:	9f 93       	push	r25
    2ed0:	8f 93       	push	r24
    2ed2:	1f 92       	push	r1
    2ed4:	cf 93       	push	r28
    2ed6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("     .                 MMM      MM                           \r\n"));
    2eda:	85 e2       	ldi	r24, 0x25	; 37
    2edc:	9a e0       	ldi	r25, 0x0A	; 10
    2ede:	9f 93       	push	r25
    2ee0:	8f 93       	push	r24
    2ee2:	1f 92       	push	r1
    2ee4:	cf 93       	push	r28
    2ee6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("                      .MMM    MM                             \r\n"));
    2eea:	85 ee       	ldi	r24, 0xE5	; 229
    2eec:	99 e0       	ldi	r25, 0x09	; 9
    2eee:	9f 93       	push	r25
    2ef0:	8f 93       	push	r24
    2ef2:	1f 92       	push	r1
    2ef4:	cf 93       	push	r28
    2ef6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("                       .MMD  MMM                             \r\n"));
    2efa:	85 ea       	ldi	r24, 0xA5	; 165
    2efc:	99 e0       	ldi	r25, 0x09	; 9
    2efe:	9f 93       	push	r25
    2f00:	8f 93       	push	r24
    2f02:	1f 92       	push	r1
    2f04:	cf 93       	push	r28
    2f06:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("                         MMMMM?                              \r\n"));
    2f0a:	8d b7       	in	r24, 0x3d	; 61
    2f0c:	9e b7       	in	r25, 0x3e	; 62
    2f0e:	80 96       	adiw	r24, 0x20	; 32
    2f10:	0f b6       	in	r0, 0x3f	; 63
    2f12:	f8 94       	cli
    2f14:	9e bf       	out	0x3e, r25	; 62
    2f16:	0f be       	out	0x3f, r0	; 63
    2f18:	8d bf       	out	0x3d, r24	; 61
    2f1a:	85 e6       	ldi	r24, 0x65	; 101
    2f1c:	99 e0       	ldi	r25, 0x09	; 9
    2f1e:	9f 93       	push	r25
    2f20:	8f 93       	push	r24
    2f22:	1f 92       	push	r1
    2f24:	cf 93       	push	r28
    2f26:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("                         MMM.   \r\n"));
    2f2a:	82 e4       	ldi	r24, 0x42	; 66
    2f2c:	99 e0       	ldi	r25, 0x09	; 9
    2f2e:	9f 93       	push	r25
    2f30:	8f 93       	push	r24
    2f32:	1f 92       	push	r1
    2f34:	cf 93       	push	r28
    2f36:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
}
    2f3a:	8d b7       	in	r24, 0x3d	; 61
    2f3c:	9e b7       	in	r25, 0x3e	; 62
    2f3e:	08 96       	adiw	r24, 0x08	; 8
    2f40:	0f b6       	in	r0, 0x3f	; 63
    2f42:	f8 94       	cli
    2f44:	9e bf       	out	0x3e, r25	; 62
    2f46:	0f be       	out	0x3f, r0	; 63
    2f48:	8d bf       	out	0x3d, r24	; 61
    2f4a:	cf 91       	pop	r28
    2f4c:	08 95       	ret

00002f4e <help>:




static void help()
{
    2f4e:	cf 93       	push	r28
	debug_logMessage(PGM_ON, L_NONE, PSTR("Available commands:\r\n"));
    2f50:	8f e9       	ldi	r24, 0x9F	; 159
    2f52:	97 e0       	ldi	r25, 0x07	; 7
    2f54:	9f 93       	push	r25
    2f56:	8f 93       	push	r24
    2f58:	1f 92       	push	r1
    2f5a:	c1 e0       	ldi	r28, 0x01	; 1
    2f5c:	cf 93       	push	r28
    2f5e:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  config [-a <n>] [-b] [-c] - configuration tool. Run 'config -h' for more details.\r\n"));
    2f62:	89 e4       	ldi	r24, 0x49	; 73
    2f64:	97 e0       	ldi	r25, 0x07	; 7
    2f66:	9f 93       	push	r25
    2f68:	8f 93       	push	r24
    2f6a:	1f 92       	push	r1
    2f6c:	cf 93       	push	r28
    2f6e:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  clear - clears screen.\r\n"));
    2f72:	8e e2       	ldi	r24, 0x2E	; 46
    2f74:	97 e0       	ldi	r25, 0x07	; 7
    2f76:	9f 93       	push	r25
    2f78:	8f 93       	push	r24
    2f7a:	1f 92       	push	r1
    2f7c:	cf 93       	push	r28
    2f7e:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  reboot - reboots the device.\r\n"));
    2f82:	8d e0       	ldi	r24, 0x0D	; 13
    2f84:	97 e0       	ldi	r25, 0x07	; 7
    2f86:	9f 93       	push	r25
    2f88:	8f 93       	push	r24
    2f8a:	1f 92       	push	r1
    2f8c:	cf 93       	push	r28
    2f8e:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  datetime - displays GPS date and time (UTC).\r\n"));
    2f92:	8c ed       	ldi	r24, 0xDC	; 220
    2f94:	96 e0       	ldi	r25, 0x06	; 6
    2f96:	9f 93       	push	r25
    2f98:	8f 93       	push	r24
    2f9a:	1f 92       	push	r1
    2f9c:	cf 93       	push	r28
    2f9e:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  sysinfo - displays system information.\r\n"));
    2fa2:	81 eb       	ldi	r24, 0xB1	; 177
    2fa4:	96 e0       	ldi	r25, 0x06	; 6
    2fa6:	9f 93       	push	r25
    2fa8:	8f 93       	push	r24
    2faa:	1f 92       	push	r1
    2fac:	cf 93       	push	r28
    2fae:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
}
    2fb2:	8d b7       	in	r24, 0x3d	; 61
    2fb4:	9e b7       	in	r25, 0x3e	; 62
    2fb6:	48 96       	adiw	r24, 0x18	; 24
    2fb8:	0f b6       	in	r0, 0x3f	; 63
    2fba:	f8 94       	cli
    2fbc:	9e bf       	out	0x3e, r25	; 62
    2fbe:	0f be       	out	0x3f, r0	; 63
    2fc0:	8d bf       	out	0x3d, r24	; 61
    2fc2:	cf 91       	pop	r28
    2fc4:	08 95       	ret

00002fc6 <sysinfo>:

static void sysinfo()
{
    2fc6:	ef 92       	push	r14
    2fc8:	ff 92       	push	r15
    2fca:	0f 93       	push	r16
    2fcc:	1f 93       	push	r17
    2fce:	cf 93       	push	r28
	debug_logMessage(PGM_ON, L_NONE, PSTR("Device information:\r\n"));
    2fd0:	8b e9       	ldi	r24, 0x9B	; 155
    2fd2:	96 e0       	ldi	r25, 0x06	; 6
    2fd4:	9f 93       	push	r25
    2fd6:	8f 93       	push	r24
    2fd8:	1f 92       	push	r1
    2fda:	c1 e0       	ldi	r28, 0x01	; 1
    2fdc:	cf 93       	push	r28
    2fde:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  MCU: AVR ATmega128, device signature: 0x1E9702\r\n"));
    2fe2:	88 e6       	ldi	r24, 0x68	; 104
    2fe4:	96 e0       	ldi	r25, 0x06	; 6
    2fe6:	9f 93       	push	r25
    2fe8:	8f 93       	push	r24
    2fea:	1f 92       	push	r1
    2fec:	cf 93       	push	r28
    2fee:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  Frequency: %d MHz\r\n"), F_CPU/1000000L);
    2ff2:	1f 92       	push	r1
    2ff4:	1f 92       	push	r1
    2ff6:	1f 92       	push	r1
    2ff8:	88 e0       	ldi	r24, 0x08	; 8
    2ffa:	8f 93       	push	r24
    2ffc:	82 e5       	ldi	r24, 0x52	; 82
    2ffe:	96 e0       	ldi	r25, 0x06	; 6
    3000:	9f 93       	push	r25
    3002:	8f 93       	push	r24
    3004:	1f 92       	push	r1
    3006:	cf 93       	push	r28
    3008:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  SRAM: 4K x 8 (4 KB)\r\n"));
    300c:	8a e3       	ldi	r24, 0x3A	; 58
    300e:	96 e0       	ldi	r25, 0x06	; 6
    3010:	9f 93       	push	r25
    3012:	8f 93       	push	r24
    3014:	1f 92       	push	r1
    3016:	cf 93       	push	r28
    3018:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  EEPROM: 1K x 32 (4 KB)\r\n"));
    301c:	8f e1       	ldi	r24, 0x1F	; 31
    301e:	96 e0       	ldi	r25, 0x06	; 6
    3020:	9f 93       	push	r25
    3022:	8f 93       	push	r24
    3024:	1f 92       	push	r1
    3026:	cf 93       	push	r28
    3028:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  Flash: 64K x 16 (128 KB)\r\n"));
    302c:	82 e0       	ldi	r24, 0x02	; 2
    302e:	96 e0       	ldi	r25, 0x06	; 6
    3030:	9f 93       	push	r25
    3032:	8f 93       	push	r24
    3034:	1f 92       	push	r1
    3036:	cf 93       	push	r28
    3038:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  Peripherals: GPIO, 1 x SPI, 2 x UART, 1 x TWI, 8c ADC, JTAG, EMI\r\n"));
    303c:	8d eb       	ldi	r24, 0xBD	; 189
    303e:	95 e0       	ldi	r25, 0x05	; 5
    3040:	9f 93       	push	r25
    3042:	8f 93       	push	r24
    3044:	1f 92       	push	r1
    3046:	cf 93       	push	r28
    3048:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("Software:\r\n"));
    304c:	8d b7       	in	r24, 0x3d	; 61
    304e:	9e b7       	in	r25, 0x3e	; 62
    3050:	80 96       	adiw	r24, 0x20	; 32
    3052:	0f b6       	in	r0, 0x3f	; 63
    3054:	f8 94       	cli
    3056:	9e bf       	out	0x3e, r25	; 62
    3058:	0f be       	out	0x3f, r0	; 63
    305a:	8d bf       	out	0x3d, r24	; 61
    305c:	81 eb       	ldi	r24, 0xB1	; 177
    305e:	95 e0       	ldi	r25, 0x05	; 5
    3060:	9f 93       	push	r25
    3062:	8f 93       	push	r24
    3064:	1f 92       	push	r1
    3066:	cf 93       	push	r28
    3068:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  Kernel: CanSatKernel version %s built %s\r\n"), KERNEL_VER, KERNEL_TIMESTAMP);
    306c:	8e e0       	ldi	r24, 0x0E	; 14
    306e:	e8 2e       	mov	r14, r24
    3070:	81 e0       	ldi	r24, 0x01	; 1
    3072:	f8 2e       	mov	r15, r24
    3074:	ff 92       	push	r15
    3076:	ef 92       	push	r14
    3078:	07 e2       	ldi	r16, 0x27	; 39
    307a:	11 e0       	ldi	r17, 0x01	; 1
    307c:	1f 93       	push	r17
    307e:	0f 93       	push	r16
    3080:	84 e8       	ldi	r24, 0x84	; 132
    3082:	95 e0       	ldi	r25, 0x05	; 5
    3084:	9f 93       	push	r25
    3086:	8f 93       	push	r24
    3088:	1f 92       	push	r1
    308a:	cf 93       	push	r28
    308c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  HAL: CanSatHAL version %s built %s\r\n"), KERNEL_VER, KERNEL_TIMESTAMP);
    3090:	ff 92       	push	r15
    3092:	ef 92       	push	r14
    3094:	1f 93       	push	r17
    3096:	0f 93       	push	r16
    3098:	8d e5       	ldi	r24, 0x5D	; 93
    309a:	95 e0       	ldi	r25, 0x05	; 5
    309c:	9f 93       	push	r25
    309e:	8f 93       	push	r24
    30a0:	1f 92       	push	r1
    30a2:	cf 93       	push	r28
    30a4:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("  FatFS: Petit FatFS version R0.02\r\n"), KERNEL_VER, KERNEL_TIMESTAMP);
    30a8:	ff 92       	push	r15
    30aa:	ef 92       	push	r14
    30ac:	1f 93       	push	r17
    30ae:	0f 93       	push	r16
    30b0:	88 e3       	ldi	r24, 0x38	; 56
    30b2:	95 e0       	ldi	r25, 0x05	; 5
    30b4:	9f 93       	push	r25
    30b6:	8f 93       	push	r24
    30b8:	1f 92       	push	r1
    30ba:	cf 93       	push	r28
    30bc:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
}
    30c0:	8d b7       	in	r24, 0x3d	; 61
    30c2:	9e b7       	in	r25, 0x3e	; 62
    30c4:	4c 96       	adiw	r24, 0x1c	; 28
    30c6:	0f b6       	in	r0, 0x3f	; 63
    30c8:	f8 94       	cli
    30ca:	9e bf       	out	0x3e, r25	; 62
    30cc:	0f be       	out	0x3f, r0	; 63
    30ce:	8d bf       	out	0x3d, r24	; 61
    30d0:	cf 91       	pop	r28
    30d2:	1f 91       	pop	r17
    30d4:	0f 91       	pop	r16
    30d6:	ff 90       	pop	r15
    30d8:	ef 90       	pop	r14
    30da:	08 95       	ret

000030dc <clear>:
	//debug_logMessage(PGM_ON, L_NONE, PSTR("Current time: %02d.%02d.20%02d %02d:%02d:%02d UTC\r\n"), GPS.day, GPS.month, GPS.year, GPS.hour, GPS.minute, GPS.second);
}

static void clear()
{
	debug_logMessage(PGM_ON, L_NONE, PSTR("\x0C"));
    30dc:	86 e3       	ldi	r24, 0x36	; 54
    30de:	95 e0       	ldi	r25, 0x05	; 5
    30e0:	9f 93       	push	r25
    30e2:	8f 93       	push	r24
    30e4:	1f 92       	push	r1
    30e6:	81 e0       	ldi	r24, 0x01	; 1
    30e8:	8f 93       	push	r24
    30ea:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
}
    30ee:	0f 90       	pop	r0
    30f0:	0f 90       	pop	r0
    30f2:	0f 90       	pop	r0
    30f4:	0f 90       	pop	r0
    30f6:	08 95       	ret

000030f8 <reboot>:
	}
}

static void reboot()
{
	debug_logMessage(PGM_ON, L_NONE, PSTR("Reboot command\r\n"));
    30f8:	85 e2       	ldi	r24, 0x25	; 37
    30fa:	95 e0       	ldi	r25, 0x05	; 5
    30fc:	9f 93       	push	r25
    30fe:	8f 93       	push	r24
    3100:	1f 92       	push	r1
    3102:	81 e0       	ldi	r24, 0x01	; 1
    3104:	8f 93       	push	r24
    3106:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
}
    310a:	0f 90       	pop	r0
    310c:	0f 90       	pop	r0
    310e:	0f 90       	pop	r0
    3110:	0f 90       	pop	r0
    3112:	08 95       	ret

00003114 <getDS18>:
{
	debug_logMessage(PGM_ON, L_NONE, PSTR("\x0C"));
}

void getDS18(){
	ds18b20_requestTemperature();
    3114:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <ds18b20_requestTemperature>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3118:	2f ef       	ldi	r18, 0xFF	; 255
    311a:	89 e6       	ldi	r24, 0x69	; 105
    311c:	98 e1       	ldi	r25, 0x18	; 24
    311e:	21 50       	subi	r18, 0x01	; 1
    3120:	80 40       	sbci	r24, 0x00	; 0
    3122:	90 40       	sbci	r25, 0x00	; 0
    3124:	e1 f7       	brne	.-8      	; 0x311e <getDS18+0xa>
    3126:	00 c0       	rjmp	.+0      	; 0x3128 <getDS18+0x14>
    3128:	00 00       	nop
	delay_ms(1000);
	char * str = ds18b20_readTemperature();
    312a:	0e 94 72 13 	call	0x26e4	; 0x26e4 <ds18b20_readTemperature>
	debug_logMessage(PGM_ON, L_NONE, PSTR("temperature: %s\r\n"), str);
    312e:	9f 93       	push	r25
    3130:	8f 93       	push	r24
    3132:	8b eb       	ldi	r24, 0xBB	; 187
    3134:	97 e1       	ldi	r25, 0x17	; 23
    3136:	9f 93       	push	r25
    3138:	8f 93       	push	r24
    313a:	1f 92       	push	r1
    313c:	81 e0       	ldi	r24, 0x01	; 1
    313e:	8f 93       	push	r24
    3140:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
}
    3144:	0f 90       	pop	r0
    3146:	0f 90       	pop	r0
    3148:	0f 90       	pop	r0
    314a:	0f 90       	pop	r0
    314c:	0f 90       	pop	r0
    314e:	0f 90       	pop	r0
    3150:	08 95       	ret

00003152 <getbmp280>:

void getbmp280(){
    3152:	0f 93       	push	r16
    3154:	1f 93       	push	r17
    3156:	cf 93       	push	r28
    3158:	df 93       	push	r29
	
	float t = bmp280_readTemperature();
    315a:	0e 94 c7 0f 	call	0x1f8e	; 0x1f8e <bmp280_readTemperature>
    315e:	eb 01       	movw	r28, r22
    3160:	18 2f       	mov	r17, r24
    3162:	09 2f       	mov	r16, r25
	float prs = bmp280_readPressure();
    3164:	0e 94 70 10 	call	0x20e0	; 0x20e0 <bmp280_readPressure>
	debug_logMessage(PGM_ON, L_NONE, PSTR("t1: %f, p: %f\r\n"), t, prs);
    3168:	9f 93       	push	r25
    316a:	8f 93       	push	r24
    316c:	7f 93       	push	r23
    316e:	6f 93       	push	r22
    3170:	0f 93       	push	r16
    3172:	1f 93       	push	r17
    3174:	df 93       	push	r29
    3176:	cf 93       	push	r28
    3178:	8b ea       	ldi	r24, 0xAB	; 171
    317a:	97 e1       	ldi	r25, 0x17	; 23
    317c:	9f 93       	push	r25
    317e:	8f 93       	push	r24
    3180:	1f 92       	push	r1
    3182:	81 e0       	ldi	r24, 0x01	; 1
    3184:	8f 93       	push	r24
    3186:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
}
    318a:	8d b7       	in	r24, 0x3d	; 61
    318c:	9e b7       	in	r25, 0x3e	; 62
    318e:	0c 96       	adiw	r24, 0x0c	; 12
    3190:	0f b6       	in	r0, 0x3f	; 63
    3192:	f8 94       	cli
    3194:	9e bf       	out	0x3e, r25	; 62
    3196:	0f be       	out	0x3f, r0	; 63
    3198:	8d bf       	out	0x3d, r24	; 61
    319a:	df 91       	pop	r29
    319c:	cf 91       	pop	r28
    319e:	1f 91       	pop	r17
    31a0:	0f 91       	pop	r16
    31a2:	08 95       	ret

000031a4 <getadxl345>:

void getadxl345(){
    31a4:	0f 93       	push	r16
    31a6:	1f 93       	push	r17
    31a8:	cf 93       	push	r28
    31aa:	df 93       	push	r29
	float x = adxl345_readX();
    31ac:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <adxl345_readX>
    31b0:	ec 01       	movw	r28, r24
	float y = adxl345_readY();
    31b2:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <adxl345_readY>
    31b6:	8c 01       	movw	r16, r24
	float z = adxl345_readZ();
    31b8:	0e 94 4d 0f 	call	0x1e9a	; 0x1e9a <adxl345_readZ>
	debug_logMessage(PGM_ON, L_NONE, PSTR("x1: %f, y1: %f,z1: %f\r\n"), x, y, z);
    31bc:	bc 01       	movw	r22, r24
    31be:	99 0f       	add	r25, r25
    31c0:	88 0b       	sbc	r24, r24
    31c2:	99 0b       	sbc	r25, r25
    31c4:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    31c8:	9f 93       	push	r25
    31ca:	8f 93       	push	r24
    31cc:	7f 93       	push	r23
    31ce:	6f 93       	push	r22
    31d0:	b8 01       	movw	r22, r16
    31d2:	11 0f       	add	r17, r17
    31d4:	88 0b       	sbc	r24, r24
    31d6:	99 0b       	sbc	r25, r25
    31d8:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    31dc:	9f 93       	push	r25
    31de:	8f 93       	push	r24
    31e0:	7f 93       	push	r23
    31e2:	6f 93       	push	r22
    31e4:	be 01       	movw	r22, r28
    31e6:	dd 0f       	add	r29, r29
    31e8:	88 0b       	sbc	r24, r24
    31ea:	99 0b       	sbc	r25, r25
    31ec:	0e 94 e9 24 	call	0x49d2	; 0x49d2 <__floatsisf>
    31f0:	9f 93       	push	r25
    31f2:	8f 93       	push	r24
    31f4:	7f 93       	push	r23
    31f6:	6f 93       	push	r22
    31f8:	83 e9       	ldi	r24, 0x93	; 147
    31fa:	97 e1       	ldi	r25, 0x17	; 23
    31fc:	9f 93       	push	r25
    31fe:	8f 93       	push	r24
    3200:	1f 92       	push	r1
    3202:	81 e0       	ldi	r24, 0x01	; 1
    3204:	8f 93       	push	r24
    3206:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
}
    320a:	8d b7       	in	r24, 0x3d	; 61
    320c:	9e b7       	in	r25, 0x3e	; 62
    320e:	40 96       	adiw	r24, 0x10	; 16
    3210:	0f b6       	in	r0, 0x3f	; 63
    3212:	f8 94       	cli
    3214:	9e bf       	out	0x3e, r25	; 62
    3216:	0f be       	out	0x3f, r0	; 63
    3218:	8d bf       	out	0x3d, r24	; 61
    321a:	df 91       	pop	r29
    321c:	cf 91       	pop	r28
    321e:	1f 91       	pop	r17
    3220:	0f 91       	pop	r16
    3222:	08 95       	ret

00003224 <kernel_clearRecvBuffer>:
volatile static uint8_t recvBuffer_i = 0;
static struct kCommandStruct_t commands[CMD_COMMAND_AMOUNT];
static uint8_t registeredCmds = 0;

static void kernel_clearRecvBuffer(){
	for(int i = 0; i < RX0_BUFFER_SIZE; i++) recvBuffer[i] = 0;
    3224:	80 e0       	ldi	r24, 0x00	; 0
    3226:	90 e0       	ldi	r25, 0x00	; 0
    3228:	fc 01       	movw	r30, r24
    322a:	e3 53       	subi	r30, 0x33	; 51
    322c:	fc 4f       	sbci	r31, 0xFC	; 252
    322e:	10 82       	st	Z, r1
    3230:	01 96       	adiw	r24, 0x01	; 1
    3232:	80 34       	cpi	r24, 0x40	; 64
    3234:	91 05       	cpc	r25, r1
    3236:	c1 f7       	brne	.-16     	; 0x3228 <kernel_clearRecvBuffer+0x4>
	recvBuffer_i = 0;
    3238:	10 92 cc 03 	sts	0x03CC, r1	; 0x8003cc <recvBuffer_i>
	hal_uart_enableInterruptsRX();
    323c:	0c 94 45 1e 	jmp	0x3c8a	; 0x3c8a <hal_basicUart_enableInterruptsRX>

00003240 <kernel_processCommand>:
}
static int kernel_processCommand()
{
    3240:	af 92       	push	r10
    3242:	bf 92       	push	r11
    3244:	cf 92       	push	r12
    3246:	df 92       	push	r13
    3248:	ef 92       	push	r14
    324a:	ff 92       	push	r15
    324c:	0f 93       	push	r16
    324e:	1f 93       	push	r17
    3250:	cf 93       	push	r28
    3252:	df 93       	push	r29
	//uint8_t c_argc = 0;
	//debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Received string: %s\r\n"), recvBuffer);
	char * token = strtok((char *)recvBuffer, " ");
    3254:	66 e3       	ldi	r22, 0x36	; 54
    3256:	71 e0       	ldi	r23, 0x01	; 1
    3258:	8d ec       	ldi	r24, 0xCD	; 205
    325a:	93 e0       	ldi	r25, 0x03	; 3
    325c:	0e 94 c8 2b 	call	0x5790	; 0x5790 <strtok>
    3260:	5c 01       	movw	r10, r24
	if(token == NULL){
    3262:	89 2b       	or	r24, r25
    3264:	f1 f4       	brne	.+60     	; 0x32a2 <kernel_processCommand+0x62>
		kernel_clearRecvBuffer();
    3266:	0e 94 12 19 	call	0x3224	; 0x3224 <kernel_clearRecvBuffer>
		debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Enter a command\r\n"));
    326a:	85 e8       	ldi	r24, 0x85	; 133
    326c:	92 e0       	ldi	r25, 0x02	; 2
    326e:	9f 93       	push	r25
    3270:	8f 93       	push	r24
    3272:	1f 92       	push	r1
    3274:	c1 e0       	ldi	r28, 0x01	; 1
    3276:	cf 93       	push	r28
    3278:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_ON, L_NONE, PSTR("\r\nroot@cansat:< "));
    327c:	84 e7       	ldi	r24, 0x74	; 116
    327e:	92 e0       	ldi	r25, 0x02	; 2
    3280:	9f 93       	push	r25
    3282:	8f 93       	push	r24
    3284:	1f 92       	push	r1
    3286:	cf 93       	push	r28
    3288:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		return 0;
    328c:	8d b7       	in	r24, 0x3d	; 61
    328e:	9e b7       	in	r25, 0x3e	; 62
    3290:	08 96       	adiw	r24, 0x08	; 8
    3292:	0f b6       	in	r0, 0x3f	; 63
    3294:	f8 94       	cli
    3296:	9e bf       	out	0x3e, r25	; 62
    3298:	0f be       	out	0x3f, r0	; 63
    329a:	8d bf       	out	0x3d, r24	; 61
    329c:	c0 e0       	ldi	r28, 0x00	; 0
    329e:	d0 e0       	ldi	r29, 0x00	; 0
    32a0:	5f c0       	rjmp	.+190    	; 0x3360 <kernel_processCommand+0x120>
	}
	debug_logMessage(PGM_ON, L_NONE, PSTR("\r\n"));
    32a2:	81 e7       	ldi	r24, 0x71	; 113
    32a4:	92 e0       	ldi	r25, 0x02	; 2
    32a6:	9f 93       	push	r25
    32a8:	8f 93       	push	r24
    32aa:	1f 92       	push	r1
    32ac:	81 e0       	ldi	r24, 0x01	; 1
    32ae:	8f 93       	push	r24
    32b0:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	//debug_logMessage(PGM_ON, L_NONE, PSTR("Here 2\r\n"));
	for(int i = 0; i < registeredCmds; i++){
    32b4:	e0 90 c1 02 	lds	r14, 0x02C1	; 0x8002c1 <registeredCmds>
    32b8:	f1 2c       	mov	r15, r1
    32ba:	82 ec       	ldi	r24, 0xC2	; 194
    32bc:	c8 2e       	mov	r12, r24
    32be:	82 e0       	ldi	r24, 0x02	; 2
    32c0:	d8 2e       	mov	r13, r24
    32c2:	0f 90       	pop	r0
    32c4:	0f 90       	pop	r0
    32c6:	0f 90       	pop	r0
    32c8:	0f 90       	pop	r0
    32ca:	00 e0       	ldi	r16, 0x00	; 0
    32cc:	10 e0       	ldi	r17, 0x00	; 0
    32ce:	0e 15       	cp	r16, r14
    32d0:	1f 05       	cpc	r17, r15
    32d2:	4c f5       	brge	.+82     	; 0x3326 <kernel_processCommand+0xe6>
		//debug_logMessage(PGM_ON, L_NONE, PSTR("Comparing %s and %s\r\n"), token, commands[i].keyword);
		if(strcmp(commands[i].keyword, token) == 0){
    32d4:	b5 01       	movw	r22, r10
    32d6:	c6 01       	movw	r24, r12
    32d8:	0e 94 cc 2b 	call	0x5798	; 0x5798 <strcmp>
    32dc:	ec 01       	movw	r28, r24
    32de:	93 e1       	ldi	r25, 0x13	; 19
    32e0:	c9 0e       	add	r12, r25
    32e2:	d1 1c       	adc	r13, r1
    32e4:	20 97       	sbiw	r28, 0x00	; 0
    32e6:	e1 f4       	brne	.+56     	; 0x3320 <kernel_processCommand+0xe0>
			//while(token != NULL){
			//	strtok(NULL, " ");
			//	c_argc++;
			//}
			//debug_logMessage(PGM_ON, L_INFO, PSTR("cli: Parsing result: %s\r\n"), token);
			(commands[i].handler)();
    32e8:	83 e1       	ldi	r24, 0x13	; 19
    32ea:	80 9f       	mul	r24, r16
    32ec:	f0 01       	movw	r30, r0
    32ee:	81 9f       	mul	r24, r17
    32f0:	f0 0d       	add	r31, r0
    32f2:	11 24       	eor	r1, r1
    32f4:	ee 53       	subi	r30, 0x3E	; 62
    32f6:	fd 4f       	sbci	r31, 0xFD	; 253
    32f8:	00 88       	ldd	r0, Z+16	; 0x10
    32fa:	f1 89       	ldd	r31, Z+17	; 0x11
    32fc:	e0 2d       	mov	r30, r0
    32fe:	09 95       	icall
			kernel_clearRecvBuffer();
    3300:	0e 94 12 19 	call	0x3224	; 0x3224 <kernel_clearRecvBuffer>
			debug_logMessage(PGM_ON, L_NONE, PSTR("\r\nroot@cansat:< "));
    3304:	80 e6       	ldi	r24, 0x60	; 96
    3306:	92 e0       	ldi	r25, 0x02	; 2
    3308:	9f 93       	push	r25
    330a:	8f 93       	push	r24
    330c:	1f 92       	push	r1
    330e:	81 e0       	ldi	r24, 0x01	; 1
    3310:	8f 93       	push	r24
    3312:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
			return 0;
    3316:	0f 90       	pop	r0
    3318:	0f 90       	pop	r0
    331a:	0f 90       	pop	r0
    331c:	0f 90       	pop	r0
    331e:	20 c0       	rjmp	.+64     	; 0x3360 <kernel_processCommand+0x120>
		debug_logMessage(PGM_ON, L_NONE, PSTR("\r\nroot@cansat:< "));
		return 0;
	}
	debug_logMessage(PGM_ON, L_NONE, PSTR("\r\n"));
	//debug_logMessage(PGM_ON, L_NONE, PSTR("Here 2\r\n"));
	for(int i = 0; i < registeredCmds; i++){
    3320:	0f 5f       	subi	r16, 0xFF	; 255
    3322:	1f 4f       	sbci	r17, 0xFF	; 255
    3324:	d4 cf       	rjmp	.-88     	; 0x32ce <kernel_processCommand+0x8e>
			//debug_logMessage(PGM_ON, L_INFO, PSTR("cli: Parsing result: %s\r\n"), token);
			//debug_logMessage(PGM_ON, L_ERROR, PSTR("cli: Buffer length: %d\r\n"), recvBuffer_i);
		}
	}
	
	kernel_clearRecvBuffer();
    3326:	0e 94 12 19 	call	0x3224	; 0x3224 <kernel_clearRecvBuffer>
	debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Command not found\r\n"));
    332a:	87 e4       	ldi	r24, 0x47	; 71
    332c:	92 e0       	ldi	r25, 0x02	; 2
    332e:	9f 93       	push	r25
    3330:	8f 93       	push	r24
    3332:	1f 92       	push	r1
    3334:	c1 e0       	ldi	r28, 0x01	; 1
    3336:	cf 93       	push	r28
    3338:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("\r\nroot@cansat:< "));
    333c:	86 e3       	ldi	r24, 0x36	; 54
    333e:	92 e0       	ldi	r25, 0x02	; 2
    3340:	9f 93       	push	r25
    3342:	8f 93       	push	r24
    3344:	1f 92       	push	r1
    3346:	cf 93       	push	r28
    3348:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	return ERR_COMMAND_NOT_FOUND;
    334c:	8d b7       	in	r24, 0x3d	; 61
    334e:	9e b7       	in	r25, 0x3e	; 62
    3350:	08 96       	adiw	r24, 0x08	; 8
    3352:	0f b6       	in	r0, 0x3f	; 63
    3354:	f8 94       	cli
    3356:	9e bf       	out	0x3e, r25	; 62
    3358:	0f be       	out	0x3f, r0	; 63
    335a:	8d bf       	out	0x3d, r24	; 61
    335c:	c5 e1       	ldi	r28, 0x15	; 21
    335e:	d0 e0       	ldi	r29, 0x00	; 0
}
    3360:	ce 01       	movw	r24, r28
    3362:	df 91       	pop	r29
    3364:	cf 91       	pop	r28
    3366:	1f 91       	pop	r17
    3368:	0f 91       	pop	r16
    336a:	ff 90       	pop	r15
    336c:	ef 90       	pop	r14
    336e:	df 90       	pop	r13
    3370:	cf 90       	pop	r12
    3372:	bf 90       	pop	r11
    3374:	af 90       	pop	r10
    3376:	08 95       	ret

00003378 <kernel_registerCommand>:

void kernel_registerCommand(const char * c_keyword, kCmdHandler c_ptr)
{
    3378:	df 92       	push	r13
    337a:	ef 92       	push	r14
    337c:	ff 92       	push	r15
    337e:	0f 93       	push	r16
    3380:	1f 93       	push	r17
    3382:	cf 93       	push	r28
    3384:	df 93       	push	r29
	if(registeredCmds < CMD_COMMAND_AMOUNT+1){
    3386:	20 91 c1 02 	lds	r18, 0x02C1	; 0x8002c1 <registeredCmds>
    338a:	2f 30       	cpi	r18, 0x0F	; 15
    338c:	88 f5       	brcc	.+98     	; 0x33f0 <kernel_registerCommand+0x78>
    338e:	e7 2e       	mov	r14, r23
    3390:	d6 2e       	mov	r13, r22
    3392:	8c 01       	movw	r16, r24
		debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Registered command %s, handler at 0x%X\r\n"), c_keyword, (int)c_ptr);
    3394:	7f 93       	push	r23
    3396:	6f 93       	push	r22
    3398:	1f 93       	push	r17
    339a:	8f 93       	push	r24
    339c:	8d ec       	ldi	r24, 0xCD	; 205
    339e:	97 e1       	ldi	r25, 0x17	; 23
    33a0:	9f 93       	push	r25
    33a2:	8f 93       	push	r24
    33a4:	1f 92       	push	r1
    33a6:	81 e0       	ldi	r24, 0x01	; 1
    33a8:	8f 93       	push	r24
    33aa:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		commands[registeredCmds].handler = c_ptr;
    33ae:	f0 90 c1 02 	lds	r15, 0x02C1	; 0x8002c1 <registeredCmds>
    33b2:	83 e1       	ldi	r24, 0x13	; 19
    33b4:	f8 9e       	mul	r15, r24
    33b6:	e0 01       	movw	r28, r0
    33b8:	11 24       	eor	r1, r1
    33ba:	ce 53       	subi	r28, 0x3E	; 62
    33bc:	dd 4f       	sbci	r29, 0xFD	; 253
    33be:	d8 8a       	std	Y+16, r13	; 0x10
    33c0:	e9 8a       	std	Y+17, r14	; 0x11
		strcpy(commands[registeredCmds].keyword, c_keyword);
    33c2:	b8 01       	movw	r22, r16
    33c4:	ce 01       	movw	r24, r28
    33c6:	0e 94 d5 2b 	call	0x57aa	; 0x57aa <strcpy>
		commands[registeredCmds].length = strlen(c_keyword);
    33ca:	f8 01       	movw	r30, r16
    33cc:	01 90       	ld	r0, Z+
    33ce:	00 20       	and	r0, r0
    33d0:	e9 f7       	brne	.-6      	; 0x33cc <kernel_registerCommand+0x54>
    33d2:	31 97       	sbiw	r30, 0x01	; 1
    33d4:	e0 1b       	sub	r30, r16
    33d6:	f1 0b       	sbc	r31, r17
    33d8:	ea 8b       	std	Y+18, r30	; 0x12
		registeredCmds++;
    33da:	f3 94       	inc	r15
    33dc:	f0 92 c1 02 	sts	0x02C1, r15	; 0x8002c1 <registeredCmds>
    33e0:	8d b7       	in	r24, 0x3d	; 61
    33e2:	9e b7       	in	r25, 0x3e	; 62
    33e4:	08 96       	adiw	r24, 0x08	; 8
    33e6:	0f b6       	in	r0, 0x3f	; 63
    33e8:	f8 94       	cli
    33ea:	9e bf       	out	0x3e, r25	; 62
    33ec:	0f be       	out	0x3f, r0	; 63
    33ee:	8d bf       	out	0x3d, r24	; 61
	}
}
    33f0:	df 91       	pop	r29
    33f2:	cf 91       	pop	r28
    33f4:	1f 91       	pop	r17
    33f6:	0f 91       	pop	r16
    33f8:	ff 90       	pop	r15
    33fa:	ef 90       	pop	r14
    33fc:	df 90       	pop	r13
    33fe:	08 95       	ret

00003400 <kernel_parseCmdArgs>:

char kernel_parseCmdArgs(char * token, char * arglist, uint8_t arglist_len){
    3400:	dc 01       	movw	r26, r24
    3402:	fb 01       	movw	r30, r22
	for(int i = 0; i < arglist_len; i++){
    3404:	20 e0       	ldi	r18, 0x00	; 0
    3406:	30 e0       	ldi	r19, 0x00	; 0
    3408:	50 e0       	ldi	r21, 0x00	; 0
		if(token[1] == arglist[i]){
			return arglist[i];
			//debug_logMessage(PGM_ON, L_INFO, PSTR("cli: Parsed argument %c\r\n"), arglist[i]);
		}
		else if(i == arglist_len-1){
    340a:	ba 01       	movw	r22, r20
    340c:	61 50       	subi	r22, 0x01	; 1
    340e:	71 09       	sbc	r23, r1
		registeredCmds++;
	}
}

char kernel_parseCmdArgs(char * token, char * arglist, uint8_t arglist_len){
	for(int i = 0; i < arglist_len; i++){
    3410:	24 17       	cp	r18, r20
    3412:	35 07       	cpc	r19, r21
    3414:	64 f4       	brge	.+24     	; 0x342e <kernel_parseCmdArgs+0x2e>
		if(token[1] == arglist[i]){
    3416:	81 91       	ld	r24, Z+
    3418:	11 96       	adiw	r26, 0x01	; 1
    341a:	9c 91       	ld	r25, X
    341c:	11 97       	sbiw	r26, 0x01	; 1
    341e:	98 17       	cp	r25, r24
    3420:	39 f0       	breq	.+14     	; 0x3430 <kernel_parseCmdArgs+0x30>
			return arglist[i];
			//debug_logMessage(PGM_ON, L_INFO, PSTR("cli: Parsed argument %c\r\n"), arglist[i]);
		}
		else if(i == arglist_len-1){
    3422:	26 17       	cp	r18, r22
    3424:	37 07       	cpc	r19, r23
    3426:	19 f0       	breq	.+6      	; 0x342e <kernel_parseCmdArgs+0x2e>
		registeredCmds++;
	}
}

char kernel_parseCmdArgs(char * token, char * arglist, uint8_t arglist_len){
	for(int i = 0; i < arglist_len; i++){
    3428:	2f 5f       	subi	r18, 0xFF	; 255
    342a:	3f 4f       	sbci	r19, 0xFF	; 255
    342c:	f1 cf       	rjmp	.-30     	; 0x3410 <kernel_parseCmdArgs+0x10>
		if(token[1] == arglist[i]){
			return arglist[i];
			//debug_logMessage(PGM_ON, L_INFO, PSTR("cli: Parsed argument %c\r\n"), arglist[i]);
		}
		else if(i == arglist_len-1){
			return '\0';
    342e:	80 e0       	ldi	r24, 0x00	; 0
		}
	}
	return '\0';
}
    3430:	08 95       	ret

00003432 <debug>:
		}
	}
}

static void debug()
{
    3432:	2f 92       	push	r2
    3434:	3f 92       	push	r3
    3436:	4f 92       	push	r4
    3438:	5f 92       	push	r5
    343a:	6f 92       	push	r6
    343c:	7f 92       	push	r7
    343e:	8f 92       	push	r8
    3440:	9f 92       	push	r9
    3442:	bf 92       	push	r11
    3444:	cf 92       	push	r12
    3446:	df 92       	push	r13
    3448:	ef 92       	push	r14
    344a:	ff 92       	push	r15
    344c:	0f 93       	push	r16
    344e:	1f 93       	push	r17
    3450:	cf 93       	push	r28
    3452:	df 93       	push	r29
    3454:	cd b7       	in	r28, 0x3d	; 61
    3456:	de b7       	in	r29, 0x3e	; 62
    3458:	29 97       	sbiw	r28, 0x09	; 9
    345a:	0f b6       	in	r0, 0x3f	; 63
    345c:	f8 94       	cli
    345e:	de bf       	out	0x3e, r29	; 62
    3460:	0f be       	out	0x3f, r0	; 63
    3462:	cd bf       	out	0x3d, r28	; 61
	char * token = (char *)recvBuffer;
	char arglist[] = "dv";
    3464:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <__malloc_margin+0x3e>
    3468:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <__malloc_margin+0x3f>
    346c:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <__malloc_margin+0x40>
    3470:	8e 83       	std	Y+6, r24	; 0x06
    3472:	9f 83       	std	Y+7, r25	; 0x07
    3474:	a8 87       	std	Y+8, r26	; 0x08
	char activeArgument = '\0';
	uint8_t arglist_len = strlen(arglist);
    3476:	6e 01       	movw	r12, r28
    3478:	26 e0       	ldi	r18, 0x06	; 6
    347a:	c2 0e       	add	r12, r18
    347c:	d1 1c       	adc	r13, r1
    347e:	f6 01       	movw	r30, r12
    3480:	01 90       	ld	r0, Z+
    3482:	00 20       	and	r0, r0
    3484:	e9 f7       	brne	.-6      	; 0x3480 <debug+0x4e>
    3486:	31 97       	sbiw	r30, 0x01	; 1
    3488:	8e 2f       	mov	r24, r30
    348a:	8c 19       	sub	r24, r12
    348c:	89 87       	std	Y+9, r24	; 0x09
	}
}

static void debug()
{
	char * token = (char *)recvBuffer;
    348e:	0d ec       	ldi	r16, 0xCD	; 205
    3490:	13 e0       	ldi	r17, 0x03	; 3
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Unknown argument: %s\r\n"), token);
					return;
				break;
				case 'd':
					token = strtok(NULL, " ");
					if(sscanf(token, "%s", ds) != 0){
    3492:	fe 01       	movw	r30, r28
    3494:	31 96       	adiw	r30, 0x01	; 1
    3496:	7f 01       	movw	r14, r30
						else {
							debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Unknown argument value, should be either 'on' or 'off'\r\n"));
						}
			
					}
					else debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Error: no argument value specified\r\n"));
    3498:	bb 24       	eor	r11, r11
    349a:	b3 94       	inc	r11
						if(strcmp(ds, "on") == 0){
							debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Enabling debug output\r\n"));
							kernel_setFlag(KFLAG_DEBUG, 1);
						} 
						else if(strcmp(ds, "off") == 0){
							debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Disabling debug output\r\n"));
    349c:	8e ec       	ldi	r24, 0xCE	; 206
    349e:	28 2e       	mov	r2, r24
    34a0:	84 e0       	ldi	r24, 0x04	; 4
    34a2:	38 2e       	mov	r3, r24
				break;
				case 'd':
					token = strtok(NULL, " ");
					if(sscanf(token, "%s", ds) != 0){
						if(strcmp(ds, "on") == 0){
							debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Enabling debug output\r\n"));
    34a4:	9c ee       	ldi	r25, 0xEC	; 236
    34a6:	49 2e       	mov	r4, r25
    34a8:	94 e0       	ldi	r25, 0x04	; 4
    34aa:	59 2e       	mov	r5, r25
					if(strcmp(ds, "on") == 0){
						debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Enabling verbose output\r\n"));
						//kernel_setFlag(KFLAG_DEBUG, 1);
					}
					if(strcmp(ds, "off") == 0){
						debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Disabling debug output\r\n"));
    34ac:	29 e2       	ldi	r18, 0x29	; 41
    34ae:	62 2e       	mov	r6, r18
    34b0:	24 e0       	ldi	r18, 0x04	; 4
    34b2:	72 2e       	mov	r7, r18
						//kernel_setFlag(KFLAG_DEBUG, 0);
					}
				break;
				default:
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Mishandled argument\r\n"));
    34b4:	3e e0       	ldi	r19, 0x0E	; 14
    34b6:	83 2e       	mov	r8, r19
    34b8:	34 e0       	ldi	r19, 0x04	; 4
    34ba:	93 2e       	mov	r9, r19
	char * token = (char *)recvBuffer;
	char arglist[] = "dv";
	char activeArgument = '\0';
	uint8_t arglist_len = strlen(arglist);
	
	while(token != NULL){
    34bc:	01 2b       	or	r16, r17
    34be:	09 f4       	brne	.+2      	; 0x34c2 <debug+0x90>
    34c0:	94 c0       	rjmp	.+296    	; 0x35ea <debug+0x1b8>
		token = strtok(NULL, " ");
    34c2:	66 e3       	ldi	r22, 0x36	; 54
    34c4:	71 e0       	ldi	r23, 0x01	; 1
    34c6:	80 e0       	ldi	r24, 0x00	; 0
    34c8:	90 e0       	ldi	r25, 0x00	; 0
    34ca:	0e 94 c8 2b 	call	0x5790	; 0x5790 <strtok>
    34ce:	8c 01       	movw	r16, r24
		if(token[0] == '-'){
    34d0:	fc 01       	movw	r30, r24
    34d2:	80 81       	ld	r24, Z
    34d4:	8d 32       	cpi	r24, 0x2D	; 45
    34d6:	91 f7       	brne	.-28     	; 0x34bc <debug+0x8a>
			activeArgument = kernel_parseCmdArgs(token, arglist, arglist_len);
    34d8:	49 85       	ldd	r20, Y+9	; 0x09
    34da:	b6 01       	movw	r22, r12
    34dc:	c8 01       	movw	r24, r16
    34de:	0e 94 00 1a 	call	0x3400	; 0x3400 <kernel_parseCmdArgs>
			char ds[5];
			switch(activeArgument){
    34e2:	84 36       	cpi	r24, 0x64	; 100
    34e4:	b9 f0       	breq	.+46     	; 0x3514 <debug+0xe2>
    34e6:	86 37       	cpi	r24, 0x76	; 118
    34e8:	09 f4       	brne	.+2      	; 0x34ec <debug+0xba>
    34ea:	56 c0       	rjmp	.+172    	; 0x3598 <debug+0x166>
    34ec:	81 11       	cpse	r24, r1
    34ee:	72 c0       	rjmp	.+228    	; 0x35d4 <debug+0x1a2>
				case '\0':
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Unknown argument: %s\r\n"), token);
    34f0:	1f 93       	push	r17
    34f2:	0f 93       	push	r16
    34f4:	89 e0       	ldi	r24, 0x09	; 9
    34f6:	95 e0       	ldi	r25, 0x05	; 5
    34f8:	9f 93       	push	r25
    34fa:	8f 93       	push	r24
    34fc:	1f 92       	push	r1
    34fe:	81 e0       	ldi	r24, 0x01	; 1
    3500:	8f 93       	push	r24
    3502:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
    3506:	0f 90       	pop	r0
    3508:	0f 90       	pop	r0
    350a:	0f 90       	pop	r0
    350c:	0f 90       	pop	r0
    350e:	0f 90       	pop	r0
    3510:	0f 90       	pop	r0
    3512:	6b c0       	rjmp	.+214    	; 0x35ea <debug+0x1b8>
					return;
				break;
				case 'd':
					token = strtok(NULL, " ");
    3514:	66 e3       	ldi	r22, 0x36	; 54
    3516:	71 e0       	ldi	r23, 0x01	; 1
    3518:	80 e0       	ldi	r24, 0x00	; 0
    351a:	90 e0       	ldi	r25, 0x00	; 0
    351c:	0e 94 c8 2b 	call	0x5790	; 0x5790 <strtok>
    3520:	8c 01       	movw	r16, r24
					if(sscanf(token, "%s", ds) != 0){
    3522:	ff 92       	push	r15
    3524:	ef 92       	push	r14
    3526:	88 e3       	ldi	r24, 0x38	; 56
    3528:	91 e0       	ldi	r25, 0x01	; 1
    352a:	9f 93       	push	r25
    352c:	8f 93       	push	r24
    352e:	1f 93       	push	r17
    3530:	0f 93       	push	r16
    3532:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <sscanf>
    3536:	0f 90       	pop	r0
    3538:	0f 90       	pop	r0
    353a:	0f 90       	pop	r0
    353c:	0f 90       	pop	r0
    353e:	0f 90       	pop	r0
    3540:	0f 90       	pop	r0
    3542:	89 2b       	or	r24, r25
    3544:	21 f1       	breq	.+72     	; 0x358e <debug+0x15c>
						if(strcmp(ds, "on") == 0){
    3546:	6b e3       	ldi	r22, 0x3B	; 59
    3548:	71 e0       	ldi	r23, 0x01	; 1
    354a:	c7 01       	movw	r24, r14
    354c:	0e 94 cc 2b 	call	0x5798	; 0x5798 <strcmp>
    3550:	89 2b       	or	r24, r25
    3552:	41 f4       	brne	.+16     	; 0x3564 <debug+0x132>
							debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Enabling debug output\r\n"));
    3554:	5f 92       	push	r5
    3556:	4f 92       	push	r4
    3558:	1f 92       	push	r1
    355a:	bf 92       	push	r11
    355c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
							kernel_setFlag(KFLAG_DEBUG, 1);
    3560:	61 e0       	ldi	r22, 0x01	; 1
    3562:	0e c0       	rjmp	.+28     	; 0x3580 <debug+0x14e>
						} 
						else if(strcmp(ds, "off") == 0){
    3564:	6e e3       	ldi	r22, 0x3E	; 62
    3566:	71 e0       	ldi	r23, 0x01	; 1
    3568:	c7 01       	movw	r24, r14
    356a:	0e 94 cc 2b 	call	0x5798	; 0x5798 <strcmp>
    356e:	89 2b       	or	r24, r25
    3570:	59 f4       	brne	.+22     	; 0x3588 <debug+0x156>
							debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Disabling debug output\r\n"));
    3572:	3f 92       	push	r3
    3574:	2f 92       	push	r2
    3576:	1f 92       	push	r1
    3578:	bf 92       	push	r11
    357a:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
							kernel_setFlag(KFLAG_DEBUG, 0);
    357e:	60 e0       	ldi	r22, 0x00	; 0
    3580:	8f e0       	ldi	r24, 0x0F	; 15
    3582:	0e 94 89 1e 	call	0x3d12	; 0x3d12 <kernel_setFlag>
    3586:	2c c0       	rjmp	.+88     	; 0x35e0 <debug+0x1ae>
						}
						else {
							debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Unknown argument value, should be either 'on' or 'off'\r\n"));
    3588:	80 e9       	ldi	r24, 0x90	; 144
    358a:	94 e0       	ldi	r25, 0x04	; 4
    358c:	02 c0       	rjmp	.+4      	; 0x3592 <debug+0x160>
						}
			
					}
					else debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Error: no argument value specified\r\n"));
    358e:	86 e6       	ldi	r24, 0x66	; 102
    3590:	94 e0       	ldi	r25, 0x04	; 4
    3592:	9f 93       	push	r25
    3594:	8f 93       	push	r24
    3596:	20 c0       	rjmp	.+64     	; 0x35d8 <debug+0x1a6>
				break;
				case 'v':
					if(strcmp(ds, "on") == 0){
    3598:	6b e3       	ldi	r22, 0x3B	; 59
    359a:	71 e0       	ldi	r23, 0x01	; 1
    359c:	c7 01       	movw	r24, r14
    359e:	0e 94 cc 2b 	call	0x5798	; 0x5798 <strcmp>
    35a2:	89 2b       	or	r24, r25
    35a4:	61 f4       	brne	.+24     	; 0x35be <debug+0x18c>
						debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Enabling verbose output\r\n"));
    35a6:	87 e4       	ldi	r24, 0x47	; 71
    35a8:	94 e0       	ldi	r25, 0x04	; 4
    35aa:	9f 93       	push	r25
    35ac:	8f 93       	push	r24
    35ae:	1f 92       	push	r1
    35b0:	bf 92       	push	r11
    35b2:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
    35b6:	0f 90       	pop	r0
    35b8:	0f 90       	pop	r0
    35ba:	0f 90       	pop	r0
    35bc:	0f 90       	pop	r0
						//kernel_setFlag(KFLAG_DEBUG, 1);
					}
					if(strcmp(ds, "off") == 0){
    35be:	6e e3       	ldi	r22, 0x3E	; 62
    35c0:	71 e0       	ldi	r23, 0x01	; 1
    35c2:	c7 01       	movw	r24, r14
    35c4:	0e 94 cc 2b 	call	0x5798	; 0x5798 <strcmp>
    35c8:	89 2b       	or	r24, r25
    35ca:	09 f0       	breq	.+2      	; 0x35ce <debug+0x19c>
    35cc:	77 cf       	rjmp	.-274    	; 0x34bc <debug+0x8a>
						debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Disabling debug output\r\n"));
    35ce:	7f 92       	push	r7
    35d0:	6f 92       	push	r6
    35d2:	02 c0       	rjmp	.+4      	; 0x35d8 <debug+0x1a6>
						//kernel_setFlag(KFLAG_DEBUG, 0);
					}
				break;
				default:
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Mishandled argument\r\n"));
    35d4:	9f 92       	push	r9
    35d6:	8f 92       	push	r8
    35d8:	1f 92       	push	r1
    35da:	bf 92       	push	r11
    35dc:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
				break;
    35e0:	0f 90       	pop	r0
    35e2:	0f 90       	pop	r0
    35e4:	0f 90       	pop	r0
    35e6:	0f 90       	pop	r0
    35e8:	69 cf       	rjmp	.-302    	; 0x34bc <debug+0x8a>
			}
		}
		//c_argc++;
	}
}
    35ea:	29 96       	adiw	r28, 0x09	; 9
    35ec:	0f b6       	in	r0, 0x3f	; 63
    35ee:	f8 94       	cli
    35f0:	de bf       	out	0x3e, r29	; 62
    35f2:	0f be       	out	0x3f, r0	; 63
    35f4:	cd bf       	out	0x3d, r28	; 61
    35f6:	df 91       	pop	r29
    35f8:	cf 91       	pop	r28
    35fa:	1f 91       	pop	r17
    35fc:	0f 91       	pop	r16
    35fe:	ff 90       	pop	r15
    3600:	ef 90       	pop	r14
    3602:	df 90       	pop	r13
    3604:	cf 90       	pop	r12
    3606:	bf 90       	pop	r11
    3608:	9f 90       	pop	r9
    360a:	8f 90       	pop	r8
    360c:	7f 90       	pop	r7
    360e:	6f 90       	pop	r6
    3610:	5f 90       	pop	r5
    3612:	4f 90       	pop	r4
    3614:	3f 90       	pop	r3
    3616:	2f 90       	pop	r2
    3618:	08 95       	ret

0000361a <config>:
	}
	return '\0';
}

static void config()
{
    361a:	2f 92       	push	r2
    361c:	3f 92       	push	r3
    361e:	4f 92       	push	r4
    3620:	5f 92       	push	r5
    3622:	6f 92       	push	r6
    3624:	7f 92       	push	r7
    3626:	8f 92       	push	r8
    3628:	9f 92       	push	r9
    362a:	af 92       	push	r10
    362c:	bf 92       	push	r11
    362e:	cf 92       	push	r12
    3630:	df 92       	push	r13
    3632:	ef 92       	push	r14
    3634:	ff 92       	push	r15
    3636:	0f 93       	push	r16
    3638:	1f 93       	push	r17
    363a:	cf 93       	push	r28
    363c:	df 93       	push	r29
    363e:	cd b7       	in	r28, 0x3d	; 61
    3640:	de b7       	in	r29, 0x3e	; 62
    3642:	28 97       	sbiw	r28, 0x08	; 8
    3644:	0f b6       	in	r0, 0x3f	; 63
    3646:	f8 94       	cli
    3648:	de bf       	out	0x3e, r29	; 62
    364a:	0f be       	out	0x3f, r0	; 63
    364c:	cd bf       	out	0x3d, r28	; 61
	char * token = (char *)recvBuffer;
	char arglist[] = "abcdef";
    364e:	87 e0       	ldi	r24, 0x07	; 7
    3650:	e8 e4       	ldi	r30, 0x48	; 72
    3652:	f1 e0       	ldi	r31, 0x01	; 1
    3654:	9e 01       	movw	r18, r28
    3656:	2f 5f       	subi	r18, 0xFF	; 255
    3658:	3f 4f       	sbci	r19, 0xFF	; 255
    365a:	79 01       	movw	r14, r18
    365c:	d9 01       	movw	r26, r18
    365e:	01 90       	ld	r0, Z+
    3660:	0d 92       	st	X+, r0
    3662:	8a 95       	dec	r24
    3664:	e1 f7       	brne	.-8      	; 0x365e <config+0x44>
	char activeArgument = '\0';
	uint8_t arglist_len = strlen(arglist);
    3666:	f9 01       	movw	r30, r18
    3668:	01 90       	ld	r0, Z+
    366a:	00 20       	and	r0, r0
    366c:	e9 f7       	brne	.-6      	; 0x3668 <config+0x4e>
    366e:	31 97       	sbiw	r30, 0x01	; 1
    3670:	2e 2e       	mov	r2, r30
    3672:	22 1a       	sub	r2, r18
	return '\0';
}

static void config()
{
	char * token = (char *)recvBuffer;
    3674:	0d ec       	ldi	r16, 0xCD	; 205
    3676:	13 e0       	ldi	r17, 0x03	; 3
					return;
				break;
				case 'a':
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: '-a' specified, changing variable A\r\n"));
					token = strtok(NULL, " ");
					if(sscanf(token, "%d", (int*)&a) == 1){
    3678:	6e 01       	movw	r12, r28
    367a:	38 e0       	ldi	r19, 0x08	; 8
    367c:	c3 0e       	add	r12, r19
    367e:	d1 1c       	adc	r13, r1
				case 'c':
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: '-c' specified, executing C subroutine\r\n"));
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: success\r\n"));
				break;
				default:
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Mishandled argument\r\n"));
    3680:	8c e9       	ldi	r24, 0x9C	; 156
    3682:	48 2e       	mov	r4, r24
    3684:	82 e0       	ldi	r24, 0x02	; 2
    3686:	58 2e       	mov	r5, r24
					}
					else debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Error: no argument value specified\r\n"));
					
				break;
				case 'b':
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: '-b' specified, executing B subroutine\r\n"));
    3688:	93 e0       	ldi	r25, 0x03	; 3
    368a:	69 2e       	mov	r6, r25
    368c:	93 e0       	ldi	r25, 0x03	; 3
    368e:	79 2e       	mov	r7, r25
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: success\r\n"));
				break;
				case 'c':
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: '-c' specified, executing C subroutine\r\n"));
    3690:	26 ec       	ldi	r18, 0xC6	; 198
    3692:	a2 2e       	mov	r10, r18
    3694:	22 e0       	ldi	r18, 0x02	; 2
    3696:	b2 2e       	mov	r11, r18
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: success\r\n"));
    3698:	37 eb       	ldi	r19, 0xB7	; 183
    369a:	83 2e       	mov	r8, r19
    369c:	32 e0       	ldi	r19, 0x02	; 2
    369e:	93 2e       	mov	r9, r19
	char * token = (char *)recvBuffer;
	char arglist[] = "abcdef";
	char activeArgument = '\0';
	uint8_t arglist_len = strlen(arglist);

	while(token != NULL){
    36a0:	01 2b       	or	r16, r17
    36a2:	09 f4       	brne	.+2      	; 0x36a6 <config+0x8c>
    36a4:	ab c0       	rjmp	.+342    	; 0x37fc <config+0x1e2>
		token = strtok(NULL, " ");
    36a6:	66 e3       	ldi	r22, 0x36	; 54
    36a8:	71 e0       	ldi	r23, 0x01	; 1
    36aa:	80 e0       	ldi	r24, 0x00	; 0
    36ac:	90 e0       	ldi	r25, 0x00	; 0
    36ae:	0e 94 c8 2b 	call	0x5790	; 0x5790 <strtok>
    36b2:	8c 01       	movw	r16, r24
		
		if(token[0] == '-'){
    36b4:	fc 01       	movw	r30, r24
    36b6:	80 81       	ld	r24, Z
    36b8:	8d 32       	cpi	r24, 0x2D	; 45
    36ba:	91 f7       	brne	.-28     	; 0x36a0 <config+0x86>
			activeArgument = kernel_parseCmdArgs(token, arglist, arglist_len);
    36bc:	42 2d       	mov	r20, r2
    36be:	b7 01       	movw	r22, r14
    36c0:	c8 01       	movw	r24, r16
    36c2:	0e 94 00 1a 	call	0x3400	; 0x3400 <kernel_parseCmdArgs>
			uint8_t a = 0;
    36c6:	18 86       	std	Y+8, r1	; 0x08
			switch(activeArgument){
    36c8:	81 36       	cpi	r24, 0x61	; 97
    36ca:	31 f1       	breq	.+76     	; 0x3718 <config+0xfe>
    36cc:	a0 f4       	brcc	.+40     	; 0x36f6 <config+0xdc>
    36ce:	81 11       	cpse	r24, r1
    36d0:	89 c0       	rjmp	.+274    	; 0x37e4 <config+0x1ca>
				case '\0':
					debug_logMessage(PGM_PUTS, L_NONE, PSTR("cli: Unknown argument: %s\r\n"), token);
    36d2:	1f 93       	push	r17
    36d4:	0f 93       	push	r16
    36d6:	82 ef       	ldi	r24, 0xF2	; 242
    36d8:	93 e0       	ldi	r25, 0x03	; 3
    36da:	9f 93       	push	r25
    36dc:	8f 93       	push	r24
    36de:	1f 92       	push	r1
    36e0:	82 e0       	ldi	r24, 0x02	; 2
    36e2:	8f 93       	push	r24
    36e4:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
    36e8:	0f 90       	pop	r0
    36ea:	0f 90       	pop	r0
    36ec:	0f 90       	pop	r0
    36ee:	0f 90       	pop	r0
    36f0:	0f 90       	pop	r0
    36f2:	0f 90       	pop	r0
    36f4:	83 c0       	rjmp	.+262    	; 0x37fc <config+0x1e2>
		token = strtok(NULL, " ");
		
		if(token[0] == '-'){
			activeArgument = kernel_parseCmdArgs(token, arglist, arglist_len);
			uint8_t a = 0;
			switch(activeArgument){
    36f6:	82 36       	cpi	r24, 0x62	; 98
    36f8:	09 f4       	brne	.+2      	; 0x36fc <config+0xe2>
    36fa:	5e c0       	rjmp	.+188    	; 0x37b8 <config+0x19e>
    36fc:	83 36       	cpi	r24, 0x63	; 99
    36fe:	09 f0       	breq	.+2      	; 0x3702 <config+0xe8>
    3700:	71 c0       	rjmp	.+226    	; 0x37e4 <config+0x1ca>
				case 'b':
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: '-b' specified, executing B subroutine\r\n"));
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: success\r\n"));
				break;
				case 'c':
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: '-c' specified, executing C subroutine\r\n"));
    3702:	bf 92       	push	r11
    3704:	af 92       	push	r10
    3706:	1f 92       	push	r1
    3708:	33 24       	eor	r3, r3
    370a:	33 94       	inc	r3
    370c:	3f 92       	push	r3
    370e:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: success\r\n"));
    3712:	9f 92       	push	r9
    3714:	8f 92       	push	r8
    3716:	5c c0       	rjmp	.+184    	; 0x37d0 <config+0x1b6>
				case '\0':
					debug_logMessage(PGM_PUTS, L_NONE, PSTR("cli: Unknown argument: %s\r\n"), token);
					return;
				break;
				case 'a':
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: '-a' specified, changing variable A\r\n"));
    3718:	27 ec       	ldi	r18, 0xC7	; 199
    371a:	33 e0       	ldi	r19, 0x03	; 3
    371c:	3f 93       	push	r19
    371e:	2f 93       	push	r18
    3720:	1f 92       	push	r1
    3722:	33 24       	eor	r3, r3
    3724:	33 94       	inc	r3
    3726:	3f 92       	push	r3
    3728:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
					token = strtok(NULL, " ");
    372c:	66 e3       	ldi	r22, 0x36	; 54
    372e:	71 e0       	ldi	r23, 0x01	; 1
    3730:	80 e0       	ldi	r24, 0x00	; 0
    3732:	90 e0       	ldi	r25, 0x00	; 0
    3734:	0e 94 c8 2b 	call	0x5790	; 0x5790 <strtok>
    3738:	8c 01       	movw	r16, r24
					if(sscanf(token, "%d", (int*)&a) == 1){
    373a:	df 92       	push	r13
    373c:	cf 92       	push	r12
    373e:	e5 e4       	ldi	r30, 0x45	; 69
    3740:	f1 e0       	ldi	r31, 0x01	; 1
    3742:	ff 93       	push	r31
    3744:	ef 93       	push	r30
    3746:	1f 93       	push	r17
    3748:	8f 93       	push	r24
    374a:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <sscanf>
    374e:	0f b6       	in	r0, 0x3f	; 63
    3750:	f8 94       	cli
    3752:	de bf       	out	0x3e, r29	; 62
    3754:	0f be       	out	0x3f, r0	; 63
    3756:	cd bf       	out	0x3d, r28	; 61
    3758:	01 97       	sbiw	r24, 0x01	; 1
    375a:	39 f5       	brne	.+78     	; 0x37aa <config+0x190>
						debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Received argument: %s\r\n"), token);
    375c:	1f 93       	push	r17
    375e:	0f 93       	push	r16
    3760:	2a ea       	ldi	r18, 0xAA	; 170
    3762:	33 e0       	ldi	r19, 0x03	; 3
    3764:	3f 93       	push	r19
    3766:	2f 93       	push	r18
    3768:	1f 92       	push	r1
    376a:	3f 92       	push	r3
    376c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
						debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Parsed argument: %d\r\n"), a);
    3770:	88 85       	ldd	r24, Y+8	; 0x08
    3772:	1f 92       	push	r1
    3774:	8f 93       	push	r24
    3776:	ef e8       	ldi	r30, 0x8F	; 143
    3778:	f3 e0       	ldi	r31, 0x03	; 3
    377a:	ff 93       	push	r31
    377c:	ef 93       	push	r30
    377e:	1f 92       	push	r1
    3780:	3f 92       	push	r3
    3782:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
						debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Variable A has been set to %d\r\n"), a);
    3786:	88 85       	ldd	r24, Y+8	; 0x08
    3788:	1f 92       	push	r1
    378a:	8f 93       	push	r24
    378c:	8a e6       	ldi	r24, 0x6A	; 106
    378e:	93 e0       	ldi	r25, 0x03	; 3
    3790:	9f 93       	push	r25
    3792:	8f 93       	push	r24
    3794:	1f 92       	push	r1
    3796:	3f 92       	push	r3
    3798:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
						debug_logMessage(PGM_ON, L_NONE, PSTR("cli: success\r\n"));
    379c:	2b e5       	ldi	r18, 0x5B	; 91
    379e:	33 e0       	ldi	r19, 0x03	; 3
    37a0:	3f 93       	push	r19
    37a2:	2f 93       	push	r18
    37a4:	1f 92       	push	r1
    37a6:	3f 92       	push	r3
    37a8:	15 c0       	rjmp	.+42     	; 0x37d4 <config+0x1ba>
					}
					else debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Error: no argument value specified\r\n"));
    37aa:	21 e3       	ldi	r18, 0x31	; 49
    37ac:	33 e0       	ldi	r19, 0x03	; 3
    37ae:	3f 93       	push	r19
    37b0:	2f 93       	push	r18
    37b2:	1f 92       	push	r1
    37b4:	3f 92       	push	r3
    37b6:	1b c0       	rjmp	.+54     	; 0x37ee <config+0x1d4>
					
				break;
				case 'b':
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: '-b' specified, executing B subroutine\r\n"));
    37b8:	7f 92       	push	r7
    37ba:	6f 92       	push	r6
    37bc:	1f 92       	push	r1
    37be:	33 24       	eor	r3, r3
    37c0:	33 94       	inc	r3
    37c2:	3f 92       	push	r3
    37c4:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: success\r\n"));
    37c8:	e4 ef       	ldi	r30, 0xF4	; 244
    37ca:	f2 e0       	ldi	r31, 0x02	; 2
    37cc:	ff 93       	push	r31
    37ce:	ef 93       	push	r30
				break;
				case 'c':
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: '-c' specified, executing C subroutine\r\n"));
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: success\r\n"));
    37d0:	1f 92       	push	r1
    37d2:	3f 92       	push	r3
    37d4:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
				break;
    37d8:	0f b6       	in	r0, 0x3f	; 63
    37da:	f8 94       	cli
    37dc:	de bf       	out	0x3e, r29	; 62
    37de:	0f be       	out	0x3f, r0	; 63
    37e0:	cd bf       	out	0x3d, r28	; 61
    37e2:	5e cf       	rjmp	.-324    	; 0x36a0 <config+0x86>
				default:
					debug_logMessage(PGM_ON, L_NONE, PSTR("cli: Mishandled argument\r\n"));
    37e4:	5f 92       	push	r5
    37e6:	4f 92       	push	r4
    37e8:	1f 92       	push	r1
    37ea:	81 e0       	ldi	r24, 0x01	; 1
    37ec:	8f 93       	push	r24
    37ee:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
				break;
    37f2:	0f 90       	pop	r0
    37f4:	0f 90       	pop	r0
    37f6:	0f 90       	pop	r0
    37f8:	0f 90       	pop	r0
    37fa:	52 cf       	rjmp	.-348    	; 0x36a0 <config+0x86>
			}
		}
	}
}
    37fc:	28 96       	adiw	r28, 0x08	; 8
    37fe:	0f b6       	in	r0, 0x3f	; 63
    3800:	f8 94       	cli
    3802:	de bf       	out	0x3e, r29	; 62
    3804:	0f be       	out	0x3f, r0	; 63
    3806:	cd bf       	out	0x3d, r28	; 61
    3808:	df 91       	pop	r29
    380a:	cf 91       	pop	r28
    380c:	1f 91       	pop	r17
    380e:	0f 91       	pop	r16
    3810:	ff 90       	pop	r15
    3812:	ef 90       	pop	r14
    3814:	df 90       	pop	r13
    3816:	cf 90       	pop	r12
    3818:	bf 90       	pop	r11
    381a:	af 90       	pop	r10
    381c:	9f 90       	pop	r9
    381e:	8f 90       	pop	r8
    3820:	7f 90       	pop	r7
    3822:	6f 90       	pop	r6
    3824:	5f 90       	pop	r5
    3826:	4f 90       	pop	r4
    3828:	3f 90       	pop	r3
    382a:	2f 90       	pop	r2
    382c:	08 95       	ret

0000382e <kernel_initCLI>:
	debug_logMessage(PGM_ON, L_NONE, PSTR("                         MMMMM?                              \r\n"));
	debug_logMessage(PGM_ON, L_NONE, PSTR("                         MMM.   \r\n"));
}

void kernel_initCLI()
{
    382e:	cf 93       	push	r28
	wdt_reset();
    3830:	a8 95       	wdr
    3832:	2f ef       	ldi	r18, 0xFF	; 255
    3834:	84 e3       	ldi	r24, 0x34	; 52
    3836:	9c e0       	ldi	r25, 0x0C	; 12
    3838:	21 50       	subi	r18, 0x01	; 1
    383a:	80 40       	sbci	r24, 0x00	; 0
    383c:	90 40       	sbci	r25, 0x00	; 0
    383e:	e1 f7       	brne	.-8      	; 0x3838 <kernel_initCLI+0xa>
    3840:	00 c0       	rjmp	.+0      	; 0x3842 <kernel_initCLI+0x14>
    3842:	00 00       	nop
	delay_ms(500);
	debug_logMessage(PGM_ON, L_NONE, PSTR("\x0C"));
    3844:	80 e4       	ldi	r24, 0x40	; 64
    3846:	99 e0       	ldi	r25, 0x09	; 9
    3848:	9f 93       	push	r25
    384a:	8f 93       	push	r24
    384c:	1f 92       	push	r1
    384e:	c1 e0       	ldi	r28, 0x01	; 1
    3850:	cf 93       	push	r28
    3852:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("Initializing shell...\r\n\r\n"));
    3856:	86 e2       	ldi	r24, 0x26	; 38
    3858:	99 e0       	ldi	r25, 0x09	; 9
    385a:	9f 93       	push	r25
    385c:	8f 93       	push	r24
    385e:	1f 92       	push	r1
    3860:	cf 93       	push	r28
    3862:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	kernel_registerCommand("config", config);	
    3866:	6d e0       	ldi	r22, 0x0D	; 13
    3868:	7b e1       	ldi	r23, 0x1B	; 27
    386a:	8f e4       	ldi	r24, 0x4F	; 79
    386c:	91 e0       	ldi	r25, 0x01	; 1
    386e:	0e 94 bc 19 	call	0x3378	; 0x3378 <kernel_registerCommand>
	kernel_registerCommand("debug", debug);
    3872:	69 e1       	ldi	r22, 0x19	; 25
    3874:	7a e1       	ldi	r23, 0x1A	; 26
    3876:	86 e5       	ldi	r24, 0x56	; 86
    3878:	91 e0       	ldi	r25, 0x01	; 1
    387a:	0e 94 bc 19 	call	0x3378	; 0x3378 <kernel_registerCommand>
	kernel_registerCommand("reboot", reboot);
    387e:	6c e7       	ldi	r22, 0x7C	; 124
    3880:	78 e1       	ldi	r23, 0x18	; 24
    3882:	8c e5       	ldi	r24, 0x5C	; 92
    3884:	91 e0       	ldi	r25, 0x01	; 1
    3886:	0e 94 bc 19 	call	0x3378	; 0x3378 <kernel_registerCommand>
	kernel_registerCommand("datetime", datetime);
    388a:	62 e9       	ldi	r22, 0x92	; 146
    388c:	75 e1       	ldi	r23, 0x15	; 21
    388e:	83 e6       	ldi	r24, 0x63	; 99
    3890:	91 e0       	ldi	r25, 0x01	; 1
    3892:	0e 94 bc 19 	call	0x3378	; 0x3378 <kernel_registerCommand>
	kernel_registerCommand("clear", clear);
    3896:	6e e6       	ldi	r22, 0x6E	; 110
    3898:	78 e1       	ldi	r23, 0x18	; 24
    389a:	8c e6       	ldi	r24, 0x6C	; 108
    389c:	91 e0       	ldi	r25, 0x01	; 1
    389e:	0e 94 bc 19 	call	0x3378	; 0x3378 <kernel_registerCommand>
	kernel_registerCommand("sysinfo", sysinfo);
    38a2:	63 ee       	ldi	r22, 0xE3	; 227
    38a4:	77 e1       	ldi	r23, 0x17	; 23
    38a6:	82 e7       	ldi	r24, 0x72	; 114
    38a8:	91 e0       	ldi	r25, 0x01	; 1
    38aa:	0e 94 bc 19 	call	0x3378	; 0x3378 <kernel_registerCommand>
	kernel_registerCommand("help", help);
    38ae:	67 ea       	ldi	r22, 0xA7	; 167
    38b0:	77 e1       	ldi	r23, 0x17	; 23
    38b2:	8a e7       	ldi	r24, 0x7A	; 122
    38b4:	91 e0       	ldi	r25, 0x01	; 1
    38b6:	0e 94 bc 19 	call	0x3378	; 0x3378 <kernel_registerCommand>
	kernel_registerCommand("dickbutt", dickbutt);
    38ba:	63 e9       	ldi	r22, 0x93	; 147
    38bc:	75 e1       	ldi	r23, 0x15	; 21
    38be:	8f e7       	ldi	r24, 0x7F	; 127
    38c0:	91 e0       	ldi	r25, 0x01	; 1
    38c2:	0e 94 bc 19 	call	0x3378	; 0x3378 <kernel_registerCommand>
	kernel_registerCommand("getAdxl", getadxl345);
    38c6:	62 ed       	ldi	r22, 0xD2	; 210
    38c8:	78 e1       	ldi	r23, 0x18	; 24
    38ca:	88 e8       	ldi	r24, 0x88	; 136
    38cc:	91 e0       	ldi	r25, 0x01	; 1
    38ce:	0e 94 bc 19 	call	0x3378	; 0x3378 <kernel_registerCommand>
	kernel_registerCommand("getBmp", getbmp280);
    38d2:	69 ea       	ldi	r22, 0xA9	; 169
    38d4:	78 e1       	ldi	r23, 0x18	; 24
    38d6:	80 e9       	ldi	r24, 0x90	; 144
    38d8:	91 e0       	ldi	r25, 0x01	; 1
    38da:	0e 94 bc 19 	call	0x3378	; 0x3378 <kernel_registerCommand>
	kernel_registerCommand("getDs18", getDS18);
    38de:	6a e8       	ldi	r22, 0x8A	; 138
    38e0:	78 e1       	ldi	r23, 0x18	; 24
    38e2:	87 e9       	ldi	r24, 0x97	; 151
    38e4:	91 e0       	ldi	r25, 0x01	; 1
    38e6:	0e 94 bc 19 	call	0x3378	; 0x3378 <kernel_registerCommand>
	//kernel_registerCommand("getDht", getdht11);
	sei();
    38ea:	78 94       	sei
	wdt_reset();
    38ec:	a8 95       	wdr
    38ee:	2f ef       	ldi	r18, 0xFF	; 255
    38f0:	84 e3       	ldi	r24, 0x34	; 52
    38f2:	9c e0       	ldi	r25, 0x0C	; 12
    38f4:	21 50       	subi	r18, 0x01	; 1
    38f6:	80 40       	sbci	r24, 0x00	; 0
    38f8:	90 40       	sbci	r25, 0x00	; 0
    38fa:	e1 f7       	brne	.-8      	; 0x38f4 <kernel_initCLI+0xc6>
    38fc:	00 c0       	rjmp	.+0      	; 0x38fe <kernel_initCLI+0xd0>
    38fe:	00 00       	nop
	delay_ms(500);
	debug_logMessage(PGM_ON, L_NONE, PSTR("\x0C"));
    3900:	84 e2       	ldi	r24, 0x24	; 36
    3902:	99 e0       	ldi	r25, 0x09	; 9
    3904:	9f 93       	push	r25
    3906:	8f 93       	push	r24
    3908:	1f 92       	push	r1
    390a:	cf 93       	push	r28
    390c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("+-----------------------------------------------------------------+\r\n"));
    3910:	8e ed       	ldi	r24, 0xDE	; 222
    3912:	98 e0       	ldi	r25, 0x08	; 8
    3914:	9f 93       	push	r25
    3916:	8f 93       	push	r24
    3918:	1f 92       	push	r1
    391a:	cf 93       	push	r28
    391c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("|                       CanSat shell v0.0.1                       |\r\n"));
    3920:	88 e9       	ldi	r24, 0x98	; 152
    3922:	98 e0       	ldi	r25, 0x08	; 8
    3924:	9f 93       	push	r25
    3926:	8f 93       	push	r24
    3928:	1f 92       	push	r1
    392a:	cf 93       	push	r28
    392c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("|  Run 'help' to see the list of available commands.              |\r\n"));
    3930:	82 e5       	ldi	r24, 0x52	; 82
    3932:	98 e0       	ldi	r25, 0x08	; 8
    3934:	9f 93       	push	r25
    3936:	8f 93       	push	r24
    3938:	1f 92       	push	r1
    393a:	cf 93       	push	r28
    393c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("|  Run 'config' to change the device's settings.                  |\r\n"));
    3940:	8c e0       	ldi	r24, 0x0C	; 12
    3942:	98 e0       	ldi	r25, 0x08	; 8
    3944:	9f 93       	push	r25
    3946:	8f 93       	push	r24
    3948:	1f 92       	push	r1
    394a:	cf 93       	push	r28
    394c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("+-----------------------------------------------------------------+\r\n"));
    3950:	86 ec       	ldi	r24, 0xC6	; 198
    3952:	97 e0       	ldi	r25, 0x07	; 7
    3954:	9f 93       	push	r25
    3956:	8f 93       	push	r24
    3958:	1f 92       	push	r1
    395a:	cf 93       	push	r28
    395c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	debug_logMessage(PGM_ON, L_NONE, PSTR("\r\nroot@cansat:< "));
    3960:	8d b7       	in	r24, 0x3d	; 61
    3962:	9e b7       	in	r25, 0x3e	; 62
    3964:	80 96       	adiw	r24, 0x20	; 32
    3966:	0f b6       	in	r0, 0x3f	; 63
    3968:	f8 94       	cli
    396a:	9e bf       	out	0x3e, r25	; 62
    396c:	0f be       	out	0x3f, r0	; 63
    396e:	8d bf       	out	0x3d, r24	; 61
    3970:	85 eb       	ldi	r24, 0xB5	; 181
    3972:	97 e0       	ldi	r25, 0x07	; 7
    3974:	9f 93       	push	r25
    3976:	8f 93       	push	r24
    3978:	1f 92       	push	r1
    397a:	cf 93       	push	r28
    397c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	hal_uart_enableInterruptsRX();
    3980:	0f 90       	pop	r0
    3982:	0f 90       	pop	r0
    3984:	0f 90       	pop	r0
    3986:	0f 90       	pop	r0
}
    3988:	cf 91       	pop	r28
	debug_logMessage(PGM_ON, L_NONE, PSTR("|                       CanSat shell v0.0.1                       |\r\n"));
	debug_logMessage(PGM_ON, L_NONE, PSTR("|  Run 'help' to see the list of available commands.              |\r\n"));
	debug_logMessage(PGM_ON, L_NONE, PSTR("|  Run 'config' to change the device's settings.                  |\r\n"));
	debug_logMessage(PGM_ON, L_NONE, PSTR("+-----------------------------------------------------------------+\r\n"));
	debug_logMessage(PGM_ON, L_NONE, PSTR("\r\nroot@cansat:< "));
	hal_uart_enableInterruptsRX();
    398a:	0c 94 45 1e 	jmp	0x3c8a	; 0x3c8a <hal_basicUart_enableInterruptsRX>

0000398e <__vector_18>:
}

ISR(USART0_RX_vect)
{
    398e:	1f 92       	push	r1
    3990:	0f 92       	push	r0
    3992:	0f b6       	in	r0, 0x3f	; 63
    3994:	0f 92       	push	r0
    3996:	11 24       	eor	r1, r1
    3998:	0b b6       	in	r0, 0x3b	; 59
    399a:	0f 92       	push	r0
    399c:	2f 93       	push	r18
    399e:	3f 93       	push	r19
    39a0:	4f 93       	push	r20
    39a2:	5f 93       	push	r21
    39a4:	6f 93       	push	r22
    39a6:	7f 93       	push	r23
    39a8:	8f 93       	push	r24
    39aa:	9f 93       	push	r25
    39ac:	af 93       	push	r26
    39ae:	bf 93       	push	r27
    39b0:	ef 93       	push	r30
    39b2:	ff 93       	push	r31
	char data = UDR0;
    39b4:	8c b1       	in	r24, 0x0c	; 12
	if(strlen((char*)&recvBuffer) < RX0_BUFFER_SIZE){
    39b6:	ed ec       	ldi	r30, 0xCD	; 205
    39b8:	f3 e0       	ldi	r31, 0x03	; 3
    39ba:	01 90       	ld	r0, Z+
    39bc:	00 20       	and	r0, r0
    39be:	e9 f7       	brne	.-6      	; 0x39ba <__vector_18+0x2c>
    39c0:	31 97       	sbiw	r30, 0x01	; 1
    39c2:	ed 5c       	subi	r30, 0xCD	; 205
    39c4:	f3 40       	sbci	r31, 0x03	; 3
    39c6:	e0 34       	cpi	r30, 0x40	; 64
    39c8:	f1 05       	cpc	r31, r1
    39ca:	b8 f4       	brcc	.+46     	; 0x39fa <__vector_18+0x6c>
		if(data == 0x7f || data == 0x08) {
    39cc:	8f 37       	cpi	r24, 0x7F	; 127
    39ce:	11 f0       	breq	.+4      	; 0x39d4 <__vector_18+0x46>
    39d0:	88 30       	cpi	r24, 0x08	; 8
    39d2:	41 f4       	brne	.+16     	; 0x39e4 <__vector_18+0x56>
			if(recvBuffer_i >= 1) recvBuffer_i--; //backspace character handling
    39d4:	90 91 cc 03 	lds	r25, 0x03CC	; 0x8003cc <recvBuffer_i>
    39d8:	99 23       	and	r25, r25
    39da:	79 f0       	breq	.+30     	; 0x39fa <__vector_18+0x6c>
    39dc:	90 91 cc 03 	lds	r25, 0x03CC	; 0x8003cc <recvBuffer_i>
    39e0:	91 50       	subi	r25, 0x01	; 1
    39e2:	09 c0       	rjmp	.+18     	; 0x39f6 <__vector_18+0x68>
		}
		else {
			recvBuffer[recvBuffer_i] = data;
    39e4:	e0 91 cc 03 	lds	r30, 0x03CC	; 0x8003cc <recvBuffer_i>
    39e8:	f0 e0       	ldi	r31, 0x00	; 0
    39ea:	e3 53       	subi	r30, 0x33	; 51
    39ec:	fc 4f       	sbci	r31, 0xFC	; 252
    39ee:	80 83       	st	Z, r24
			recvBuffer_i++;
    39f0:	90 91 cc 03 	lds	r25, 0x03CC	; 0x8003cc <recvBuffer_i>
    39f4:	9f 5f       	subi	r25, 0xFF	; 255
    39f6:	90 93 cc 03 	sts	0x03CC, r25	; 0x8003cc <recvBuffer_i>
		}
	}
	if(data == '\r' || data == '\n' || data == ';'){
    39fa:	8d 30       	cpi	r24, 0x0D	; 13
    39fc:	21 f0       	breq	.+8      	; 0x3a06 <__vector_18+0x78>
    39fe:	8a 30       	cpi	r24, 0x0A	; 10
    3a00:	11 f0       	breq	.+4      	; 0x3a06 <__vector_18+0x78>
    3a02:	8b 33       	cpi	r24, 0x3B	; 59
    3a04:	69 f4       	brne	.+26     	; 0x3a20 <__vector_18+0x92>
		recvBuffer[recvBuffer_i-1] = '\0';
    3a06:	e0 91 cc 03 	lds	r30, 0x03CC	; 0x8003cc <recvBuffer_i>
    3a0a:	f0 e0       	ldi	r31, 0x00	; 0
    3a0c:	e4 53       	subi	r30, 0x34	; 52
    3a0e:	fc 4f       	sbci	r31, 0xFC	; 252
    3a10:	10 82       	st	Z, r1
		hal_uart_disableInterruptsRX();
    3a12:	0e 94 47 1e 	call	0x3c8e	; 0x3c8e <hal_basicUart_disableInterruptsRX>
		//kernel_processCommand();
		kernel_addCall(kernel_processCommand, KPRIO_LOW);
    3a16:	62 e0       	ldi	r22, 0x02	; 2
    3a18:	80 e2       	ldi	r24, 0x20	; 32
    3a1a:	99 e1       	ldi	r25, 0x19	; 25
    3a1c:	0e 94 c8 1e 	call	0x3d90	; 0x3d90 <kernel_addCall>
	}
	//debug_logMessage(PGM_ON, L_INFO, PSTR("RX0_ISR\r\n"));
}
    3a20:	ff 91       	pop	r31
    3a22:	ef 91       	pop	r30
    3a24:	bf 91       	pop	r27
    3a26:	af 91       	pop	r26
    3a28:	9f 91       	pop	r25
    3a2a:	8f 91       	pop	r24
    3a2c:	7f 91       	pop	r23
    3a2e:	6f 91       	pop	r22
    3a30:	5f 91       	pop	r21
    3a32:	4f 91       	pop	r20
    3a34:	3f 91       	pop	r19
    3a36:	2f 91       	pop	r18
    3a38:	0f 90       	pop	r0
    3a3a:	0b be       	out	0x3b, r0	; 59
    3a3c:	0f 90       	pop	r0
    3a3e:	0f be       	out	0x3f, r0	; 63
    3a40:	0f 90       	pop	r0
    3a42:	1f 90       	pop	r1
    3a44:	18 95       	reti

00003a46 <debug_sendMessage>:
		while(pgm_read_byte(format) != 0x00)
			sd_putc(pgm_read_byte(format++));
	#else
		#warning Trying to use disabled debug module, this may spawn dragons
	#endif
}
    3a46:	df 92       	push	r13
    3a48:	ef 92       	push	r14
    3a4a:	ff 92       	push	r15
    3a4c:	0f 93       	push	r16
    3a4e:	1f 93       	push	r17
    3a50:	cf 93       	push	r28
    3a52:	df 93       	push	r29
    3a54:	ec 01       	movw	r28, r24
    3a56:	d6 2e       	mov	r13, r22
    3a58:	8a 01       	movw	r16, r20
    3a5a:	79 01       	movw	r14, r18
    3a5c:	66 23       	and	r22, r22
    3a5e:	41 f0       	breq	.+16     	; 0x3a70 <debug_sendMessage+0x2a>
    3a60:	80 e0       	ldi	r24, 0x00	; 0
    3a62:	0e 94 b2 1e 	call	0x3d64	; 0x3d64 <kernel_checkFlag>
    3a66:	81 11       	cpse	r24, r1
    3a68:	03 c0       	rjmp	.+6      	; 0x3a70 <debug_sendMessage+0x2a>
    3a6a:	ce 01       	movw	r24, r28
    3a6c:	0e 94 3c 1e 	call	0x3c78	; 0x3c78 <hal_basicUart_puts>
    3a70:	ed 2d       	mov	r30, r13
    3a72:	f0 e0       	ldi	r31, 0x00	; 0
    3a74:	ee 0f       	add	r30, r30
    3a76:	ff 1f       	adc	r31, r31
    3a78:	e5 50       	subi	r30, 0x05	; 5
    3a7a:	f8 4e       	sbci	r31, 0xE8	; 232
    3a7c:	65 91       	lpm	r22, Z+
    3a7e:	74 91       	lpm	r23, Z
    3a80:	ce 01       	movw	r24, r28
    3a82:	0e 94 b6 2b 	call	0x576c	; 0x576c <strcpy_P>
    3a86:	ce 01       	movw	r24, r28
    3a88:	0e 94 3c 1e 	call	0x3c78	; 0x3c78 <hal_basicUart_puts>
    3a8c:	a7 01       	movw	r20, r14
    3a8e:	b8 01       	movw	r22, r16
    3a90:	ce 01       	movw	r24, r28
    3a92:	0e 94 9b 2c 	call	0x5936	; 0x5936 <vsprintf>
    3a96:	ce 01       	movw	r24, r28
    3a98:	df 91       	pop	r29
    3a9a:	cf 91       	pop	r28
    3a9c:	1f 91       	pop	r17
    3a9e:	0f 91       	pop	r16
    3aa0:	ff 90       	pop	r15
    3aa2:	ef 90       	pop	r14
    3aa4:	df 90       	pop	r13
    3aa6:	0c 94 3c 1e 	jmp	0x3c78	; 0x3c78 <hal_basicUart_puts>

00003aaa <debug_sendMessage_p>:
    3aaa:	df 92       	push	r13
    3aac:	ef 92       	push	r14
    3aae:	ff 92       	push	r15
    3ab0:	0f 93       	push	r16
    3ab2:	1f 93       	push	r17
    3ab4:	cf 93       	push	r28
    3ab6:	df 93       	push	r29
    3ab8:	ec 01       	movw	r28, r24
    3aba:	d6 2e       	mov	r13, r22
    3abc:	8a 01       	movw	r16, r20
    3abe:	79 01       	movw	r14, r18
    3ac0:	66 23       	and	r22, r22
    3ac2:	41 f0       	breq	.+16     	; 0x3ad4 <debug_sendMessage_p+0x2a>
    3ac4:	80 e0       	ldi	r24, 0x00	; 0
    3ac6:	0e 94 b2 1e 	call	0x3d64	; 0x3d64 <kernel_checkFlag>
    3aca:	81 11       	cpse	r24, r1
    3acc:	03 c0       	rjmp	.+6      	; 0x3ad4 <debug_sendMessage_p+0x2a>
    3ace:	ce 01       	movw	r24, r28
    3ad0:	0e 94 3c 1e 	call	0x3c78	; 0x3c78 <hal_basicUart_puts>
    3ad4:	ed 2d       	mov	r30, r13
    3ad6:	f0 e0       	ldi	r31, 0x00	; 0
    3ad8:	ee 0f       	add	r30, r30
    3ada:	ff 1f       	adc	r31, r31
    3adc:	e5 50       	subi	r30, 0x05	; 5
    3ade:	f8 4e       	sbci	r31, 0xE8	; 232
    3ae0:	65 91       	lpm	r22, Z+
    3ae2:	74 91       	lpm	r23, Z
    3ae4:	ce 01       	movw	r24, r28
    3ae6:	0e 94 b6 2b 	call	0x576c	; 0x576c <strcpy_P>
    3aea:	ce 01       	movw	r24, r28
    3aec:	0e 94 3c 1e 	call	0x3c78	; 0x3c78 <hal_basicUart_puts>
    3af0:	a7 01       	movw	r20, r14
    3af2:	b8 01       	movw	r22, r16
    3af4:	ce 01       	movw	r24, r28
    3af6:	0e 94 c4 2c 	call	0x5988	; 0x5988 <vsprintf_P>
    3afa:	ce 01       	movw	r24, r28
    3afc:	df 91       	pop	r29
    3afe:	cf 91       	pop	r28
    3b00:	1f 91       	pop	r17
    3b02:	0f 91       	pop	r16
    3b04:	ff 90       	pop	r15
    3b06:	ef 90       	pop	r14
    3b08:	df 90       	pop	r13
    3b0a:	0c 94 3c 1e 	jmp	0x3c78	; 0x3c78 <hal_basicUart_puts>

00003b0e <debug_puts>:
    3b0e:	0f 93       	push	r16
    3b10:	1f 93       	push	r17
    3b12:	cf 93       	push	r28
    3b14:	df 93       	push	r29
    3b16:	eb 01       	movw	r28, r22
    3b18:	e8 2f       	mov	r30, r24
    3b1a:	f0 e0       	ldi	r31, 0x00	; 0
    3b1c:	ee 0f       	add	r30, r30
    3b1e:	ff 1f       	adc	r31, r31
    3b20:	e5 50       	subi	r30, 0x05	; 5
    3b22:	f8 4e       	sbci	r31, 0xE8	; 232
    3b24:	05 91       	lpm	r16, Z+
    3b26:	14 91       	lpm	r17, Z
    3b28:	c8 01       	movw	r24, r16
    3b2a:	f8 01       	movw	r30, r16
    3b2c:	24 91       	lpm	r18, Z
    3b2e:	22 23       	and	r18, r18
    3b30:	39 f0       	breq	.+14     	; 0x3b40 <debug_puts+0x32>
    3b32:	0f 5f       	subi	r16, 0xFF	; 255
    3b34:	1f 4f       	sbci	r17, 0xFF	; 255
    3b36:	fc 01       	movw	r30, r24
    3b38:	84 91       	lpm	r24, Z
    3b3a:	0e 94 38 1e 	call	0x3c70	; 0x3c70 <hal_basicUart_putc>
    3b3e:	f4 cf       	rjmp	.-24     	; 0x3b28 <debug_puts+0x1a>
    3b40:	ce 01       	movw	r24, r28
    3b42:	fe 01       	movw	r30, r28
    3b44:	24 91       	lpm	r18, Z
    3b46:	22 23       	and	r18, r18
    3b48:	31 f0       	breq	.+12     	; 0x3b56 <debug_puts+0x48>
    3b4a:	21 96       	adiw	r28, 0x01	; 1
    3b4c:	fc 01       	movw	r30, r24
    3b4e:	84 91       	lpm	r24, Z
    3b50:	0e 94 38 1e 	call	0x3c70	; 0x3c70 <hal_basicUart_putc>
    3b54:	f5 cf       	rjmp	.-22     	; 0x3b40 <debug_puts+0x32>
    3b56:	df 91       	pop	r29
    3b58:	cf 91       	pop	r28
    3b5a:	1f 91       	pop	r17
    3b5c:	0f 91       	pop	r16
    3b5e:	08 95       	ret

00003b60 <debug_logMessage>:

void debug_logMessage(uint8_t pgm, uint8_t level, const char * format, ...)
{
    3b60:	ef 92       	push	r14
    3b62:	ff 92       	push	r15
    3b64:	1f 93       	push	r17
    3b66:	cf 93       	push	r28
    3b68:	df 93       	push	r29
    3b6a:	cd b7       	in	r28, 0x3d	; 61
    3b6c:	de b7       	in	r29, 0x3e	; 62
    3b6e:	88 85       	ldd	r24, Y+8	; 0x08
    3b70:	19 85       	ldd	r17, Y+9	; 0x09
	#if KERNEL_DEBUG_MODULE == 1
		char *buffer;
		va_list args;
		
		va_start(args, format);
		switch(pgm){
    3b72:	81 30       	cpi	r24, 0x01	; 1
    3b74:	c9 f0       	breq	.+50     	; 0x3ba8 <debug_logMessage+0x48>
    3b76:	40 f0       	brcs	.+16     	; 0x3b88 <debug_logMessage+0x28>
    3b78:	82 30       	cpi	r24, 0x02	; 2
    3b7a:	41 f5       	brne	.+80     	; 0x3bcc <debug_logMessage+0x6c>
				#endif
				
				free(buffer);
			break;
			case 2:
				debug_puts(level, format);
    3b7c:	6a 85       	ldd	r22, Y+10	; 0x0a
    3b7e:	7b 85       	ldd	r23, Y+11	; 0x0b
    3b80:	81 2f       	mov	r24, r17
    3b82:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <debug_puts>
				#if KERNEL_SD_MODULE == 1
					debug_putsSD(level, format);
				#endif
			break;
    3b86:	22 c0       	rjmp	.+68     	; 0x3bcc <debug_logMessage+0x6c>
		va_list args;
		
		va_start(args, format);
		switch(pgm){
			case 0:
				buffer = malloc(128);
    3b88:	80 e8       	ldi	r24, 0x80	; 128
    3b8a:	90 e0       	ldi	r25, 0x00	; 0
    3b8c:	0e 94 bd 29 	call	0x537a	; 0x537a <malloc>
    3b90:	7c 01       	movw	r14, r24
				if(buffer == NULL) return;
    3b92:	00 97       	sbiw	r24, 0x00	; 0
    3b94:	d9 f0       	breq	.+54     	; 0x3bcc <debug_logMessage+0x6c>
				
				debug_sendMessage(buffer, level, format, args);
    3b96:	9e 01       	movw	r18, r28
    3b98:	24 5f       	subi	r18, 0xF4	; 244
    3b9a:	3f 4f       	sbci	r19, 0xFF	; 255
    3b9c:	4a 85       	ldd	r20, Y+10	; 0x0a
    3b9e:	5b 85       	ldd	r21, Y+11	; 0x0b
    3ba0:	61 2f       	mov	r22, r17
    3ba2:	0e 94 23 1d 	call	0x3a46	; 0x3a46 <debug_sendMessage>
    3ba6:	0f c0       	rjmp	.+30     	; 0x3bc6 <debug_logMessage+0x66>
				#endif
				
				free(buffer);
			break;
			case 1:
				buffer = malloc(128);
    3ba8:	80 e8       	ldi	r24, 0x80	; 128
    3baa:	90 e0       	ldi	r25, 0x00	; 0
    3bac:	0e 94 bd 29 	call	0x537a	; 0x537a <malloc>
    3bb0:	7c 01       	movw	r14, r24
				if(buffer == NULL) return;
    3bb2:	00 97       	sbiw	r24, 0x00	; 0
    3bb4:	59 f0       	breq	.+22     	; 0x3bcc <debug_logMessage+0x6c>
				
				debug_sendMessage_p(buffer, level, format, args);
    3bb6:	9e 01       	movw	r18, r28
    3bb8:	24 5f       	subi	r18, 0xF4	; 244
    3bba:	3f 4f       	sbci	r19, 0xFF	; 255
    3bbc:	4a 85       	ldd	r20, Y+10	; 0x0a
    3bbe:	5b 85       	ldd	r21, Y+11	; 0x0b
    3bc0:	61 2f       	mov	r22, r17
    3bc2:	0e 94 55 1d 	call	0x3aaa	; 0x3aaa <debug_sendMessage_p>
				#if KERNEL_SD_MODULE == 1
					debug_sendMessageSD_p(buffer, level, format, args);
				#endif
				
				free(buffer);
    3bc6:	c7 01       	movw	r24, r14
    3bc8:	0e 94 55 2a 	call	0x54aa	; 0x54aa <free>
		}
		va_end(args);
	#else
		#warning Trying to use disabled debug module, this may spawn dragons
	#endif
}
    3bcc:	df 91       	pop	r29
    3bce:	cf 91       	pop	r28
    3bd0:	1f 91       	pop	r17
    3bd2:	ff 90       	pop	r15
    3bd4:	ef 90       	pop	r14
    3bd6:	08 95       	ret

00003bd8 <hal_setupPins>:
{
	uint8_t sreg = hal_statusReg;
	hal_disableInterrupts();
	TIMSK &= ~(1 << OCIE0);
	hal_enableInterrupts();
	hal_statusReg = sreg;
    3bd8:	1b ba       	out	0x1b, r1	; 27
    3bda:	1a ba       	out	0x1a, r1	; 26
    3bdc:	18 ba       	out	0x18, r1	; 24
    3bde:	17 ba       	out	0x17, r1	; 23
    3be0:	15 ba       	out	0x15, r1	; 21
    3be2:	14 ba       	out	0x14, r1	; 20
    3be4:	12 ba       	out	0x12, r1	; 18
    3be6:	11 ba       	out	0x11, r1	; 17
    3be8:	13 b8       	out	0x03, r1	; 3
    3bea:	12 b8       	out	0x02, r1	; 2
    3bec:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    3bf0:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    3bf4:	e4 e6       	ldi	r30, 0x64	; 100
    3bf6:	f0 e0       	ldi	r31, 0x00	; 0
    3bf8:	80 81       	ld	r24, Z
    3bfa:	88 60       	ori	r24, 0x08	; 8
    3bfc:	80 83       	st	Z, r24
    3bfe:	bc 9a       	sbi	0x17, 4	; 23
    3c00:	9a b3       	in	r25, 0x1a	; 26
    3c02:	2a b3       	in	r18, 0x1a	; 26
    3c04:	89 2f       	mov	r24, r25
    3c06:	90 e0       	ldi	r25, 0x00	; 0
    3c08:	80 95       	com	r24
    3c0a:	90 95       	com	r25
    3c0c:	82 70       	andi	r24, 0x02	; 2
    3c0e:	99 27       	eor	r25, r25
    3c10:	82 27       	eor	r24, r18
    3c12:	8a bb       	out	0x1a, r24	; 26
    3c14:	9b b3       	in	r25, 0x1b	; 27
    3c16:	2b b3       	in	r18, 0x1b	; 27
    3c18:	89 2f       	mov	r24, r25
    3c1a:	90 e0       	ldi	r25, 0x00	; 0
    3c1c:	80 95       	com	r24
    3c1e:	90 95       	com	r25
    3c20:	82 70       	andi	r24, 0x02	; 2
    3c22:	99 27       	eor	r25, r25
    3c24:	82 27       	eor	r24, r18
    3c26:	8b bb       	out	0x1b, r24	; 27
    3c28:	a4 9a       	sbi	0x14, 4	; 20
    3c2a:	a5 9a       	sbi	0x14, 5	; 20
    3c2c:	a6 9a       	sbi	0x14, 6	; 20
    3c2e:	a7 9a       	sbi	0x14, 7	; 20
    3c30:	08 95       	ret

00003c32 <hal_setupTimer0>:
    3c32:	9f b7       	in	r25, 0x3f	; 63
    3c34:	f8 94       	cli
    3c36:	23 b7       	in	r18, 0x33	; 51
    3c38:	82 2b       	or	r24, r18
    3c3a:	83 bf       	out	0x33, r24	; 51
    3c3c:	12 be       	out	0x32, r1	; 50
    3c3e:	8d e7       	ldi	r24, 0x7D	; 125
    3c40:	81 bf       	out	0x31, r24	; 49
    3c42:	78 94       	sei
    3c44:	9f bf       	out	0x3f, r25	; 63
    3c46:	08 95       	ret

00003c48 <hal_startTimer0>:
    3c48:	9f b7       	in	r25, 0x3f	; 63
    3c4a:	f8 94       	cli
    3c4c:	87 b7       	in	r24, 0x37	; 55
    3c4e:	82 60       	ori	r24, 0x02	; 2
    3c50:	87 bf       	out	0x37, r24	; 55
    3c52:	78 94       	sei
    3c54:	9f bf       	out	0x3f, r25	; 63
    3c56:	08 95       	ret

00003c58 <hal_basicUart_init>:
}

int hal_basicUart_init(unsigned int ubrr)
{
	UBRR0H = 0;
    3c58:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 12;
    3c5c:	8c e0       	ldi	r24, 0x0C	; 12
    3c5e:	89 b9       	out	0x09, r24	; 9
	UCSR0B = (1<<RXEN)|(1<<TXEN)|(1<<RXCIE)|(0<<TXCIE)|(0<<UDRIE);
    3c60:	88 e9       	ldi	r24, 0x98	; 152
    3c62:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (0<<USBS)|(1<<UCSZ00)|(1<<UCSZ01)|(0<<UCSZ02)|(0<<UPM00)|(0<<UPM01)|(0<<UMSEL0);
    3c64:	86 e0       	ldi	r24, 0x06	; 6
    3c66:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	return 0;
}
    3c6a:	80 e0       	ldi	r24, 0x00	; 0
    3c6c:	90 e0       	ldi	r25, 0x00	; 0
    3c6e:	08 95       	ret

00003c70 <hal_basicUart_putc>:

void hal_basicUart_putc(char c)
{
	UDR0 = c;
    3c70:	8c b9       	out	0x0c, r24	; 12
	while(!(UCSR0A & (1<<UDRE)));
    3c72:	5d 9b       	sbis	0x0b, 5	; 11
    3c74:	fe cf       	rjmp	.-4      	; 0x3c72 <hal_basicUart_putc+0x2>
}
    3c76:	08 95       	ret

00003c78 <hal_basicUart_puts>:

void hal_basicUart_puts(char * msg)
{
    3c78:	fc 01       	movw	r30, r24
	int i = 0;
	while(msg[i] != '\0'){
    3c7a:	91 91       	ld	r25, Z+
    3c7c:	99 23       	and	r25, r25
    3c7e:	21 f0       	breq	.+8      	; 0x3c88 <hal_basicUart_puts+0x10>
		UDR0 = msg[i];
    3c80:	9c b9       	out	0x0c, r25	; 12
		while(!(UCSR0A & (1<<UDRE)));
    3c82:	5d 9b       	sbis	0x0b, 5	; 11
    3c84:	fe cf       	rjmp	.-4      	; 0x3c82 <hal_basicUart_puts+0xa>
    3c86:	f9 cf       	rjmp	.-14     	; 0x3c7a <hal_basicUart_puts+0x2>
		i++;
	}
}
    3c88:	08 95       	ret

00003c8a <hal_basicUart_enableInterruptsRX>:

void hal_basicUart_enableInterruptsRX()
{
	UCSR0B |= (1 << RXCIE);
    3c8a:	57 9a       	sbi	0x0a, 7	; 10
    3c8c:	08 95       	ret

00003c8e <hal_basicUart_disableInterruptsRX>:
}

void hal_basicUart_disableInterruptsRX()
{
	UCSR0B &= ~(1 << RXCIE);
    3c8e:	57 98       	cbi	0x0a, 7	; 10
    3c90:	08 95       	ret

00003c92 <init>:
#include "../kernel.h"
#include "../hal.h"

void init()
{
	kernel_setFlag(KFLAG_INIT, 1);
    3c92:	61 e0       	ldi	r22, 0x01	; 1
    3c94:	80 e0       	ldi	r24, 0x00	; 0
    3c96:	0e 94 89 1e 	call	0x3d12	; 0x3d12 <kernel_setFlag>
	hal_setupPins();
    3c9a:	0e 94 ec 1d 	call	0x3bd8	; 0x3bd8 <hal_setupPins>
	hal_uart_init(12);
    3c9e:	8c e0       	ldi	r24, 0x0C	; 12
    3ca0:	90 e0       	ldi	r25, 0x00	; 0
    3ca2:	0e 94 2c 1e 	call	0x3c58	; 0x3c58 <hal_basicUart_init>
	//sd_init();
	wdt_reset();
    3ca6:	a8 95       	wdr
	kernel_checkMCUCSR();
    3ca8:	0e 94 9c 21 	call	0x4338	; 0x4338 <kernel_checkMCUCSR>
	
	hal_enableInterrupts();
    3cac:	78 94       	sei
    3cae:	8f e1       	ldi	r24, 0x1F	; 31
    3cb0:	9e e4       	ldi	r25, 0x4E	; 78
    3cb2:	01 97       	sbiw	r24, 0x01	; 1
    3cb4:	f1 f7       	brne	.-4      	; 0x3cb2 <init+0x20>
    3cb6:	00 c0       	rjmp	.+0      	; 0x3cb8 <init+0x26>
    3cb8:	00 00       	nop
	delay_ms(10);
	
	if(hal_checkBit_m(JUMPER_PIN, JUMPER_IN)){
    3cba:	c8 9b       	sbis	0x19, 0	; 25
    3cbc:	0e c0       	rjmp	.+28     	; 0x3cda <init+0x48>
		kernel_setFlag(KFLAG_DEBUG, 1);
    3cbe:	61 e0       	ldi	r22, 0x01	; 1
    3cc0:	8f e0       	ldi	r24, 0x0F	; 15
    3cc2:	0e 94 89 1e 	call	0x3d12	; 0x3d12 <kernel_setFlag>
	return (*reg >> bit) & 1;
}

inline void hal_writePin(volatile uint8_t *port, uint8_t pin, uint8_t value){
	uint8_t nvalue = !!value;
	*port ^= (-1 * nvalue ^ *port) & (1 << pin);
    3cc6:	95 b3       	in	r25, 0x15	; 21
    3cc8:	25 b3       	in	r18, 0x15	; 21
    3cca:	89 2f       	mov	r24, r25
    3ccc:	90 e0       	ldi	r25, 0x00	; 0
    3cce:	80 95       	com	r24
    3cd0:	90 95       	com	r25
    3cd2:	80 78       	andi	r24, 0x80	; 128
    3cd4:	99 27       	eor	r25, r25
    3cd6:	82 27       	eor	r24, r18
    3cd8:	04 c0       	rjmp	.+8      	; 0x3ce2 <init+0x50>
    3cda:	85 b3       	in	r24, 0x15	; 21
    3cdc:	95 b3       	in	r25, 0x15	; 21
    3cde:	80 78       	andi	r24, 0x80	; 128
    3ce0:	89 27       	eor	r24, r25
    3ce2:	85 bb       	out	0x15, r24	; 21
    3ce4:	08 95       	ret

00003ce6 <idle>:

void kernel_stopTimer()
{
	if(kernel_checkFlag(KFLAG_TIMER_SET)){
		hal_stopSystemTimer();
		kernel_setFlag(KFLAG_TIMER_EN, 0);
    3ce6:	00 00       	nop
    3ce8:	08 95       	ret

00003cea <kernel_resetTaskByPosition>:
    3cea:	28 e0       	ldi	r18, 0x08	; 8
    3cec:	82 9f       	mul	r24, r18
    3cee:	c0 01       	movw	r24, r0
    3cf0:	11 24       	eor	r1, r1
    3cf2:	fc 01       	movw	r30, r24
    3cf4:	e3 5f       	subi	r30, 0xF3	; 243
    3cf6:	fb 4f       	sbci	r31, 0xFB	; 251
    3cf8:	83 e7       	ldi	r24, 0x73	; 115
    3cfa:	9e e1       	ldi	r25, 0x1E	; 30
    3cfc:	91 83       	std	Z+1, r25	; 0x01
    3cfe:	80 83       	st	Z, r24
    3d00:	13 82       	std	Z+3, r1	; 0x03
    3d02:	12 82       	std	Z+2, r1	; 0x02
    3d04:	15 82       	std	Z+5, r1	; 0x05
    3d06:	14 82       	std	Z+4, r1	; 0x04
    3d08:	82 e0       	ldi	r24, 0x02	; 2
    3d0a:	86 83       	std	Z+6, r24	; 0x06
    3d0c:	81 e0       	ldi	r24, 0x01	; 1
    3d0e:	87 83       	std	Z+7, r24	; 0x07
    3d10:	08 95       	ret

00003d12 <kernel_setFlag>:
    3d12:	af b7       	in	r26, 0x3f	; 63
    3d14:	f8 94       	cli
    3d16:	e0 91 5d 04 	lds	r30, 0x045D	; 0x80045d <kflags>
    3d1a:	f0 91 5e 04 	lds	r31, 0x045E	; 0x80045e <kflags+0x1>
    3d1e:	40 91 5d 04 	lds	r20, 0x045D	; 0x80045d <kflags>
    3d22:	50 91 5e 04 	lds	r21, 0x045E	; 0x80045e <kflags+0x1>
    3d26:	21 e0       	ldi	r18, 0x01	; 1
    3d28:	30 e0       	ldi	r19, 0x00	; 0
    3d2a:	61 11       	cpse	r22, r1
    3d2c:	02 c0       	rjmp	.+4      	; 0x3d32 <kernel_setFlag+0x20>
    3d2e:	20 e0       	ldi	r18, 0x00	; 0
    3d30:	30 e0       	ldi	r19, 0x00	; 0
    3d32:	31 95       	neg	r19
    3d34:	21 95       	neg	r18
    3d36:	31 09       	sbc	r19, r1
    3d38:	b9 01       	movw	r22, r18
    3d3a:	6e 27       	eor	r22, r30
    3d3c:	7f 27       	eor	r23, r31
    3d3e:	21 e0       	ldi	r18, 0x01	; 1
    3d40:	30 e0       	ldi	r19, 0x00	; 0
    3d42:	02 c0       	rjmp	.+4      	; 0x3d48 <kernel_setFlag+0x36>
    3d44:	22 0f       	add	r18, r18
    3d46:	33 1f       	adc	r19, r19
    3d48:	8a 95       	dec	r24
    3d4a:	e2 f7       	brpl	.-8      	; 0x3d44 <kernel_setFlag+0x32>
    3d4c:	cb 01       	movw	r24, r22
    3d4e:	82 23       	and	r24, r18
    3d50:	93 23       	and	r25, r19
    3d52:	84 27       	eor	r24, r20
    3d54:	95 27       	eor	r25, r21
    3d56:	90 93 5e 04 	sts	0x045E, r25	; 0x80045e <kflags+0x1>
    3d5a:	80 93 5d 04 	sts	0x045D, r24	; 0x80045d <kflags>
    3d5e:	78 94       	sei
    3d60:	af bf       	out	0x3f, r26	; 63
    3d62:	08 95       	ret

00003d64 <kernel_checkFlag>:
    3d64:	9f b7       	in	r25, 0x3f	; 63
    3d66:	f8 94       	cli
    3d68:	40 91 5d 04 	lds	r20, 0x045D	; 0x80045d <kflags>
    3d6c:	50 91 5e 04 	lds	r21, 0x045E	; 0x80045e <kflags+0x1>
    3d70:	78 94       	sei
    3d72:	9f bf       	out	0x3f, r25	; 63
    3d74:	21 e0       	ldi	r18, 0x01	; 1
    3d76:	30 e0       	ldi	r19, 0x00	; 0
    3d78:	02 c0       	rjmp	.+4      	; 0x3d7e <kernel_checkFlag+0x1a>
    3d7a:	22 0f       	add	r18, r18
    3d7c:	33 1f       	adc	r19, r19
    3d7e:	8a 95       	dec	r24
    3d80:	e2 f7       	brpl	.-8      	; 0x3d7a <kernel_checkFlag+0x16>
    3d82:	24 23       	and	r18, r20
    3d84:	35 23       	and	r19, r21
    3d86:	81 e0       	ldi	r24, 0x01	; 1
    3d88:	23 2b       	or	r18, r19
    3d8a:	09 f4       	brne	.+2      	; 0x3d8e <kernel_checkFlag+0x2a>
    3d8c:	80 e0       	ldi	r24, 0x00	; 0
    3d8e:	08 95       	ret

00003d90 <kernel_addCall>:
    3d90:	ac 01       	movw	r20, r24
    3d92:	2f b7       	in	r18, 0x3f	; 63
    3d94:	f8 94       	cli
    3d96:	63 30       	cpi	r22, 0x03	; 3
    3d98:	28 f5       	brcc	.+74     	; 0x3de4 <kernel_addCall+0x54>
    3d9a:	70 e0       	ldi	r23, 0x00	; 0
    3d9c:	fb 01       	movw	r30, r22
    3d9e:	e1 56       	subi	r30, 0x61	; 97
    3da0:	fe 4f       	sbci	r31, 0xFE	; 254
    3da2:	30 81       	ld	r19, Z
    3da4:	33 23       	and	r19, r19
    3da6:	f1 f0       	breq	.+60     	; 0x3de4 <kernel_addCall+0x54>
    3da8:	db 01       	movw	r26, r22
    3daa:	ae 5a       	subi	r26, 0xAE	; 174
    3dac:	bb 4f       	sbci	r27, 0xFB	; 251
    3dae:	9c 91       	ld	r25, X
    3db0:	93 17       	cp	r25, r19
    3db2:	b0 f4       	brcc	.+44     	; 0x3de0 <kernel_addCall+0x50>
    3db4:	66 0f       	add	r22, r22
    3db6:	77 1f       	adc	r23, r23
    3db8:	fb 01       	movw	r30, r22
    3dba:	ee 55       	subi	r30, 0x5E	; 94
    3dbc:	fe 4f       	sbci	r31, 0xFE	; 254
    3dbe:	01 90       	ld	r0, Z+
    3dc0:	f0 81       	ld	r31, Z
    3dc2:	e0 2d       	mov	r30, r0
    3dc4:	30 97       	sbiw	r30, 0x00	; 0
    3dc6:	71 f0       	breq	.+28     	; 0x3de4 <kernel_addCall+0x54>
    3dc8:	e9 0f       	add	r30, r25
    3dca:	f1 1d       	adc	r31, r1
    3dcc:	e9 0f       	add	r30, r25
    3dce:	f1 1d       	adc	r31, r1
    3dd0:	51 83       	std	Z+1, r21	; 0x01
    3dd2:	40 83       	st	Z, r20
    3dd4:	9f 5f       	subi	r25, 0xFF	; 255
    3dd6:	9c 93       	st	X, r25
    3dd8:	78 94       	sei
    3dda:	2f bf       	out	0x3f, r18	; 63
    3ddc:	80 e0       	ldi	r24, 0x00	; 0
    3dde:	08 95       	ret
    3de0:	78 94       	sei
    3de2:	2f bf       	out	0x3f, r18	; 63
    3de4:	81 e0       	ldi	r24, 0x01	; 1
    3de6:	08 95       	ret

00003de8 <kernel_addTask>:
    3de8:	0f 93       	push	r16
    3dea:	cf 93       	push	r28
    3dec:	df 93       	push	r29
    3dee:	9f b7       	in	r25, 0x3f	; 63
    3df0:	f8 94       	cli
    3df2:	41 15       	cp	r20, r1
    3df4:	51 05       	cpc	r21, r1
    3df6:	11 f4       	brne	.+4      	; 0x3dfc <kernel_addTask+0x14>
    3df8:	41 e0       	ldi	r20, 0x01	; 1
    3dfa:	50 e0       	ldi	r21, 0x00	; 0
    3dfc:	a0 e0       	ldi	r26, 0x00	; 0
    3dfe:	b0 e0       	ldi	r27, 0x00	; 0
    3e00:	e0 91 51 04 	lds	r30, 0x0451	; 0x800451 <kTaskIndex>
    3e04:	f0 e0       	ldi	r31, 0x00	; 0
    3e06:	ea 17       	cp	r30, r26
    3e08:	fb 07       	cpc	r31, r27
    3e0a:	ec f0       	brlt	.+58     	; 0x3e46 <kernel_addTask+0x5e>
    3e0c:	fd 01       	movw	r30, r26
    3e0e:	33 e0       	ldi	r19, 0x03	; 3
    3e10:	ee 0f       	add	r30, r30
    3e12:	ff 1f       	adc	r31, r31
    3e14:	3a 95       	dec	r19
    3e16:	e1 f7       	brne	.-8      	; 0x3e10 <kernel_addTask+0x28>
    3e18:	e3 5f       	subi	r30, 0xF3	; 243
    3e1a:	fb 4f       	sbci	r31, 0xFB	; 251
    3e1c:	c0 81       	ld	r28, Z
    3e1e:	d1 81       	ldd	r29, Z+1	; 0x01
    3e20:	c6 17       	cp	r28, r22
    3e22:	d7 07       	cpc	r29, r23
    3e24:	71 f4       	brne	.+28     	; 0x3e42 <kernel_addTask+0x5a>
    3e26:	41 50       	subi	r20, 0x01	; 1
    3e28:	51 09       	sbc	r21, r1
    3e2a:	55 83       	std	Z+5, r21	; 0x05
    3e2c:	44 83       	std	Z+4, r20	; 0x04
    3e2e:	26 83       	std	Z+6, r18	; 0x06
    3e30:	07 83       	std	Z+7, r16	; 0x07
    3e32:	81 30       	cpi	r24, 0x01	; 1
    3e34:	19 f4       	brne	.+6      	; 0x3e3c <kernel_addTask+0x54>
    3e36:	55 83       	std	Z+5, r21	; 0x05
    3e38:	44 83       	std	Z+4, r20	; 0x04
    3e3a:	4c c0       	rjmp	.+152    	; 0x3ed4 <kernel_addTask+0xec>
    3e3c:	15 82       	std	Z+5, r1	; 0x05
    3e3e:	14 82       	std	Z+4, r1	; 0x04
    3e40:	49 c0       	rjmp	.+146    	; 0x3ed4 <kernel_addTask+0xec>
    3e42:	11 96       	adiw	r26, 0x01	; 1
    3e44:	dd cf       	rjmp	.-70     	; 0x3e00 <kernel_addTask+0x18>
    3e46:	30 91 51 04 	lds	r19, 0x0451	; 0x800451 <kTaskIndex>
    3e4a:	34 30       	cpi	r19, 0x04	; 4
    3e4c:	08 f0       	brcs	.+2      	; 0x3e50 <kernel_addTask+0x68>
    3e4e:	46 c0       	rjmp	.+140    	; 0x3edc <kernel_addTask+0xf4>
    3e50:	e0 91 51 04 	lds	r30, 0x0451	; 0x800451 <kTaskIndex>
    3e54:	38 e0       	ldi	r19, 0x08	; 8
    3e56:	e3 9f       	mul	r30, r19
    3e58:	f0 01       	movw	r30, r0
    3e5a:	11 24       	eor	r1, r1
    3e5c:	e3 5f       	subi	r30, 0xF3	; 243
    3e5e:	fb 4f       	sbci	r31, 0xFB	; 251
    3e60:	71 83       	std	Z+1, r23	; 0x01
    3e62:	60 83       	st	Z, r22
    3e64:	e0 91 51 04 	lds	r30, 0x0451	; 0x800451 <kTaskIndex>
    3e68:	41 50       	subi	r20, 0x01	; 1
    3e6a:	51 09       	sbc	r21, r1
    3e6c:	38 e0       	ldi	r19, 0x08	; 8
    3e6e:	e3 9f       	mul	r30, r19
    3e70:	f0 01       	movw	r30, r0
    3e72:	11 24       	eor	r1, r1
    3e74:	e3 5f       	subi	r30, 0xF3	; 243
    3e76:	fb 4f       	sbci	r31, 0xFB	; 251
    3e78:	53 83       	std	Z+3, r21	; 0x03
    3e7a:	42 83       	std	Z+2, r20	; 0x02
    3e7c:	e0 91 51 04 	lds	r30, 0x0451	; 0x800451 <kTaskIndex>
    3e80:	38 e0       	ldi	r19, 0x08	; 8
    3e82:	e3 9f       	mul	r30, r19
    3e84:	f0 01       	movw	r30, r0
    3e86:	11 24       	eor	r1, r1
    3e88:	e3 5f       	subi	r30, 0xF3	; 243
    3e8a:	fb 4f       	sbci	r31, 0xFB	; 251
    3e8c:	26 83       	std	Z+6, r18	; 0x06
    3e8e:	e0 91 51 04 	lds	r30, 0x0451	; 0x800451 <kTaskIndex>
    3e92:	28 e0       	ldi	r18, 0x08	; 8
    3e94:	e2 9f       	mul	r30, r18
    3e96:	f0 01       	movw	r30, r0
    3e98:	11 24       	eor	r1, r1
    3e9a:	e3 5f       	subi	r30, 0xF3	; 243
    3e9c:	fb 4f       	sbci	r31, 0xFB	; 251
    3e9e:	07 83       	std	Z+7, r16	; 0x07
    3ea0:	e0 91 51 04 	lds	r30, 0x0451	; 0x800451 <kTaskIndex>
    3ea4:	81 30       	cpi	r24, 0x01	; 1
    3ea6:	49 f4       	brne	.+18     	; 0x3eba <kernel_addTask+0xd2>
    3ea8:	38 e0       	ldi	r19, 0x08	; 8
    3eaa:	e3 9f       	mul	r30, r19
    3eac:	f0 01       	movw	r30, r0
    3eae:	11 24       	eor	r1, r1
    3eb0:	e3 5f       	subi	r30, 0xF3	; 243
    3eb2:	fb 4f       	sbci	r31, 0xFB	; 251
    3eb4:	55 83       	std	Z+5, r21	; 0x05
    3eb6:	44 83       	std	Z+4, r20	; 0x04
    3eb8:	08 c0       	rjmp	.+16     	; 0x3eca <kernel_addTask+0xe2>
    3eba:	88 e0       	ldi	r24, 0x08	; 8
    3ebc:	e8 9f       	mul	r30, r24
    3ebe:	f0 01       	movw	r30, r0
    3ec0:	11 24       	eor	r1, r1
    3ec2:	e3 5f       	subi	r30, 0xF3	; 243
    3ec4:	fb 4f       	sbci	r31, 0xFB	; 251
    3ec6:	15 82       	std	Z+5, r1	; 0x05
    3ec8:	14 82       	std	Z+4, r1	; 0x04
    3eca:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <kTaskIndex>
    3ece:	8f 5f       	subi	r24, 0xFF	; 255
    3ed0:	80 93 51 04 	sts	0x0451, r24	; 0x800451 <kTaskIndex>
    3ed4:	78 94       	sei
    3ed6:	9f bf       	out	0x3f, r25	; 63
    3ed8:	80 e0       	ldi	r24, 0x00	; 0
    3eda:	03 c0       	rjmp	.+6      	; 0x3ee2 <kernel_addTask+0xfa>
    3edc:	78 94       	sei
    3ede:	9f bf       	out	0x3f, r25	; 63
    3ee0:	81 e0       	ldi	r24, 0x01	; 1
    3ee2:	df 91       	pop	r29
    3ee4:	cf 91       	pop	r28
    3ee6:	0f 91       	pop	r16
    3ee8:	08 95       	ret

00003eea <kernel_removeCall>:
    3eea:	0f 93       	push	r16
    3eec:	1f 93       	push	r17
    3eee:	cf 93       	push	r28
    3ef0:	df 93       	push	r29
    3ef2:	4f b7       	in	r20, 0x3f	; 63
    3ef4:	f8 94       	cli
    3ef6:	83 30       	cpi	r24, 0x03	; 3
    3ef8:	08 f0       	brcs	.+2      	; 0x3efc <kernel_removeCall+0x12>
    3efa:	40 c0       	rjmp	.+128    	; 0x3f7c <kernel_removeCall+0x92>
    3efc:	28 2f       	mov	r18, r24
    3efe:	30 e0       	ldi	r19, 0x00	; 0
    3f00:	f9 01       	movw	r30, r18
    3f02:	e1 56       	subi	r30, 0x61	; 97
    3f04:	fe 4f       	sbci	r31, 0xFE	; 254
    3f06:	90 81       	ld	r25, Z
    3f08:	99 23       	and	r25, r25
    3f0a:	c1 f1       	breq	.+112    	; 0x3f7c <kernel_removeCall+0x92>
    3f0c:	f9 01       	movw	r30, r18
    3f0e:	ee 0f       	add	r30, r30
    3f10:	ff 1f       	adc	r31, r31
    3f12:	ee 55       	subi	r30, 0x5E	; 94
    3f14:	fe 4f       	sbci	r31, 0xFE	; 254
    3f16:	01 90       	ld	r0, Z+
    3f18:	f0 81       	ld	r31, Z
    3f1a:	e0 2d       	mov	r30, r0
    3f1c:	30 97       	sbiw	r30, 0x00	; 0
    3f1e:	71 f1       	breq	.+92     	; 0x3f7c <kernel_removeCall+0x92>
    3f20:	d9 01       	movw	r26, r18
    3f22:	ae 5a       	subi	r26, 0xAE	; 174
    3f24:	bb 4f       	sbci	r27, 0xFB	; 251
    3f26:	8c 91       	ld	r24, X
    3f28:	88 23       	and	r24, r24
    3f2a:	01 f1       	breq	.+64     	; 0x3f6c <kernel_removeCall+0x82>
    3f2c:	81 50       	subi	r24, 0x01	; 1
    3f2e:	8c 93       	st	X, r24
    3f30:	df 01       	movw	r26, r30
    3f32:	20 e0       	ldi	r18, 0x00	; 0
    3f34:	30 e0       	ldi	r19, 0x00	; 0
    3f36:	89 2f       	mov	r24, r25
    3f38:	90 e0       	ldi	r25, 0x00	; 0
    3f3a:	bc 01       	movw	r22, r24
    3f3c:	61 50       	subi	r22, 0x01	; 1
    3f3e:	71 09       	sbc	r23, r1
    3f40:	ed 01       	movw	r28, r26
    3f42:	22 96       	adiw	r28, 0x02	; 2
    3f44:	26 17       	cp	r18, r22
    3f46:	37 07       	cpc	r19, r23
    3f48:	5c f4       	brge	.+22     	; 0x3f60 <kernel_removeCall+0x76>
    3f4a:	12 96       	adiw	r26, 0x02	; 2
    3f4c:	0d 91       	ld	r16, X+
    3f4e:	1c 91       	ld	r17, X
    3f50:	13 97       	sbiw	r26, 0x03	; 3
    3f52:	11 96       	adiw	r26, 0x01	; 1
    3f54:	1c 93       	st	X, r17
    3f56:	0e 93       	st	-X, r16
    3f58:	2f 5f       	subi	r18, 0xFF	; 255
    3f5a:	3f 4f       	sbci	r19, 0xFF	; 255
    3f5c:	de 01       	movw	r26, r28
    3f5e:	f0 cf       	rjmp	.-32     	; 0x3f40 <kernel_removeCall+0x56>
    3f60:	81 50       	subi	r24, 0x01	; 1
    3f62:	90 48       	sbci	r25, 0x80	; 128
    3f64:	88 0f       	add	r24, r24
    3f66:	99 1f       	adc	r25, r25
    3f68:	e8 0f       	add	r30, r24
    3f6a:	f9 1f       	adc	r31, r25
    3f6c:	83 e7       	ldi	r24, 0x73	; 115
    3f6e:	9e e1       	ldi	r25, 0x1E	; 30
    3f70:	91 83       	std	Z+1, r25	; 0x01
    3f72:	80 83       	st	Z, r24
    3f74:	78 94       	sei
    3f76:	4f bf       	out	0x3f, r20	; 63
    3f78:	80 e0       	ldi	r24, 0x00	; 0
    3f7a:	01 c0       	rjmp	.+2      	; 0x3f7e <kernel_removeCall+0x94>
    3f7c:	81 e0       	ldi	r24, 0x01	; 1
    3f7e:	df 91       	pop	r29
    3f80:	cf 91       	pop	r28
    3f82:	1f 91       	pop	r17
    3f84:	0f 91       	pop	r16
    3f86:	08 95       	ret

00003f88 <kernel_removeTask>:
    3f88:	cf 93       	push	r28
    3f8a:	df 93       	push	r29
    3f8c:	c8 2f       	mov	r28, r24
    3f8e:	df b7       	in	r29, 0x3f	; 63
    3f90:	f8 94       	cli
    3f92:	80 91 51 04 	lds	r24, 0x0451	; 0x800451 <kTaskIndex>
    3f96:	81 50       	subi	r24, 0x01	; 1
    3f98:	80 93 51 04 	sts	0x0451, r24	; 0x800451 <kTaskIndex>
    3f9c:	8c 2f       	mov	r24, r28
    3f9e:	0e 94 75 1e 	call	0x3cea	; 0x3cea <kernel_resetTaskByPosition>
    3fa2:	ac 2f       	mov	r26, r28
    3fa4:	b0 e0       	ldi	r27, 0x00	; 0
    3fa6:	a3 30       	cpi	r26, 0x03	; 3
    3fa8:	b1 05       	cpc	r27, r1
    3faa:	c4 f4       	brge	.+48     	; 0x3fdc <kernel_removeTask+0x54>
    3fac:	cd 01       	movw	r24, r26
    3fae:	01 96       	adiw	r24, 0x01	; 1
    3fb0:	23 e0       	ldi	r18, 0x03	; 3
    3fb2:	aa 0f       	add	r26, r26
    3fb4:	bb 1f       	adc	r27, r27
    3fb6:	2a 95       	dec	r18
    3fb8:	e1 f7       	brne	.-8      	; 0x3fb2 <kernel_removeTask+0x2a>
    3fba:	a3 5f       	subi	r26, 0xF3	; 243
    3fbc:	bb 4f       	sbci	r27, 0xFB	; 251
    3fbe:	fc 01       	movw	r30, r24
    3fc0:	33 e0       	ldi	r19, 0x03	; 3
    3fc2:	ee 0f       	add	r30, r30
    3fc4:	ff 1f       	adc	r31, r31
    3fc6:	3a 95       	dec	r19
    3fc8:	e1 f7       	brne	.-8      	; 0x3fc2 <kernel_removeTask+0x3a>
    3fca:	e3 5f       	subi	r30, 0xF3	; 243
    3fcc:	fb 4f       	sbci	r31, 0xFB	; 251
    3fce:	28 e0       	ldi	r18, 0x08	; 8
    3fd0:	01 90       	ld	r0, Z+
    3fd2:	0d 92       	st	X+, r0
    3fd4:	2a 95       	dec	r18
    3fd6:	e1 f7       	brne	.-8      	; 0x3fd0 <kernel_removeTask+0x48>
    3fd8:	dc 01       	movw	r26, r24
    3fda:	e5 cf       	rjmp	.-54     	; 0x3fa6 <kernel_removeTask+0x1e>
    3fdc:	83 e0       	ldi	r24, 0x03	; 3
    3fde:	0e 94 75 1e 	call	0x3cea	; 0x3cea <kernel_resetTaskByPosition>
    3fe2:	78 94       	sei
    3fe4:	df bf       	out	0x3f, r29	; 63
    3fe6:	80 e0       	ldi	r24, 0x00	; 0
    3fe8:	df 91       	pop	r29
    3fea:	cf 91       	pop	r28
    3fec:	08 95       	ret

00003fee <kernel_clearCallQueue>:
    3fee:	cf 93       	push	r28
    3ff0:	c8 2f       	mov	r28, r24
    3ff2:	8f e0       	ldi	r24, 0x0F	; 15
    3ff4:	0e 94 b2 1e 	call	0x3d64	; 0x3d64 <kernel_checkFlag>
    3ff8:	6f b7       	in	r22, 0x3f	; 63
    3ffa:	f8 94       	cli
    3ffc:	c3 30       	cpi	r28, 0x03	; 3
    3ffe:	30 f5       	brcc	.+76     	; 0x404c <kernel_clearCallQueue+0x5e>
    4000:	8c 2f       	mov	r24, r28
    4002:	90 e0       	ldi	r25, 0x00	; 0
    4004:	fc 01       	movw	r30, r24
    4006:	e1 56       	subi	r30, 0x61	; 97
    4008:	fe 4f       	sbci	r31, 0xFE	; 254
    400a:	20 81       	ld	r18, Z
    400c:	22 23       	and	r18, r18
    400e:	f1 f0       	breq	.+60     	; 0x404c <kernel_clearCallQueue+0x5e>
    4010:	fc 01       	movw	r30, r24
    4012:	ee 0f       	add	r30, r30
    4014:	ff 1f       	adc	r31, r31
    4016:	ee 55       	subi	r30, 0x5E	; 94
    4018:	fe 4f       	sbci	r31, 0xFE	; 254
    401a:	01 90       	ld	r0, Z+
    401c:	f0 81       	ld	r31, Z
    401e:	e0 2d       	mov	r30, r0
    4020:	30 97       	sbiw	r30, 0x00	; 0
    4022:	a1 f0       	breq	.+40     	; 0x404c <kernel_clearCallQueue+0x5e>
    4024:	40 e0       	ldi	r20, 0x00	; 0
    4026:	50 e0       	ldi	r21, 0x00	; 0
    4028:	30 e0       	ldi	r19, 0x00	; 0
    402a:	a3 e7       	ldi	r26, 0x73	; 115
    402c:	be e1       	ldi	r27, 0x1E	; 30
    402e:	42 17       	cp	r20, r18
    4030:	53 07       	cpc	r21, r19
    4032:	34 f4       	brge	.+12     	; 0x4040 <kernel_clearCallQueue+0x52>
    4034:	b1 83       	std	Z+1, r27	; 0x01
    4036:	a0 83       	st	Z, r26
    4038:	32 96       	adiw	r30, 0x02	; 2
    403a:	4f 5f       	subi	r20, 0xFF	; 255
    403c:	5f 4f       	sbci	r21, 0xFF	; 255
    403e:	f7 cf       	rjmp	.-18     	; 0x402e <kernel_clearCallQueue+0x40>
    4040:	fc 01       	movw	r30, r24
    4042:	ee 5a       	subi	r30, 0xAE	; 174
    4044:	fb 4f       	sbci	r31, 0xFB	; 251
    4046:	10 82       	st	Z, r1
    4048:	78 94       	sei
    404a:	6f bf       	out	0x3f, r22	; 63
    404c:	cf 91       	pop	r28
    404e:	08 95       	ret

00004050 <kernel_startTimer>:
    4050:	81 e0       	ldi	r24, 0x01	; 1
    4052:	0e 94 b2 1e 	call	0x3d64	; 0x3d64 <kernel_checkFlag>
    4056:	88 23       	and	r24, r24
    4058:	31 f0       	breq	.+12     	; 0x4066 <kernel_startTimer+0x16>
    405a:	0e 94 24 1e 	call	0x3c48	; 0x3c48 <hal_startTimer0>
    405e:	61 e0       	ldi	r22, 0x01	; 1
    4060:	82 e0       	ldi	r24, 0x02	; 2
    4062:	0c 94 89 1e 	jmp	0x3d12	; 0x3d12 <kernel_setFlag>
    4066:	08 95       	ret

00004068 <kernel_setupTimer>:
	}
}

void kernel_setupTimer()
{
	hal_setupSystemTimer();
    4068:	83 e0       	ldi	r24, 0x03	; 3
    406a:	0e 94 19 1e 	call	0x3c32	; 0x3c32 <hal_setupTimer0>
	#if LOGGING == 1
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("                         [DONE]\r\n"));
    406e:	89 e5       	ldi	r24, 0x59	; 89
    4070:	9c e1       	ldi	r25, 0x1C	; 28
    4072:	9f 93       	push	r25
    4074:	8f 93       	push	r24
    4076:	1f 92       	push	r1
    4078:	82 e0       	ldi	r24, 0x02	; 2
    407a:	8f 93       	push	r24
    407c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	#endif
	kernel_setFlag(KFLAG_TIMER_SET, 1);
    4080:	0f 90       	pop	r0
    4082:	0f 90       	pop	r0
    4084:	0f 90       	pop	r0
    4086:	0f 90       	pop	r0
    4088:	61 e0       	ldi	r22, 0x01	; 1
    408a:	81 e0       	ldi	r24, 0x01	; 1
    408c:	0c 94 89 1e 	jmp	0x3d12	; 0x3d12 <kernel_setFlag>

00004090 <kernelInit>:
}

uint8_t kernelInit()
{
	init();
    4090:	0e 94 49 1e 	call	0x3c92	; 0x3c92 <init>
	kernel_setFlag(KFLAG_INIT, 1);
    4094:	61 e0       	ldi	r22, 0x01	; 1
    4096:	80 e0       	ldi	r24, 0x00	; 0
    4098:	0e 94 89 1e 	call	0x3d12	; 0x3d12 <kernel_setFlag>
	kernel_setFlag(KFLAG_TIMER_SET, 0);
    409c:	60 e0       	ldi	r22, 0x00	; 0
    409e:	81 e0       	ldi	r24, 0x01	; 1
    40a0:	0e 94 89 1e 	call	0x3d12	; 0x3d12 <kernel_setFlag>
	kernel_setFlag(KFLAG_TIMER_EN, 0);
    40a4:	60 e0       	ldi	r22, 0x00	; 0
    40a6:	82 e0       	ldi	r24, 0x02	; 2
    40a8:	0e 94 89 1e 	call	0x3d12	; 0x3d12 <kernel_setFlag>
	#if LOGGING == 1
		debug_logMessage(PGM_ON, L_NONE, (char *)PSTR("\r\n[INIT]kernel: Starting up CanSat kernel v%s\r\n\r\n"), KERNEL_VER);
    40ac:	87 e2       	ldi	r24, 0x27	; 39
    40ae:	91 e0       	ldi	r25, 0x01	; 1
    40b0:	9f 93       	push	r25
    40b2:	8f 93       	push	r24
    40b4:	87 e2       	ldi	r24, 0x27	; 39
    40b6:	9c e1       	ldi	r25, 0x1C	; 28
    40b8:	9f 93       	push	r25
    40ba:	8f 93       	push	r24
    40bc:	1f 92       	push	r1
    40be:	d1 e0       	ldi	r29, 0x01	; 1
    40c0:	df 93       	push	r29
    40c2:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	#endif
	
	wdt_reset();
    40c6:	a8 95       	wdr
	#if LOGGING == 1
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("[INIT]kernel: Setting up PRIORITY_HIGH queue"));
    40c8:	8a ef       	ldi	r24, 0xFA	; 250
    40ca:	9b e1       	ldi	r25, 0x1B	; 27
    40cc:	9f 93       	push	r25
    40ce:	8f 93       	push	r24
    40d0:	1f 92       	push	r1
    40d2:	c2 e0       	ldi	r28, 0x02	; 2
    40d4:	cf 93       	push	r28
    40d6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	#endif
	kernel_clearCallQueue(0);
    40da:	80 e0       	ldi	r24, 0x00	; 0
    40dc:	0e 94 f7 1f 	call	0x3fee	; 0x3fee <kernel_clearCallQueue>
	#if LOGGING == 1
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("         [DONE]\r\n"));
    40e0:	88 ee       	ldi	r24, 0xE8	; 232
    40e2:	9b e1       	ldi	r25, 0x1B	; 27
    40e4:	9f 93       	push	r25
    40e6:	8f 93       	push	r24
    40e8:	1f 92       	push	r1
    40ea:	cf 93       	push	r28
    40ec:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("[INIT]kernel: Setting up PRIORITY_NORM queue"));
    40f0:	8b eb       	ldi	r24, 0xBB	; 187
    40f2:	9b e1       	ldi	r25, 0x1B	; 27
    40f4:	9f 93       	push	r25
    40f6:	8f 93       	push	r24
    40f8:	1f 92       	push	r1
    40fa:	cf 93       	push	r28
    40fc:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	#endif
	kernel_clearCallQueue(1);
    4100:	81 e0       	ldi	r24, 0x01	; 1
    4102:	0e 94 f7 1f 	call	0x3fee	; 0x3fee <kernel_clearCallQueue>
	#if LOGGING == 1
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("         [DONE]\r\n"));
    4106:	89 ea       	ldi	r24, 0xA9	; 169
    4108:	9b e1       	ldi	r25, 0x1B	; 27
    410a:	9f 93       	push	r25
    410c:	8f 93       	push	r24
    410e:	1f 92       	push	r1
    4110:	cf 93       	push	r28
    4112:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("[INIT]kernel: Setting up PRIORITY_LOW queue"));
    4116:	8d e7       	ldi	r24, 0x7D	; 125
    4118:	9b e1       	ldi	r25, 0x1B	; 27
    411a:	9f 93       	push	r25
    411c:	8f 93       	push	r24
    411e:	1f 92       	push	r1
    4120:	cf 93       	push	r28
    4122:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	#endif
	kernel_clearCallQueue(2);
    4126:	82 e0       	ldi	r24, 0x02	; 2
    4128:	0e 94 f7 1f 	call	0x3fee	; 0x3fee <kernel_clearCallQueue>
	#if LOGGING == 1
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("          [DONE]\r\n"));
    412c:	8a e6       	ldi	r24, 0x6A	; 106
    412e:	9b e1       	ldi	r25, 0x1B	; 27
    4130:	9f 93       	push	r25
    4132:	8f 93       	push	r24
    4134:	1f 92       	push	r1
    4136:	cf 93       	push	r28
    4138:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("[INIT]kernel: Setting up task queue"));
    413c:	86 e4       	ldi	r24, 0x46	; 70
    413e:	9b e1       	ldi	r25, 0x1B	; 27
    4140:	9f 93       	push	r25
    4142:	8f 93       	push	r24
    4144:	1f 92       	push	r1
    4146:	cf 93       	push	r28
    4148:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	#endif
	wdt_reset();
    414c:	a8 95       	wdr
	#if LOGGING == 1
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("                  [DONE]\r\n"));
    414e:	8d b7       	in	r24, 0x3d	; 61
    4150:	9e b7       	in	r25, 0x3e	; 62
    4152:	82 96       	adiw	r24, 0x22	; 34
    4154:	0f b6       	in	r0, 0x3f	; 63
    4156:	f8 94       	cli
    4158:	9e bf       	out	0x3e, r25	; 62
    415a:	0f be       	out	0x3f, r0	; 63
    415c:	8d bf       	out	0x3d, r24	; 61
    415e:	8b e2       	ldi	r24, 0x2B	; 43
    4160:	9b e1       	ldi	r25, 0x1B	; 27
    4162:	9f 93       	push	r25
    4164:	8f 93       	push	r24
    4166:	1f 92       	push	r1
    4168:	cf 93       	push	r28
    416a:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("\r\n----------------------Memory usage----------------------\r\n"));
    416e:	8e ee       	ldi	r24, 0xEE	; 238
    4170:	9a e1       	ldi	r25, 0x1A	; 26
    4172:	9f 93       	push	r25
    4174:	8f 93       	push	r24
    4176:	1f 92       	push	r1
    4178:	cf 93       	push	r28
    417a:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_ON, L_NONE, (char *)PSTR("[INIT]kernel: HIGHPRIO queue size:             %d\r\n"), MAX_HIGHPRIO_CALL_QUEUE_SIZE);
    417e:	1f 92       	push	r1
    4180:	88 e0       	ldi	r24, 0x08	; 8
    4182:	8f 93       	push	r24
    4184:	8a eb       	ldi	r24, 0xBA	; 186
    4186:	9a e1       	ldi	r25, 0x1A	; 26
    4188:	9f 93       	push	r25
    418a:	8f 93       	push	r24
    418c:	1f 92       	push	r1
    418e:	df 93       	push	r29
    4190:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_ON, L_NONE, (char *)PSTR("[INIT]kernel: NORMPRIO queue size:             %d\r\n"), MAX_NORMPRIO_CALL_QUEUE_SIZE);
    4194:	1f 92       	push	r1
    4196:	1f 92       	push	r1
    4198:	86 e8       	ldi	r24, 0x86	; 134
    419a:	9a e1       	ldi	r25, 0x1A	; 26
    419c:	9f 93       	push	r25
    419e:	8f 93       	push	r24
    41a0:	1f 92       	push	r1
    41a2:	df 93       	push	r29
    41a4:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_ON, L_NONE, (char *)PSTR("[INIT]kernel: LOWPRIO queue size:              %d\r\n"), MAX_LOWPRIO_CALL_QUEUE_SIZE);
    41a8:	1f 92       	push	r1
    41aa:	8a e0       	ldi	r24, 0x0A	; 10
    41ac:	8f 93       	push	r24
    41ae:	82 e5       	ldi	r24, 0x52	; 82
    41b0:	9a e1       	ldi	r25, 0x1A	; 26
    41b2:	9f 93       	push	r25
    41b4:	8f 93       	push	r24
    41b6:	1f 92       	push	r1
    41b8:	df 93       	push	r29
    41ba:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_ON, L_NONE, (char *)PSTR("[INIT]kernel: Task queue size:                 %d\r\n"), MAX_TASK_QUEUE_SIZE);
    41be:	1f 92       	push	r1
    41c0:	84 e0       	ldi	r24, 0x04	; 4
    41c2:	8f 93       	push	r24
    41c4:	8e e1       	ldi	r24, 0x1E	; 30
    41c6:	9a e1       	ldi	r25, 0x1A	; 26
    41c8:	9f 93       	push	r25
    41ca:	8f 93       	push	r24
    41cc:	1f 92       	push	r1
    41ce:	df 93       	push	r29
    41d0:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_ON, L_NONE, (char *)PSTR("[INIT]kernel: HIGHPRIO queue memory usage:     %d bytes\r\n"), MAX_HIGHPRIO_CALL_QUEUE_SIZE * sizeof(void*));
    41d4:	8d b7       	in	r24, 0x3d	; 61
    41d6:	9e b7       	in	r25, 0x3e	; 62
    41d8:	80 96       	adiw	r24, 0x20	; 32
    41da:	0f b6       	in	r0, 0x3f	; 63
    41dc:	f8 94       	cli
    41de:	9e bf       	out	0x3e, r25	; 62
    41e0:	0f be       	out	0x3f, r0	; 63
    41e2:	8d bf       	out	0x3d, r24	; 61
    41e4:	1f 92       	push	r1
    41e6:	80 e1       	ldi	r24, 0x10	; 16
    41e8:	8f 93       	push	r24
    41ea:	84 ee       	ldi	r24, 0xE4	; 228
    41ec:	99 e1       	ldi	r25, 0x19	; 25
    41ee:	9f 93       	push	r25
    41f0:	8f 93       	push	r24
    41f2:	1f 92       	push	r1
    41f4:	df 93       	push	r29
    41f6:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_ON, L_NONE, (char *)PSTR("[INIT]kernel: NORMPRIO queue memory usage:     %d bytes\r\n"), MAX_NORMPRIO_CALL_QUEUE_SIZE * sizeof(void*));
    41fa:	1f 92       	push	r1
    41fc:	1f 92       	push	r1
    41fe:	8a ea       	ldi	r24, 0xAA	; 170
    4200:	99 e1       	ldi	r25, 0x19	; 25
    4202:	9f 93       	push	r25
    4204:	8f 93       	push	r24
    4206:	1f 92       	push	r1
    4208:	df 93       	push	r29
    420a:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_ON, L_NONE, (char *)PSTR("[INIT]kernel: LOWPRIO queue memory usage:      %d bytes\r\n"), MAX_LOWPRIO_CALL_QUEUE_SIZE * sizeof(void*));
    420e:	1f 92       	push	r1
    4210:	84 e1       	ldi	r24, 0x14	; 20
    4212:	8f 93       	push	r24
    4214:	80 e7       	ldi	r24, 0x70	; 112
    4216:	99 e1       	ldi	r25, 0x19	; 25
    4218:	9f 93       	push	r25
    421a:	8f 93       	push	r24
    421c:	1f 92       	push	r1
    421e:	df 93       	push	r29
    4220:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_ON, L_NONE, (char *)PSTR("[INIT]kernel: Task queue memory usage:         %d bytes\r\n"), MAX_TASK_QUEUE_SIZE * sizeof(kTaskQueue[0]));
    4224:	1f 92       	push	r1
    4226:	80 e2       	ldi	r24, 0x20	; 32
    4228:	8f 93       	push	r24
    422a:	86 e3       	ldi	r24, 0x36	; 54
    422c:	99 e1       	ldi	r25, 0x19	; 25
    422e:	9f 93       	push	r25
    4230:	8f 93       	push	r24
    4232:	1f 92       	push	r1
    4234:	df 93       	push	r29
    4236:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_ON, L_NONE, (char *)PSTR("[INIT]kernel: Total Task Manager memory usage: %d bytes\r\n"), MAX_TASK_QUEUE_SIZE * sizeof(kTaskQueue[0]) +\
    423a:	1f 92       	push	r1
    423c:	84 e4       	ldi	r24, 0x44	; 68
    423e:	8f 93       	push	r24
    4240:	8c ef       	ldi	r24, 0xFC	; 252
    4242:	98 e1       	ldi	r25, 0x18	; 24
    4244:	9f 93       	push	r25
    4246:	8f 93       	push	r24
    4248:	1f 92       	push	r1
    424a:	df 93       	push	r29
    424c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		MAX_HIGHPRIO_CALL_QUEUE_SIZE * sizeof(void*) +\
		MAX_NORMPRIO_CALL_QUEUE_SIZE * sizeof(void*) +\
		MAX_LOWPRIO_CALL_QUEUE_SIZE * sizeof(void*));
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("--------------------------------------------------------\r\n\r\n"));
    4250:	8f eb       	ldi	r24, 0xBF	; 191
    4252:	98 e1       	ldi	r25, 0x18	; 24
    4254:	9f 93       	push	r25
    4256:	8f 93       	push	r24
    4258:	1f 92       	push	r1
    425a:	cf 93       	push	r28
    425c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("[INIT]kernel: Starting timer"));
    4260:	8d b7       	in	r24, 0x3d	; 61
    4262:	9e b7       	in	r25, 0x3e	; 62
    4264:	82 96       	adiw	r24, 0x22	; 34
    4266:	0f b6       	in	r0, 0x3f	; 63
    4268:	f8 94       	cli
    426a:	9e bf       	out	0x3e, r25	; 62
    426c:	0f be       	out	0x3f, r0	; 63
    426e:	8d bf       	out	0x3d, r24	; 61
    4270:	82 ea       	ldi	r24, 0xA2	; 162
    4272:	98 e1       	ldi	r25, 0x18	; 24
    4274:	9f 93       	push	r25
    4276:	8f 93       	push	r24
    4278:	1f 92       	push	r1
    427a:	cf 93       	push	r28
    427c:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	#endif
	wdt_reset();
    4280:	a8 95       	wdr
	kernel_setupTimer();
    4282:	0e 94 34 20 	call	0x4068	; 0x4068 <kernel_setupTimer>
	kernel_startTimer();
    4286:	0e 94 28 20 	call	0x4050	; 0x4050 <kernel_startTimer>
	kernel_setFlag(KFLAG_TIMER_EN, 1);
    428a:	61 e0       	ldi	r22, 0x01	; 1
    428c:	82 e0       	ldi	r24, 0x02	; 2
    428e:	0e 94 89 1e 	call	0x3d12	; 0x3d12 <kernel_setFlag>
	#if LOGGING == 1
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("[INIT]kernel: Starting kernel"));
    4292:	84 e8       	ldi	r24, 0x84	; 132
    4294:	98 e1       	ldi	r25, 0x18	; 24
    4296:	9f 93       	push	r25
    4298:	8f 93       	push	r24
    429a:	1f 92       	push	r1
    429c:	cf 93       	push	r28
    429e:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
}

static uint8_t kernel()
{
	#if LOGGING == 1
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("                        [DONE]\r\n"));
    42a2:	83 e6       	ldi	r24, 0x63	; 99
    42a4:	98 e1       	ldi	r25, 0x18	; 24
    42a6:	9f 93       	push	r25
    42a8:	8f 93       	push	r24
    42aa:	1f 92       	push	r1
    42ac:	cf 93       	push	r28
    42ae:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("[INIT]kernel: Starting task manager"));
    42b2:	8f e3       	ldi	r24, 0x3F	; 63
    42b4:	98 e1       	ldi	r25, 0x18	; 24
    42b6:	9f 93       	push	r25
    42b8:	8f 93       	push	r24
    42ba:	1f 92       	push	r1
    42bc:	cf 93       	push	r28
    42be:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
		debug_logMessage(PGM_PUTS, L_NONE, (char *)PSTR("                  [DONE]\r\n"));
    42c2:	84 e2       	ldi	r24, 0x24	; 36
    42c4:	98 e1       	ldi	r25, 0x18	; 24
    42c6:	9f 93       	push	r25
    42c8:	8f 93       	push	r24
    42ca:	1f 92       	push	r1
    42cc:	cf 93       	push	r28
    42ce:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
	#endif
	#if KERNEL_CLI_MODULE == 1
		kernel_initCLI();
    42d2:	0e 94 17 1c 	call	0x382e	; 0x382e <kernel_initCLI>
	#endif
	kernel_setFlag(KFLAG_INIT, 0);
    42d6:	60 e0       	ldi	r22, 0x00	; 0
    42d8:	80 e0       	ldi	r24, 0x00	; 0
    42da:	0e 94 89 1e 	call	0x3d12	; 0x3d12 <kernel_setFlag>
    42de:	8d b7       	in	r24, 0x3d	; 61
    42e0:	9e b7       	in	r25, 0x3e	; 62
    42e2:	44 96       	adiw	r24, 0x14	; 20
    42e4:	0f b6       	in	r0, 0x3f	; 63
    42e6:	f8 94       	cli
    42e8:	9e bf       	out	0x3e, r25	; 62
    42ea:	0f be       	out	0x3f, r0	; 63
    42ec:	8d bf       	out	0x3d, r24	; 61
void hal_basicUart_disableInterruptsRX();
#endif


inline void hal_switchBit(volatile uint8_t *reg, uint8_t bit){
	*reg ^= (1 << bit);
    42ee:	c0 e2       	ldi	r28, 0x20	; 32
	while(1){
		wdt_reset();
    42f0:	a8 95       	wdr
}

inline static void kernel_taskManager()
{
	#if MAX_HIGHPRIO_CALL_QUEUE_SIZE != 0
	if((kCallQueueP0[0] != idle)){
    42f2:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <kCallQueueP0>
    42f6:	90 91 42 04 	lds	r25, 0x0442	; 0x800442 <kCallQueueP0+0x1>
    42fa:	83 57       	subi	r24, 0x73	; 115
    42fc:	9e 41       	sbci	r25, 0x1E	; 30
    42fe:	39 f0       	breq	.+14     	; 0x430e <kernelInit+0x27e>
		#if PROFILING == 1
			uint64_t startTime = kernel_getUptime();
		#endif
		
		(kCallQueueP0[0])();
    4300:	e0 91 41 04 	lds	r30, 0x0441	; 0x800441 <kCallQueueP0>
    4304:	f0 91 42 04 	lds	r31, 0x0442	; 0x800442 <kCallQueueP0+0x1>
    4308:	09 95       	icall
		kernel_removeCall(0);
    430a:	80 e0       	ldi	r24, 0x00	; 0
    430c:	0d c0       	rjmp	.+26     	; 0x4328 <kernelInit+0x298>
			debug_logMessage(PGM_ON, L_INFO, PSTR("kernel: Task exec time: %u ms\r\n"), (unsigned int)(kernel_getUptime()-startTime));
		#endif
	}
	#endif
	#if MAX_LOWPRIO_CALL_QUEUE_SIZE != 0
	else if(kCallQueueP2[0] != idle){		
    430e:	80 91 2d 04 	lds	r24, 0x042D	; 0x80042d <kCallQueueP2>
    4312:	90 91 2e 04 	lds	r25, 0x042E	; 0x80042e <kCallQueueP2+0x1>
    4316:	83 57       	subi	r24, 0x73	; 115
    4318:	9e 41       	sbci	r25, 0x1E	; 30
    431a:	41 f0       	breq	.+16     	; 0x432c <kernelInit+0x29c>
		#if PROFILING == 1
			uint64_t startTime = kernel_getUptime();
		#endif
		
		(kCallQueueP2[0])();
    431c:	e0 91 2d 04 	lds	r30, 0x042D	; 0x80042d <kCallQueueP2>
    4320:	f0 91 2e 04 	lds	r31, 0x042E	; 0x80042e <kCallQueueP2+0x1>
    4324:	09 95       	icall
		kernel_removeCall(2);
    4326:	82 e0       	ldi	r24, 0x02	; 2
    4328:	0e 94 75 1f 	call	0x3eea	; 0x3eea <kernel_removeCall>
#endif
static volatile struct kTaskStruct_t kTaskQueue[MAX_TASK_QUEUE_SIZE];

void idle()
{
	hal_nop();
    432c:	00 00       	nop
    432e:	85 b3       	in	r24, 0x15	; 21
    4330:	8c 27       	eor	r24, r28
    4332:	85 bb       	out	0x15, r24	; 21
	kernel_setFlag(KFLAG_INIT, 0);
	while(1){
		wdt_reset();
		kernel_taskManager();
		hal_switchBit(&LED_KRN_PORT, LED_KRN);
		hal_enableInterrupts();
    4334:	78 94       	sei
    4336:	dc cf       	rjmp	.-72     	; 0x42f0 <kernelInit+0x260>

00004338 <kernel_checkMCUCSR>:
	return 0;
}

void kernel_checkMCUCSR()
{
	if(hal_checkBit_m(mcucsr_mirror, WDRF))
    4338:	20 91 9f 04 	lds	r18, 0x049F	; 0x80049f <__bss_end>
    433c:	23 ff       	sbrs	r18, 3
    433e:	09 c0       	rjmp	.+18     	; 0x4352 <kernel_checkMCUCSR+0x1a>
		hal_setBit_m(kflags, WDRF);
    4340:	80 91 5d 04 	lds	r24, 0x045D	; 0x80045d <kflags>
    4344:	90 91 5e 04 	lds	r25, 0x045E	; 0x80045e <kflags+0x1>
    4348:	88 60       	ori	r24, 0x08	; 8
    434a:	90 93 5e 04 	sts	0x045E, r25	; 0x80045e <kflags+0x1>
    434e:	80 93 5d 04 	sts	0x045D, r24	; 0x80045d <kflags>
	if(hal_checkBit_m(mcucsr_mirror, BORF))
    4352:	22 ff       	sbrs	r18, 2
    4354:	09 c0       	rjmp	.+18     	; 0x4368 <kernel_checkMCUCSR+0x30>
		hal_setBit_m(kflags, BORF);
    4356:	80 91 5d 04 	lds	r24, 0x045D	; 0x80045d <kflags>
    435a:	90 91 5e 04 	lds	r25, 0x045E	; 0x80045e <kflags+0x1>
    435e:	84 60       	ori	r24, 0x04	; 4
    4360:	90 93 5e 04 	sts	0x045E, r25	; 0x80045e <kflags+0x1>
    4364:	80 93 5d 04 	sts	0x045D, r24	; 0x80045d <kflags>
    4368:	08 95       	ret

0000436a <__vector_15>:
	}
	e_time++;
}

ISR(HAL_TIMER_INTERRUPT_vect)
{
    436a:	1f 92       	push	r1
    436c:	0f 92       	push	r0
    436e:	0f b6       	in	r0, 0x3f	; 63
    4370:	0f 92       	push	r0
    4372:	11 24       	eor	r1, r1
    4374:	0b b6       	in	r0, 0x3b	; 59
    4376:	0f 92       	push	r0
    4378:	2f 93       	push	r18
    437a:	3f 93       	push	r19
    437c:	4f 93       	push	r20
    437e:	5f 93       	push	r21
    4380:	6f 93       	push	r22
    4382:	7f 93       	push	r23
    4384:	8f 93       	push	r24
    4386:	9f 93       	push	r25
    4388:	af 93       	push	r26
    438a:	bf 93       	push	r27
    438c:	cf 93       	push	r28
    438e:	df 93       	push	r29
    4390:	ef 93       	push	r30
    4392:	ff 93       	push	r31
	hal_setBit_m(kflags, KFLAG_TIMER_ISR);
    4394:	80 91 5d 04 	lds	r24, 0x045D	; 0x80045d <kflags>
    4398:	90 91 5e 04 	lds	r25, 0x045E	; 0x80045e <kflags+0x1>
    439c:	88 60       	ori	r24, 0x08	; 8
    439e:	90 93 5e 04 	sts	0x045E, r25	; 0x80045e <kflags+0x1>
    43a2:	80 93 5d 04 	sts	0x045D, r24	; 0x80045d <kflags>
	hal_disableInterrupts();
    43a6:	f8 94       	cli
}


inline static void kernel_taskService()
{
	for(int i = 0; i < MAX_TASK_QUEUE_SIZE; i++){
    43a8:	c0 e0       	ldi	r28, 0x00	; 0
    43aa:	d0 e0       	ldi	r29, 0x00	; 0
		if(kTaskQueue[i].pointer == idle) continue;
    43ac:	9e 01       	movw	r18, r28
    43ae:	63 e0       	ldi	r22, 0x03	; 3
    43b0:	22 0f       	add	r18, r18
    43b2:	33 1f       	adc	r19, r19
    43b4:	6a 95       	dec	r22
    43b6:	e1 f7       	brne	.-8      	; 0x43b0 <__vector_15+0x46>
    43b8:	f9 01       	movw	r30, r18
    43ba:	e3 5f       	subi	r30, 0xF3	; 243
    43bc:	fb 4f       	sbci	r31, 0xFB	; 251
    43be:	80 81       	ld	r24, Z
    43c0:	91 81       	ldd	r25, Z+1	; 0x01
    43c2:	83 57       	subi	r24, 0x73	; 115
    43c4:	9e 41       	sbci	r25, 0x1E	; 30
    43c6:	09 f4       	brne	.+2      	; 0x43ca <__vector_15+0x60>
    43c8:	4e c0       	rjmp	.+156    	; 0x4466 <__vector_15+0xfc>
		else {
			if(kTaskQueue[i].delay != 0 && kTaskQueue[i].state == KSTATE_ACTIVE)
    43ca:	82 81       	ldd	r24, Z+2	; 0x02
    43cc:	93 81       	ldd	r25, Z+3	; 0x03
    43ce:	89 2b       	or	r24, r25
    43d0:	39 f0       	breq	.+14     	; 0x43e0 <__vector_15+0x76>
    43d2:	87 81       	ldd	r24, Z+7	; 0x07
    43d4:	81 30       	cpi	r24, 0x01	; 1
    43d6:	21 f4       	brne	.+8      	; 0x43e0 <__vector_15+0x76>
				kTaskQueue[i].delay--;
    43d8:	82 81       	ldd	r24, Z+2	; 0x02
    43da:	93 81       	ldd	r25, Z+3	; 0x03
    43dc:	01 97       	sbiw	r24, 0x01	; 1
    43de:	41 c0       	rjmp	.+130    	; 0x4462 <__vector_15+0xf8>
			else {
				if(kTaskQueue[i].state == KSTATE_ACTIVE && kTaskQueue[i].pointer != NULL){
    43e0:	f9 01       	movw	r30, r18
    43e2:	e3 5f       	subi	r30, 0xF3	; 243
    43e4:	fb 4f       	sbci	r31, 0xFB	; 251
    43e6:	87 81       	ldd	r24, Z+7	; 0x07
    43e8:	81 30       	cpi	r24, 0x01	; 1
    43ea:	e9 f5       	brne	.+122    	; 0x4466 <__vector_15+0xfc>
    43ec:	80 81       	ld	r24, Z
    43ee:	91 81       	ldd	r25, Z+1	; 0x01
    43f0:	89 2b       	or	r24, r25
    43f2:	c9 f1       	breq	.+114    	; 0x4466 <__vector_15+0xfc>
					kernel_addCall_i(kTaskQueue[i].pointer, kTaskQueue[i].priority);
    43f4:	56 81       	ldd	r21, Z+6	; 0x06
    43f6:	60 81       	ld	r22, Z
    43f8:	71 81       	ldd	r23, Z+1	; 0x01
    43fa:	85 2f       	mov	r24, r21
    43fc:	90 e0       	ldi	r25, 0x00	; 0
    43fe:	53 30       	cpi	r21, 0x03	; 3
    4400:	28 f4       	brcc	.+10     	; 0x440c <__vector_15+0xa2>
    4402:	fc 01       	movw	r30, r24
    4404:	e1 56       	subi	r30, 0x61	; 97
    4406:	fe 4f       	sbci	r31, 0xFE	; 254
    4408:	e0 81       	ld	r30, Z
    440a:	01 c0       	rjmp	.+2      	; 0x440e <__vector_15+0xa4>
    440c:	e0 e0       	ldi	r30, 0x00	; 0

static inline void kernel_addCall_i(kTask t_ptr, uint8_t t_priority)
{			
	uint8_t maxsize = kernel_getMaxQueueSize(t_priority);

	if(kCallIndex[t_priority] < maxsize){
    440e:	dc 01       	movw	r26, r24
    4410:	ae 5a       	subi	r26, 0xAE	; 174
    4412:	bb 4f       	sbci	r27, 0xFB	; 251
    4414:	4c 91       	ld	r20, X
    4416:	4e 17       	cp	r20, r30
    4418:	b8 f4       	brcc	.+46     	; 0x4448 <__vector_15+0xde>
    441a:	53 30       	cpi	r21, 0x03	; 3
    441c:	40 f4       	brcc	.+16     	; 0x442e <__vector_15+0xc4>
    441e:	88 0f       	add	r24, r24
    4420:	99 1f       	adc	r25, r25
    4422:	fc 01       	movw	r30, r24
    4424:	ee 55       	subi	r30, 0x5E	; 94
    4426:	fe 4f       	sbci	r31, 0xFE	; 254
    4428:	90 81       	ld	r25, Z
    442a:	81 81       	ldd	r24, Z+1	; 0x01
    442c:	02 c0       	rjmp	.+4      	; 0x4432 <__vector_15+0xc8>
    442e:	90 e0       	ldi	r25, 0x00	; 0
    4430:	80 e0       	ldi	r24, 0x00	; 0
		volatile kTask* ptr = kernel_getCallQueuePointer(t_priority);
		
		(ptr)[kCallIndex[t_priority]] = t_ptr;
    4432:	e9 2f       	mov	r30, r25
    4434:	f8 2f       	mov	r31, r24
    4436:	e4 0f       	add	r30, r20
    4438:	f1 1d       	adc	r31, r1
    443a:	e4 0f       	add	r30, r20
    443c:	f1 1d       	adc	r31, r1
    443e:	71 83       	std	Z+1, r23	; 0x01
    4440:	60 83       	st	Z, r22
		kCallIndex[t_priority]++;
    4442:	8c 91       	ld	r24, X
    4444:	8f 5f       	subi	r24, 0xFF	; 255
    4446:	8c 93       	st	X, r24
			if(kTaskQueue[i].delay != 0 && kTaskQueue[i].state == KSTATE_ACTIVE)
				kTaskQueue[i].delay--;
			else {
				if(kTaskQueue[i].state == KSTATE_ACTIVE && kTaskQueue[i].pointer != NULL){
					kernel_addCall_i(kTaskQueue[i].pointer, kTaskQueue[i].priority);
					if(kTaskQueue[i].repeatPeriod == 0) 
    4448:	f9 01       	movw	r30, r18
    444a:	e3 5f       	subi	r30, 0xF3	; 243
    444c:	fb 4f       	sbci	r31, 0xFB	; 251
    444e:	84 81       	ldd	r24, Z+4	; 0x04
    4450:	95 81       	ldd	r25, Z+5	; 0x05
    4452:	89 2b       	or	r24, r25
    4454:	21 f4       	brne	.+8      	; 0x445e <__vector_15+0xf4>
						kernel_removeTask(i);
    4456:	8c 2f       	mov	r24, r28
    4458:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <kernel_removeTask>
    445c:	04 c0       	rjmp	.+8      	; 0x4466 <__vector_15+0xfc>
					else 
						kTaskQueue[i].delay = kTaskQueue[i].repeatPeriod;
    445e:	84 81       	ldd	r24, Z+4	; 0x04
    4460:	95 81       	ldd	r25, Z+5	; 0x05
    4462:	93 83       	std	Z+3, r25	; 0x03
    4464:	82 83       	std	Z+2, r24	; 0x02
}


inline static void kernel_taskService()
{
	for(int i = 0; i < MAX_TASK_QUEUE_SIZE; i++){
    4466:	21 96       	adiw	r28, 0x01	; 1
    4468:	c4 30       	cpi	r28, 0x04	; 4
    446a:	d1 05       	cpc	r29, r1
    446c:	09 f0       	breq	.+2      	; 0x4470 <__vector_15+0x106>
    446e:	9e cf       	rjmp	.-196    	; 0x43ac <__vector_15+0x42>
						kTaskQueue[i].delay = kTaskQueue[i].repeatPeriod;
				}
			}
		}
	}
	e_time++;
    4470:	20 91 55 04 	lds	r18, 0x0455	; 0x800455 <e_time>
    4474:	30 91 56 04 	lds	r19, 0x0456	; 0x800456 <e_time+0x1>
    4478:	40 91 57 04 	lds	r20, 0x0457	; 0x800457 <e_time+0x2>
    447c:	50 91 58 04 	lds	r21, 0x0458	; 0x800458 <e_time+0x3>
    4480:	60 91 59 04 	lds	r22, 0x0459	; 0x800459 <e_time+0x4>
    4484:	70 91 5a 04 	lds	r23, 0x045A	; 0x80045a <e_time+0x5>
    4488:	80 91 5b 04 	lds	r24, 0x045B	; 0x80045b <e_time+0x6>
    448c:	90 91 5c 04 	lds	r25, 0x045C	; 0x80045c <e_time+0x7>
    4490:	a1 e0       	ldi	r26, 0x01	; 1
    4492:	0e 94 b1 29 	call	0x5362	; 0x5362 <__adddi3_s8>
    4496:	20 93 55 04 	sts	0x0455, r18	; 0x800455 <e_time>
    449a:	30 93 56 04 	sts	0x0456, r19	; 0x800456 <e_time+0x1>
    449e:	40 93 57 04 	sts	0x0457, r20	; 0x800457 <e_time+0x2>
    44a2:	50 93 58 04 	sts	0x0458, r21	; 0x800458 <e_time+0x3>
    44a6:	60 93 59 04 	sts	0x0459, r22	; 0x800459 <e_time+0x4>
    44aa:	70 93 5a 04 	sts	0x045A, r23	; 0x80045a <e_time+0x5>
    44ae:	80 93 5b 04 	sts	0x045B, r24	; 0x80045b <e_time+0x6>
    44b2:	90 93 5c 04 	sts	0x045C, r25	; 0x80045c <e_time+0x7>
	hal_disableInterrupts();
	
	kernel_taskService();
	#ifndef USE_EXTERNAL_TIMER_ISR
		#if KERNEL_TIMER_MODULE == 1
			kernel_timerService();
    44b6:	0e 94 3f 23 	call	0x467e	; 0x467e <kernel_timerService>
		#endif
	#endif
	
	hal_enableInterrupts();
    44ba:	78 94       	sei
	hal_clearBit_m(kflags, KFLAG_TIMER_ISR);
    44bc:	80 91 5d 04 	lds	r24, 0x045D	; 0x80045d <kflags>
    44c0:	90 91 5e 04 	lds	r25, 0x045E	; 0x80045e <kflags+0x1>
    44c4:	87 7f       	andi	r24, 0xF7	; 247
    44c6:	90 93 5e 04 	sts	0x045E, r25	; 0x80045e <kflags+0x1>
    44ca:	80 93 5d 04 	sts	0x045D, r24	; 0x80045d <kflags>
}
    44ce:	ff 91       	pop	r31
    44d0:	ef 91       	pop	r30
    44d2:	df 91       	pop	r29
    44d4:	cf 91       	pop	r28
    44d6:	bf 91       	pop	r27
    44d8:	af 91       	pop	r26
    44da:	9f 91       	pop	r25
    44dc:	8f 91       	pop	r24
    44de:	7f 91       	pop	r23
    44e0:	6f 91       	pop	r22
    44e2:	5f 91       	pop	r21
    44e4:	4f 91       	pop	r20
    44e6:	3f 91       	pop	r19
    44e8:	2f 91       	pop	r18
    44ea:	0f 90       	pop	r0
    44ec:	0b be       	out	0x3b, r0	; 59
    44ee:	0f 90       	pop	r0
    44f0:	0f be       	out	0x3f, r0	; 63
    44f2:	0f 90       	pop	r0
    44f4:	1f 90       	pop	r1
    44f6:	18 95       	reti

000044f8 <kernel_setTimer>:
#if KERNEL_TIMER_MODULE == 1
static volatile struct kTimerStruct_t kTimerQueue[MAX_TIMER_COUNT];
static volatile uint8_t kTimerIndex = 0;

uint8_t kernel_setTimer(kTimerISR t_pointer, uint32_t t_delay)
{
    44f8:	cf 92       	push	r12
    44fa:	df 92       	push	r13
    44fc:	ef 92       	push	r14
    44fe:	ff 92       	push	r15
    4500:	cf 93       	push	r28
    4502:	df 93       	push	r29
    4504:	ec 01       	movw	r28, r24
    4506:	6a 01       	movw	r12, r20
    4508:	7b 01       	movw	r14, r22
	if(!kernel_checkFlag(KFLAG_TIMER_EN)) return 2;
    450a:	82 e0       	ldi	r24, 0x02	; 2
    450c:	0e 94 b2 1e 	call	0x3d64	; 0x3d64 <kernel_checkFlag>
    4510:	88 23       	and	r24, r24
    4512:	09 f4       	brne	.+2      	; 0x4516 <kernel_setTimer+0x1e>
    4514:	4f c0       	rjmp	.+158    	; 0x45b4 <kernel_setTimer+0xbc>
		
	uint8_t sreg = hal_statusReg;
    4516:	2f b7       	in	r18, 0x3f	; 63
	hal_disableInterrupts();
    4518:	f8 94       	cli
	
	for(int i = 0; i <= kTimerIndex; i++){
    451a:	80 e0       	ldi	r24, 0x00	; 0
    451c:	90 e0       	ldi	r25, 0x00	; 0
		if(kTimerQueue[i].tsrPointer == t_pointer){
    451e:	3a e0       	ldi	r19, 0x0A	; 10
	if(!kernel_checkFlag(KFLAG_TIMER_EN)) return 2;
		
	uint8_t sreg = hal_statusReg;
	hal_disableInterrupts();
	
	for(int i = 0; i <= kTimerIndex; i++){
    4520:	40 91 5f 04 	lds	r20, 0x045F	; 0x80045f <kTimerIndex>
    4524:	50 e0       	ldi	r21, 0x00	; 0
    4526:	48 17       	cp	r20, r24
    4528:	59 07       	cpc	r21, r25
    452a:	9c f0       	brlt	.+38     	; 0x4552 <kernel_setTimer+0x5a>
		if(kTimerQueue[i].tsrPointer == t_pointer){
    452c:	38 9f       	mul	r19, r24
    452e:	f0 01       	movw	r30, r0
    4530:	39 9f       	mul	r19, r25
    4532:	f0 0d       	add	r31, r0
    4534:	11 24       	eor	r1, r1
    4536:	e0 5a       	subi	r30, 0xA0	; 160
    4538:	fb 4f       	sbci	r31, 0xFB	; 251
    453a:	40 81       	ld	r20, Z
    453c:	51 81       	ldd	r21, Z+1	; 0x01
    453e:	4c 17       	cp	r20, r28
    4540:	5d 07       	cpc	r21, r29
    4542:	29 f4       	brne	.+10     	; 0x454e <kernel_setTimer+0x56>
			kTimerQueue[i].period = t_delay;
    4544:	c2 82       	std	Z+2, r12	; 0x02
    4546:	d3 82       	std	Z+3, r13	; 0x03
    4548:	e4 82       	std	Z+4, r14	; 0x04
    454a:	f5 82       	std	Z+5, r15	; 0x05
    454c:	27 c0       	rjmp	.+78     	; 0x459c <kernel_setTimer+0xa4>
	if(!kernel_checkFlag(KFLAG_TIMER_EN)) return 2;
		
	uint8_t sreg = hal_statusReg;
	hal_disableInterrupts();
	
	for(int i = 0; i <= kTimerIndex; i++){
    454e:	01 96       	adiw	r24, 0x01	; 1
    4550:	e7 cf       	rjmp	.-50     	; 0x4520 <kernel_setTimer+0x28>
			hal_enableInterrupts();
			hal_statusReg = sreg;
			return 0;
		}
	}
	if(kTimerIndex < MAX_TIMER_COUNT){
    4552:	80 91 5f 04 	lds	r24, 0x045F	; 0x80045f <kTimerIndex>
    4556:	83 30       	cpi	r24, 0x03	; 3
    4558:	48 f5       	brcc	.+82     	; 0x45ac <kernel_setTimer+0xb4>
		kTimerIndex++;
    455a:	80 91 5f 04 	lds	r24, 0x045F	; 0x80045f <kTimerIndex>
    455e:	8f 5f       	subi	r24, 0xFF	; 255
    4560:	80 93 5f 04 	sts	0x045F, r24	; 0x80045f <kTimerIndex>
		kTimerQueue[kTimerIndex].tsrPointer = t_pointer;
    4564:	e0 91 5f 04 	lds	r30, 0x045F	; 0x80045f <kTimerIndex>
    4568:	8a e0       	ldi	r24, 0x0A	; 10
    456a:	8e 9f       	mul	r24, r30
    456c:	f0 01       	movw	r30, r0
    456e:	11 24       	eor	r1, r1
    4570:	e0 5a       	subi	r30, 0xA0	; 160
    4572:	fb 4f       	sbci	r31, 0xFB	; 251
    4574:	d1 83       	std	Z+1, r29	; 0x01
    4576:	c0 83       	st	Z, r28
		kTimerQueue[kTimerIndex].period = t_delay;
    4578:	e0 91 5f 04 	lds	r30, 0x045F	; 0x80045f <kTimerIndex>
    457c:	8e 9f       	mul	r24, r30
    457e:	f0 01       	movw	r30, r0
    4580:	11 24       	eor	r1, r1
    4582:	e0 5a       	subi	r30, 0xA0	; 160
    4584:	fb 4f       	sbci	r31, 0xFB	; 251
    4586:	c2 82       	std	Z+2, r12	; 0x02
    4588:	d3 82       	std	Z+3, r13	; 0x03
    458a:	e4 82       	std	Z+4, r14	; 0x04
    458c:	f5 82       	std	Z+5, r15	; 0x05
		kTimerQueue[kTimerIndex].repeatPeriod = t_delay;
    458e:	e0 91 5f 04 	lds	r30, 0x045F	; 0x80045f <kTimerIndex>
    4592:	8e 9f       	mul	r24, r30
    4594:	f0 01       	movw	r30, r0
    4596:	11 24       	eor	r1, r1
    4598:	e0 5a       	subi	r30, 0xA0	; 160
    459a:	fb 4f       	sbci	r31, 0xFB	; 251
    459c:	c6 82       	std	Z+6, r12	; 0x06
    459e:	d7 82       	std	Z+7, r13	; 0x07
    45a0:	e0 86       	std	Z+8, r14	; 0x08
    45a2:	f1 86       	std	Z+9, r15	; 0x09
		
		hal_enableInterrupts();
    45a4:	78 94       	sei
		hal_statusReg = sreg;
    45a6:	2f bf       	out	0x3f, r18	; 63
		return 0;
    45a8:	80 e0       	ldi	r24, 0x00	; 0
    45aa:	05 c0       	rjmp	.+10     	; 0x45b6 <kernel_setTimer+0xbe>
	}
	else {
		hal_enableInterrupts();
    45ac:	78 94       	sei
		hal_statusReg = sreg;
    45ae:	2f bf       	out	0x3f, r18	; 63
		return MAX_TIMER_COUNT;
    45b0:	83 e0       	ldi	r24, 0x03	; 3
    45b2:	01 c0       	rjmp	.+2      	; 0x45b6 <kernel_setTimer+0xbe>
static volatile struct kTimerStruct_t kTimerQueue[MAX_TIMER_COUNT];
static volatile uint8_t kTimerIndex = 0;

uint8_t kernel_setTimer(kTimerISR t_pointer, uint32_t t_delay)
{
	if(!kernel_checkFlag(KFLAG_TIMER_EN)) return 2;
    45b4:	82 e0       	ldi	r24, 0x02	; 2
	else {
		hal_enableInterrupts();
		hal_statusReg = sreg;
		return MAX_TIMER_COUNT;
	}
}
    45b6:	df 91       	pop	r29
    45b8:	cf 91       	pop	r28
    45ba:	ff 90       	pop	r15
    45bc:	ef 90       	pop	r14
    45be:	df 90       	pop	r13
    45c0:	cf 90       	pop	r12
    45c2:	08 95       	ret

000045c4 <kernel_removeTimer>:

uint8_t kernel_removeTimer(kTimerISR t_pointer)
{
    45c4:	cf 93       	push	r28
    45c6:	df 93       	push	r29
    45c8:	ec 01       	movw	r28, r24
	if(!kernel_checkFlag(KFLAG_TIMER_EN)) return 2;
    45ca:	82 e0       	ldi	r24, 0x02	; 2
    45cc:	0e 94 b2 1e 	call	0x3d64	; 0x3d64 <kernel_checkFlag>
    45d0:	88 23       	and	r24, r24
    45d2:	b9 f0       	breq	.+46     	; 0x4602 <kernel_removeTimer+0x3e>
	
	uint8_t position;
	
	uint8_t sreg = hal_statusReg;
    45d4:	3f b7       	in	r19, 0x3f	; 63
	hal_disableInterrupts();
    45d6:	f8 94       	cli
	
	kTimerIndex--;
    45d8:	80 91 5f 04 	lds	r24, 0x045F	; 0x80045f <kTimerIndex>
    45dc:	81 50       	subi	r24, 0x01	; 1
    45de:	80 93 5f 04 	sts	0x045F, r24	; 0x80045f <kTimerIndex>
	for(position = 0; position < MAX_TIMER_COUNT-1; position++){
		if(t_pointer == kTimerQueue[position].tsrPointer)
    45e2:	80 91 60 04 	lds	r24, 0x0460	; 0x800460 <kTimerQueue>
    45e6:	90 91 61 04 	lds	r25, 0x0461	; 0x800461 <kTimerQueue+0x1>
    45ea:	c8 17       	cp	r28, r24
    45ec:	d9 07       	cpc	r29, r25
    45ee:	59 f0       	breq	.+22     	; 0x4606 <kernel_removeTimer+0x42>
    45f0:	80 91 6a 04 	lds	r24, 0x046A	; 0x80046a <kTimerQueue+0xa>
    45f4:	90 91 6b 04 	lds	r25, 0x046B	; 0x80046b <kTimerQueue+0xb>
    45f8:	c8 17       	cp	r28, r24
    45fa:	d9 07       	cpc	r29, r25
    45fc:	d1 f5       	brne	.+116    	; 0x4672 <kernel_removeTimer+0xae>
	
	uint8_t sreg = hal_statusReg;
	hal_disableInterrupts();
	
	kTimerIndex--;
	for(position = 0; position < MAX_TIMER_COUNT-1; position++){
    45fe:	81 e0       	ldi	r24, 0x01	; 1
    4600:	03 c0       	rjmp	.+6      	; 0x4608 <kernel_removeTimer+0x44>
	}
}

uint8_t kernel_removeTimer(kTimerISR t_pointer)
{
	if(!kernel_checkFlag(KFLAG_TIMER_EN)) return 2;
    4602:	82 e0       	ldi	r24, 0x02	; 2
    4604:	39 c0       	rjmp	.+114    	; 0x4678 <kernel_removeTimer+0xb4>
	
	uint8_t sreg = hal_statusReg;
	hal_disableInterrupts();
	
	kTimerIndex--;
	for(position = 0; position < MAX_TIMER_COUNT-1; position++){
    4606:	80 e0       	ldi	r24, 0x00	; 0
		if(t_pointer == kTimerQueue[position].tsrPointer)
		break;
	}
	
	if(position != MAX_TIMER_COUNT-1){
		kTimerQueue[position].tsrPointer = NULL;
    4608:	90 e0       	ldi	r25, 0x00	; 0
    460a:	2a e0       	ldi	r18, 0x0A	; 10
    460c:	28 9f       	mul	r18, r24
    460e:	f0 01       	movw	r30, r0
    4610:	29 9f       	mul	r18, r25
    4612:	f0 0d       	add	r31, r0
    4614:	11 24       	eor	r1, r1
    4616:	e0 5a       	subi	r30, 0xA0	; 160
    4618:	fb 4f       	sbci	r31, 0xFB	; 251
    461a:	11 82       	std	Z+1, r1	; 0x01
    461c:	10 82       	st	Z, r1
		kTimerQueue[position].period = 0;
    461e:	12 82       	std	Z+2, r1	; 0x02
    4620:	13 82       	std	Z+3, r1	; 0x03
    4622:	14 82       	std	Z+4, r1	; 0x04
    4624:	15 82       	std	Z+5, r1	; 0x05
		for(int j = position; j < MAX_TIMER_COUNT-1; j++){
			kTimerQueue[j] = kTimerQueue[j+1];
    4626:	ac 01       	movw	r20, r24
    4628:	4f 5f       	subi	r20, 0xFF	; 255
    462a:	5f 4f       	sbci	r21, 0xFF	; 255
    462c:	28 9f       	mul	r18, r24
    462e:	d0 01       	movw	r26, r0
    4630:	29 9f       	mul	r18, r25
    4632:	b0 0d       	add	r27, r0
    4634:	11 24       	eor	r1, r1
    4636:	a0 5a       	subi	r26, 0xA0	; 160
    4638:	bb 4f       	sbci	r27, 0xFB	; 251
    463a:	24 9f       	mul	r18, r20
    463c:	f0 01       	movw	r30, r0
    463e:	25 9f       	mul	r18, r21
    4640:	f0 0d       	add	r31, r0
    4642:	11 24       	eor	r1, r1
    4644:	e0 5a       	subi	r30, 0xA0	; 160
    4646:	fb 4f       	sbci	r31, 0xFB	; 251
    4648:	82 2f       	mov	r24, r18
    464a:	01 90       	ld	r0, Z+
    464c:	0d 92       	st	X+, r0
    464e:	8a 95       	dec	r24
    4650:	e1 f7       	brne	.-8      	; 0x464a <kernel_removeTimer+0x86>
    4652:	ca 01       	movw	r24, r20
	}
	
	if(position != MAX_TIMER_COUNT-1){
		kTimerQueue[position].tsrPointer = NULL;
		kTimerQueue[position].period = 0;
		for(int j = position; j < MAX_TIMER_COUNT-1; j++){
    4654:	42 30       	cpi	r20, 0x02	; 2
    4656:	51 05       	cpc	r21, r1
    4658:	31 f7       	brne	.-52     	; 0x4626 <kernel_removeTimer+0x62>
			kTimerQueue[j] = kTimerQueue[j+1];
		}
		kTimerQueue[MAX_TIMER_COUNT-1].tsrPointer = NULL;
    465a:	10 92 75 04 	sts	0x0475, r1	; 0x800475 <kTimerQueue+0x15>
    465e:	10 92 74 04 	sts	0x0474, r1	; 0x800474 <kTimerQueue+0x14>
		kTimerQueue[MAX_TIMER_COUNT-1].period = 0;
    4662:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <kTimerQueue+0x16>
    4666:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <kTimerQueue+0x17>
    466a:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <kTimerQueue+0x18>
    466e:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <kTimerQueue+0x19>
		hal_enableInterrupts();
		hal_statusReg = sreg;
		return 0;
	}
	
	hal_enableInterrupts();
    4672:	78 94       	sei
	hal_statusReg = sreg;
    4674:	3f bf       	out	0x3f, r19	; 63
	return 0;
    4676:	80 e0       	ldi	r24, 0x00	; 0
}
    4678:	df 91       	pop	r29
    467a:	cf 91       	pop	r28
    467c:	08 95       	ret

0000467e <kernel_timerService>:

inline void kernel_timerService()
{
    467e:	1f 93       	push	r17
    4680:	cf 93       	push	r28
    4682:	df 93       	push	r29
	for(int i = 0; i < MAX_TIMER_COUNT; i++){
    4684:	c0 e0       	ldi	r28, 0x00	; 0
    4686:	d0 e0       	ldi	r29, 0x00	; 0
		if(kTimerQueue[i].tsrPointer == NULL) continue;
    4688:	1a e0       	ldi	r17, 0x0A	; 10
    468a:	1c 9f       	mul	r17, r28
    468c:	f0 01       	movw	r30, r0
    468e:	1d 9f       	mul	r17, r29
    4690:	f0 0d       	add	r31, r0
    4692:	11 24       	eor	r1, r1
    4694:	e0 5a       	subi	r30, 0xA0	; 160
    4696:	fb 4f       	sbci	r31, 0xFB	; 251
    4698:	80 81       	ld	r24, Z
    469a:	91 81       	ldd	r25, Z+1	; 0x01
    469c:	89 2b       	or	r24, r25
    469e:	39 f1       	breq	.+78     	; 0x46ee <kernel_timerService+0x70>
		else {
			if(kTimerQueue[i].period != 0)
    46a0:	82 81       	ldd	r24, Z+2	; 0x02
    46a2:	93 81       	ldd	r25, Z+3	; 0x03
    46a4:	a4 81       	ldd	r26, Z+4	; 0x04
    46a6:	b5 81       	ldd	r27, Z+5	; 0x05
    46a8:	89 2b       	or	r24, r25
    46aa:	8a 2b       	or	r24, r26
    46ac:	8b 2b       	or	r24, r27
    46ae:	41 f0       	breq	.+16     	; 0x46c0 <kernel_timerService+0x42>
				kTimerQueue[i].period--;
    46b0:	82 81       	ldd	r24, Z+2	; 0x02
    46b2:	93 81       	ldd	r25, Z+3	; 0x03
    46b4:	a4 81       	ldd	r26, Z+4	; 0x04
    46b6:	b5 81       	ldd	r27, Z+5	; 0x05
    46b8:	01 97       	sbiw	r24, 0x01	; 1
    46ba:	a1 09       	sbc	r26, r1
    46bc:	b1 09       	sbc	r27, r1
    46be:	13 c0       	rjmp	.+38     	; 0x46e6 <kernel_timerService+0x68>
			else {
				if(kTimerQueue[i].tsrPointer != NULL) (kTimerQueue[i].tsrPointer)(); //Additional NULLPTR protection
    46c0:	80 81       	ld	r24, Z
    46c2:	91 81       	ldd	r25, Z+1	; 0x01
    46c4:	89 2b       	or	r24, r25
    46c6:	21 f0       	breq	.+8      	; 0x46d0 <kernel_timerService+0x52>
    46c8:	01 90       	ld	r0, Z+
    46ca:	f0 81       	ld	r31, Z
    46cc:	e0 2d       	mov	r30, r0
    46ce:	09 95       	icall
				kTimerQueue[i].period = kTimerQueue[i].repeatPeriod;
    46d0:	1c 9f       	mul	r17, r28
    46d2:	f0 01       	movw	r30, r0
    46d4:	1d 9f       	mul	r17, r29
    46d6:	f0 0d       	add	r31, r0
    46d8:	11 24       	eor	r1, r1
    46da:	e0 5a       	subi	r30, 0xA0	; 160
    46dc:	fb 4f       	sbci	r31, 0xFB	; 251
    46de:	86 81       	ldd	r24, Z+6	; 0x06
    46e0:	97 81       	ldd	r25, Z+7	; 0x07
    46e2:	a0 85       	ldd	r26, Z+8	; 0x08
    46e4:	b1 85       	ldd	r27, Z+9	; 0x09
    46e6:	82 83       	std	Z+2, r24	; 0x02
    46e8:	93 83       	std	Z+3, r25	; 0x03
    46ea:	a4 83       	std	Z+4, r26	; 0x04
    46ec:	b5 83       	std	Z+5, r27	; 0x05
	return 0;
}

inline void kernel_timerService()
{
	for(int i = 0; i < MAX_TIMER_COUNT; i++){
    46ee:	21 96       	adiw	r28, 0x01	; 1
    46f0:	c3 30       	cpi	r28, 0x03	; 3
    46f2:	d1 05       	cpc	r29, r1
    46f4:	51 f6       	brne	.-108    	; 0x468a <kernel_timerService+0xc>
				if(kTimerQueue[i].tsrPointer != NULL) (kTimerQueue[i].tsrPointer)(); //Additional NULLPTR protection
				kTimerQueue[i].period = kTimerQueue[i].repeatPeriod;
			}
		}
	}
}
    46f6:	df 91       	pop	r29
    46f8:	cf 91       	pop	r28
    46fa:	1f 91       	pop	r17
    46fc:	08 95       	ret

000046fe <getdht11>:
void adxl345rd(){
	float x = adxl345_readX();
	float y = adxl345_readY();
	float z = adxl345_readZ();
	debug_logMessage(PGM_ON, L_NONE, PSTR("x1: %f, y1: %f,z1: %f\r\n"), x, y, z);
}
    46fe:	cf 93       	push	r28
    4700:	df 93       	push	r29
    4702:	00 d0       	rcall	.+0      	; 0x4704 <getdht11+0x6>
    4704:	00 d0       	rcall	.+0      	; 0x4706 <getdht11+0x8>
    4706:	cd b7       	in	r28, 0x3d	; 61
    4708:	de b7       	in	r29, 0x3e	; 62
    470a:	ce 01       	movw	r24, r28
    470c:	01 96       	adiw	r24, 0x01	; 1
    470e:	0e 94 0b 13 	call	0x2616	; 0x2616 <DHT_GetHumidity>
    4712:	1f 92       	push	r1
    4714:	1f 92       	push	r1
    4716:	1f 92       	push	r1
    4718:	1f 92       	push	r1
    471a:	8c 81       	ldd	r24, Y+4	; 0x04
    471c:	8f 93       	push	r24
    471e:	8b 81       	ldd	r24, Y+3	; 0x03
    4720:	8f 93       	push	r24
    4722:	8a 81       	ldd	r24, Y+2	; 0x02
    4724:	8f 93       	push	r24
    4726:	89 81       	ldd	r24, Y+1	; 0x01
    4728:	8f 93       	push	r24
    472a:	8b e7       	ldi	r24, 0x7B	; 123
    472c:	9c e1       	ldi	r25, 0x1C	; 28
    472e:	9f 93       	push	r25
    4730:	8f 93       	push	r24
    4732:	1f 92       	push	r1
    4734:	81 e0       	ldi	r24, 0x01	; 1
    4736:	8f 93       	push	r24
    4738:	0e 94 b0 1d 	call	0x3b60	; 0x3b60 <debug_logMessage>
    473c:	0f b6       	in	r0, 0x3f	; 63
    473e:	f8 94       	cli
    4740:	de bf       	out	0x3e, r29	; 62
    4742:	0f be       	out	0x3f, r0	; 63
    4744:	cd bf       	out	0x3d, r28	; 61
    4746:	0f 90       	pop	r0
    4748:	0f 90       	pop	r0
    474a:	0f 90       	pop	r0
    474c:	0f 90       	pop	r0
    474e:	df 91       	pop	r29
    4750:	cf 91       	pop	r28
    4752:	08 95       	ret

00004754 <main>:
	double hum[1];
	DHT_GetHumidity(hum);
	debug_logMessage(PGM_ON, L_NONE, PSTR("hum: %f, t2: %f\r\n"), hum[0], t2[0]);
}

int main(void){
    4754:	0f 93       	push	r16
	
	hal_enableInterrupts();
    4756:	78 94       	sei
__attribute__ ((__always_inline__))
void wdt_enable (const uint8_t value)
{
	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
	{
		__asm__ __volatile__ (
    4758:	9f e0       	ldi	r25, 0x0F	; 15
    475a:	88 e1       	ldi	r24, 0x18	; 24
    475c:	0f b6       	in	r0, 0x3f	; 63
    475e:	f8 94       	cli
    4760:	a8 95       	wdr
    4762:	81 bd       	out	0x21, r24	; 33
    4764:	0f be       	out	0x3f, r0	; 63
    4766:	91 bd       	out	0x21, r25	; 33
	wdt_enable(WDTO_2S);
	hal_setupPins();
    4768:	0e 94 ec 1d 	call	0x3bd8	; 0x3bd8 <hal_setupPins>
	spi_init();
    476c:	0e 94 b8 13 	call	0x2770	; 0x2770 <spi_init>
	//bmp280_pinSetup();
	//bmp280_init();
	adxl345_pinSetup();
    4770:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <adxl345_pinSetup>
	adxl345_init();
    4774:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <adxl345_init>
	DHT_Setup();
    4778:	0e 94 db 11 	call	0x23b6	; 0x23b6 <DHT_Setup>
	//kernel_addTask(KTASK_REPEATED, loop, 1000, KPRIO_LOW, KSTATE_ACTIVE);
	//kernel_addTask(KTASK_REPEATED, bmp280rd, 10000, KPRIO_HIGH, KSTATE_ACTIVE);
	kernel_addTask(KTASK_REPEATED, getdht11, 1000, KPRIO_HIGH, KSTATE_ACTIVE);
    477c:	01 e0       	ldi	r16, 0x01	; 1
    477e:	20 e0       	ldi	r18, 0x00	; 0
    4780:	48 ee       	ldi	r20, 0xE8	; 232
    4782:	53 e0       	ldi	r21, 0x03	; 3
    4784:	6f e7       	ldi	r22, 0x7F	; 127
    4786:	73 e2       	ldi	r23, 0x23	; 35
    4788:	81 e0       	ldi	r24, 0x01	; 1
    478a:	0e 94 f4 1e 	call	0x3de8	; 0x3de8 <kernel_addTask>
	//kernel_addTask(KTASK_REPEATED, adxl345rd, 10000, KPRIO_HIGH, KSTATE_ACTIVE);
	kernelInit();
    478e:	0e 94 48 20 	call	0x4090	; 0x4090 <kernelInit>
}
    4792:	80 e0       	ldi	r24, 0x00	; 0
    4794:	90 e0       	ldi	r25, 0x00	; 0
    4796:	0f 91       	pop	r16
    4798:	08 95       	ret

0000479a <__subsf3>:
    479a:	50 58       	subi	r21, 0x80	; 128

0000479c <__addsf3>:
    479c:	bb 27       	eor	r27, r27
    479e:	aa 27       	eor	r26, r26
    47a0:	0e 94 e5 23 	call	0x47ca	; 0x47ca <__addsf3x>
    47a4:	0c 94 5f 25 	jmp	0x4abe	; 0x4abe <__fp_round>
    47a8:	0e 94 51 25 	call	0x4aa2	; 0x4aa2 <__fp_pscA>
    47ac:	38 f0       	brcs	.+14     	; 0x47bc <__addsf3+0x20>
    47ae:	0e 94 58 25 	call	0x4ab0	; 0x4ab0 <__fp_pscB>
    47b2:	20 f0       	brcs	.+8      	; 0x47bc <__addsf3+0x20>
    47b4:	39 f4       	brne	.+14     	; 0x47c4 <__addsf3+0x28>
    47b6:	9f 3f       	cpi	r25, 0xFF	; 255
    47b8:	19 f4       	brne	.+6      	; 0x47c0 <__addsf3+0x24>
    47ba:	26 f4       	brtc	.+8      	; 0x47c4 <__addsf3+0x28>
    47bc:	0c 94 4e 25 	jmp	0x4a9c	; 0x4a9c <__fp_nan>
    47c0:	0e f4       	brtc	.+2      	; 0x47c4 <__addsf3+0x28>
    47c2:	e0 95       	com	r30
    47c4:	e7 fb       	bst	r30, 7
    47c6:	0c 94 48 25 	jmp	0x4a90	; 0x4a90 <__fp_inf>

000047ca <__addsf3x>:
    47ca:	e9 2f       	mov	r30, r25
    47cc:	0e 94 70 25 	call	0x4ae0	; 0x4ae0 <__fp_split3>
    47d0:	58 f3       	brcs	.-42     	; 0x47a8 <__addsf3+0xc>
    47d2:	ba 17       	cp	r27, r26
    47d4:	62 07       	cpc	r22, r18
    47d6:	73 07       	cpc	r23, r19
    47d8:	84 07       	cpc	r24, r20
    47da:	95 07       	cpc	r25, r21
    47dc:	20 f0       	brcs	.+8      	; 0x47e6 <__addsf3x+0x1c>
    47de:	79 f4       	brne	.+30     	; 0x47fe <__addsf3x+0x34>
    47e0:	a6 f5       	brtc	.+104    	; 0x484a <__addsf3x+0x80>
    47e2:	0c 94 92 25 	jmp	0x4b24	; 0x4b24 <__fp_zero>
    47e6:	0e f4       	brtc	.+2      	; 0x47ea <__addsf3x+0x20>
    47e8:	e0 95       	com	r30
    47ea:	0b 2e       	mov	r0, r27
    47ec:	ba 2f       	mov	r27, r26
    47ee:	a0 2d       	mov	r26, r0
    47f0:	0b 01       	movw	r0, r22
    47f2:	b9 01       	movw	r22, r18
    47f4:	90 01       	movw	r18, r0
    47f6:	0c 01       	movw	r0, r24
    47f8:	ca 01       	movw	r24, r20
    47fa:	a0 01       	movw	r20, r0
    47fc:	11 24       	eor	r1, r1
    47fe:	ff 27       	eor	r31, r31
    4800:	59 1b       	sub	r21, r25
    4802:	99 f0       	breq	.+38     	; 0x482a <__addsf3x+0x60>
    4804:	59 3f       	cpi	r21, 0xF9	; 249
    4806:	50 f4       	brcc	.+20     	; 0x481c <__addsf3x+0x52>
    4808:	50 3e       	cpi	r21, 0xE0	; 224
    480a:	68 f1       	brcs	.+90     	; 0x4866 <__addsf3x+0x9c>
    480c:	1a 16       	cp	r1, r26
    480e:	f0 40       	sbci	r31, 0x00	; 0
    4810:	a2 2f       	mov	r26, r18
    4812:	23 2f       	mov	r18, r19
    4814:	34 2f       	mov	r19, r20
    4816:	44 27       	eor	r20, r20
    4818:	58 5f       	subi	r21, 0xF8	; 248
    481a:	f3 cf       	rjmp	.-26     	; 0x4802 <__addsf3x+0x38>
    481c:	46 95       	lsr	r20
    481e:	37 95       	ror	r19
    4820:	27 95       	ror	r18
    4822:	a7 95       	ror	r26
    4824:	f0 40       	sbci	r31, 0x00	; 0
    4826:	53 95       	inc	r21
    4828:	c9 f7       	brne	.-14     	; 0x481c <__addsf3x+0x52>
    482a:	7e f4       	brtc	.+30     	; 0x484a <__addsf3x+0x80>
    482c:	1f 16       	cp	r1, r31
    482e:	ba 0b       	sbc	r27, r26
    4830:	62 0b       	sbc	r22, r18
    4832:	73 0b       	sbc	r23, r19
    4834:	84 0b       	sbc	r24, r20
    4836:	ba f0       	brmi	.+46     	; 0x4866 <__addsf3x+0x9c>
    4838:	91 50       	subi	r25, 0x01	; 1
    483a:	a1 f0       	breq	.+40     	; 0x4864 <__addsf3x+0x9a>
    483c:	ff 0f       	add	r31, r31
    483e:	bb 1f       	adc	r27, r27
    4840:	66 1f       	adc	r22, r22
    4842:	77 1f       	adc	r23, r23
    4844:	88 1f       	adc	r24, r24
    4846:	c2 f7       	brpl	.-16     	; 0x4838 <__addsf3x+0x6e>
    4848:	0e c0       	rjmp	.+28     	; 0x4866 <__addsf3x+0x9c>
    484a:	ba 0f       	add	r27, r26
    484c:	62 1f       	adc	r22, r18
    484e:	73 1f       	adc	r23, r19
    4850:	84 1f       	adc	r24, r20
    4852:	48 f4       	brcc	.+18     	; 0x4866 <__addsf3x+0x9c>
    4854:	87 95       	ror	r24
    4856:	77 95       	ror	r23
    4858:	67 95       	ror	r22
    485a:	b7 95       	ror	r27
    485c:	f7 95       	ror	r31
    485e:	9e 3f       	cpi	r25, 0xFE	; 254
    4860:	08 f0       	brcs	.+2      	; 0x4864 <__addsf3x+0x9a>
    4862:	b0 cf       	rjmp	.-160    	; 0x47c4 <__addsf3+0x28>
    4864:	93 95       	inc	r25
    4866:	88 0f       	add	r24, r24
    4868:	08 f0       	brcs	.+2      	; 0x486c <__addsf3x+0xa2>
    486a:	99 27       	eor	r25, r25
    486c:	ee 0f       	add	r30, r30
    486e:	97 95       	ror	r25
    4870:	87 95       	ror	r24
    4872:	08 95       	ret

00004874 <__cmpsf2>:
    4874:	0e 94 24 25 	call	0x4a48	; 0x4a48 <__fp_cmp>
    4878:	08 f4       	brcc	.+2      	; 0x487c <__cmpsf2+0x8>
    487a:	81 e0       	ldi	r24, 0x01	; 1
    487c:	08 95       	ret

0000487e <__divsf3>:
    487e:	0e 94 53 24 	call	0x48a6	; 0x48a6 <__divsf3x>
    4882:	0c 94 5f 25 	jmp	0x4abe	; 0x4abe <__fp_round>
    4886:	0e 94 58 25 	call	0x4ab0	; 0x4ab0 <__fp_pscB>
    488a:	58 f0       	brcs	.+22     	; 0x48a2 <__divsf3+0x24>
    488c:	0e 94 51 25 	call	0x4aa2	; 0x4aa2 <__fp_pscA>
    4890:	40 f0       	brcs	.+16     	; 0x48a2 <__divsf3+0x24>
    4892:	29 f4       	brne	.+10     	; 0x489e <__divsf3+0x20>
    4894:	5f 3f       	cpi	r21, 0xFF	; 255
    4896:	29 f0       	breq	.+10     	; 0x48a2 <__divsf3+0x24>
    4898:	0c 94 48 25 	jmp	0x4a90	; 0x4a90 <__fp_inf>
    489c:	51 11       	cpse	r21, r1
    489e:	0c 94 93 25 	jmp	0x4b26	; 0x4b26 <__fp_szero>
    48a2:	0c 94 4e 25 	jmp	0x4a9c	; 0x4a9c <__fp_nan>

000048a6 <__divsf3x>:
    48a6:	0e 94 70 25 	call	0x4ae0	; 0x4ae0 <__fp_split3>
    48aa:	68 f3       	brcs	.-38     	; 0x4886 <__divsf3+0x8>

000048ac <__divsf3_pse>:
    48ac:	99 23       	and	r25, r25
    48ae:	b1 f3       	breq	.-20     	; 0x489c <__divsf3+0x1e>
    48b0:	55 23       	and	r21, r21
    48b2:	91 f3       	breq	.-28     	; 0x4898 <__divsf3+0x1a>
    48b4:	95 1b       	sub	r25, r21
    48b6:	55 0b       	sbc	r21, r21
    48b8:	bb 27       	eor	r27, r27
    48ba:	aa 27       	eor	r26, r26
    48bc:	62 17       	cp	r22, r18
    48be:	73 07       	cpc	r23, r19
    48c0:	84 07       	cpc	r24, r20
    48c2:	38 f0       	brcs	.+14     	; 0x48d2 <__divsf3_pse+0x26>
    48c4:	9f 5f       	subi	r25, 0xFF	; 255
    48c6:	5f 4f       	sbci	r21, 0xFF	; 255
    48c8:	22 0f       	add	r18, r18
    48ca:	33 1f       	adc	r19, r19
    48cc:	44 1f       	adc	r20, r20
    48ce:	aa 1f       	adc	r26, r26
    48d0:	a9 f3       	breq	.-22     	; 0x48bc <__divsf3_pse+0x10>
    48d2:	35 d0       	rcall	.+106    	; 0x493e <__divsf3_pse+0x92>
    48d4:	0e 2e       	mov	r0, r30
    48d6:	3a f0       	brmi	.+14     	; 0x48e6 <__divsf3_pse+0x3a>
    48d8:	e0 e8       	ldi	r30, 0x80	; 128
    48da:	32 d0       	rcall	.+100    	; 0x4940 <__divsf3_pse+0x94>
    48dc:	91 50       	subi	r25, 0x01	; 1
    48de:	50 40       	sbci	r21, 0x00	; 0
    48e0:	e6 95       	lsr	r30
    48e2:	00 1c       	adc	r0, r0
    48e4:	ca f7       	brpl	.-14     	; 0x48d8 <__divsf3_pse+0x2c>
    48e6:	2b d0       	rcall	.+86     	; 0x493e <__divsf3_pse+0x92>
    48e8:	fe 2f       	mov	r31, r30
    48ea:	29 d0       	rcall	.+82     	; 0x493e <__divsf3_pse+0x92>
    48ec:	66 0f       	add	r22, r22
    48ee:	77 1f       	adc	r23, r23
    48f0:	88 1f       	adc	r24, r24
    48f2:	bb 1f       	adc	r27, r27
    48f4:	26 17       	cp	r18, r22
    48f6:	37 07       	cpc	r19, r23
    48f8:	48 07       	cpc	r20, r24
    48fa:	ab 07       	cpc	r26, r27
    48fc:	b0 e8       	ldi	r27, 0x80	; 128
    48fe:	09 f0       	breq	.+2      	; 0x4902 <__divsf3_pse+0x56>
    4900:	bb 0b       	sbc	r27, r27
    4902:	80 2d       	mov	r24, r0
    4904:	bf 01       	movw	r22, r30
    4906:	ff 27       	eor	r31, r31
    4908:	93 58       	subi	r25, 0x83	; 131
    490a:	5f 4f       	sbci	r21, 0xFF	; 255
    490c:	3a f0       	brmi	.+14     	; 0x491c <__divsf3_pse+0x70>
    490e:	9e 3f       	cpi	r25, 0xFE	; 254
    4910:	51 05       	cpc	r21, r1
    4912:	78 f0       	brcs	.+30     	; 0x4932 <__divsf3_pse+0x86>
    4914:	0c 94 48 25 	jmp	0x4a90	; 0x4a90 <__fp_inf>
    4918:	0c 94 93 25 	jmp	0x4b26	; 0x4b26 <__fp_szero>
    491c:	5f 3f       	cpi	r21, 0xFF	; 255
    491e:	e4 f3       	brlt	.-8      	; 0x4918 <__divsf3_pse+0x6c>
    4920:	98 3e       	cpi	r25, 0xE8	; 232
    4922:	d4 f3       	brlt	.-12     	; 0x4918 <__divsf3_pse+0x6c>
    4924:	86 95       	lsr	r24
    4926:	77 95       	ror	r23
    4928:	67 95       	ror	r22
    492a:	b7 95       	ror	r27
    492c:	f7 95       	ror	r31
    492e:	9f 5f       	subi	r25, 0xFF	; 255
    4930:	c9 f7       	brne	.-14     	; 0x4924 <__divsf3_pse+0x78>
    4932:	88 0f       	add	r24, r24
    4934:	91 1d       	adc	r25, r1
    4936:	96 95       	lsr	r25
    4938:	87 95       	ror	r24
    493a:	97 f9       	bld	r25, 7
    493c:	08 95       	ret
    493e:	e1 e0       	ldi	r30, 0x01	; 1
    4940:	66 0f       	add	r22, r22
    4942:	77 1f       	adc	r23, r23
    4944:	88 1f       	adc	r24, r24
    4946:	bb 1f       	adc	r27, r27
    4948:	62 17       	cp	r22, r18
    494a:	73 07       	cpc	r23, r19
    494c:	84 07       	cpc	r24, r20
    494e:	ba 07       	cpc	r27, r26
    4950:	20 f0       	brcs	.+8      	; 0x495a <__divsf3_pse+0xae>
    4952:	62 1b       	sub	r22, r18
    4954:	73 0b       	sbc	r23, r19
    4956:	84 0b       	sbc	r24, r20
    4958:	ba 0b       	sbc	r27, r26
    495a:	ee 1f       	adc	r30, r30
    495c:	88 f7       	brcc	.-30     	; 0x4940 <__divsf3_pse+0x94>
    495e:	e0 95       	com	r30
    4960:	08 95       	ret

00004962 <__fixsfsi>:
    4962:	0e 94 b8 24 	call	0x4970	; 0x4970 <__fixunssfsi>
    4966:	68 94       	set
    4968:	b1 11       	cpse	r27, r1
    496a:	0c 94 93 25 	jmp	0x4b26	; 0x4b26 <__fp_szero>
    496e:	08 95       	ret

00004970 <__fixunssfsi>:
    4970:	0e 94 78 25 	call	0x4af0	; 0x4af0 <__fp_splitA>
    4974:	88 f0       	brcs	.+34     	; 0x4998 <__fixunssfsi+0x28>
    4976:	9f 57       	subi	r25, 0x7F	; 127
    4978:	98 f0       	brcs	.+38     	; 0x49a0 <__fixunssfsi+0x30>
    497a:	b9 2f       	mov	r27, r25
    497c:	99 27       	eor	r25, r25
    497e:	b7 51       	subi	r27, 0x17	; 23
    4980:	b0 f0       	brcs	.+44     	; 0x49ae <__fixunssfsi+0x3e>
    4982:	e1 f0       	breq	.+56     	; 0x49bc <__fixunssfsi+0x4c>
    4984:	66 0f       	add	r22, r22
    4986:	77 1f       	adc	r23, r23
    4988:	88 1f       	adc	r24, r24
    498a:	99 1f       	adc	r25, r25
    498c:	1a f0       	brmi	.+6      	; 0x4994 <__fixunssfsi+0x24>
    498e:	ba 95       	dec	r27
    4990:	c9 f7       	brne	.-14     	; 0x4984 <__fixunssfsi+0x14>
    4992:	14 c0       	rjmp	.+40     	; 0x49bc <__fixunssfsi+0x4c>
    4994:	b1 30       	cpi	r27, 0x01	; 1
    4996:	91 f0       	breq	.+36     	; 0x49bc <__fixunssfsi+0x4c>
    4998:	0e 94 92 25 	call	0x4b24	; 0x4b24 <__fp_zero>
    499c:	b1 e0       	ldi	r27, 0x01	; 1
    499e:	08 95       	ret
    49a0:	0c 94 92 25 	jmp	0x4b24	; 0x4b24 <__fp_zero>
    49a4:	67 2f       	mov	r22, r23
    49a6:	78 2f       	mov	r23, r24
    49a8:	88 27       	eor	r24, r24
    49aa:	b8 5f       	subi	r27, 0xF8	; 248
    49ac:	39 f0       	breq	.+14     	; 0x49bc <__fixunssfsi+0x4c>
    49ae:	b9 3f       	cpi	r27, 0xF9	; 249
    49b0:	cc f3       	brlt	.-14     	; 0x49a4 <__fixunssfsi+0x34>
    49b2:	86 95       	lsr	r24
    49b4:	77 95       	ror	r23
    49b6:	67 95       	ror	r22
    49b8:	b3 95       	inc	r27
    49ba:	d9 f7       	brne	.-10     	; 0x49b2 <__fixunssfsi+0x42>
    49bc:	3e f4       	brtc	.+14     	; 0x49cc <__fixunssfsi+0x5c>
    49be:	90 95       	com	r25
    49c0:	80 95       	com	r24
    49c2:	70 95       	com	r23
    49c4:	61 95       	neg	r22
    49c6:	7f 4f       	sbci	r23, 0xFF	; 255
    49c8:	8f 4f       	sbci	r24, 0xFF	; 255
    49ca:	9f 4f       	sbci	r25, 0xFF	; 255
    49cc:	08 95       	ret

000049ce <__floatunsisf>:
    49ce:	e8 94       	clt
    49d0:	09 c0       	rjmp	.+18     	; 0x49e4 <__floatsisf+0x12>

000049d2 <__floatsisf>:
    49d2:	97 fb       	bst	r25, 7
    49d4:	3e f4       	brtc	.+14     	; 0x49e4 <__floatsisf+0x12>
    49d6:	90 95       	com	r25
    49d8:	80 95       	com	r24
    49da:	70 95       	com	r23
    49dc:	61 95       	neg	r22
    49de:	7f 4f       	sbci	r23, 0xFF	; 255
    49e0:	8f 4f       	sbci	r24, 0xFF	; 255
    49e2:	9f 4f       	sbci	r25, 0xFF	; 255
    49e4:	99 23       	and	r25, r25
    49e6:	a9 f0       	breq	.+42     	; 0x4a12 <__floatsisf+0x40>
    49e8:	f9 2f       	mov	r31, r25
    49ea:	96 e9       	ldi	r25, 0x96	; 150
    49ec:	bb 27       	eor	r27, r27
    49ee:	93 95       	inc	r25
    49f0:	f6 95       	lsr	r31
    49f2:	87 95       	ror	r24
    49f4:	77 95       	ror	r23
    49f6:	67 95       	ror	r22
    49f8:	b7 95       	ror	r27
    49fa:	f1 11       	cpse	r31, r1
    49fc:	f8 cf       	rjmp	.-16     	; 0x49ee <__floatsisf+0x1c>
    49fe:	fa f4       	brpl	.+62     	; 0x4a3e <__floatsisf+0x6c>
    4a00:	bb 0f       	add	r27, r27
    4a02:	11 f4       	brne	.+4      	; 0x4a08 <__floatsisf+0x36>
    4a04:	60 ff       	sbrs	r22, 0
    4a06:	1b c0       	rjmp	.+54     	; 0x4a3e <__floatsisf+0x6c>
    4a08:	6f 5f       	subi	r22, 0xFF	; 255
    4a0a:	7f 4f       	sbci	r23, 0xFF	; 255
    4a0c:	8f 4f       	sbci	r24, 0xFF	; 255
    4a0e:	9f 4f       	sbci	r25, 0xFF	; 255
    4a10:	16 c0       	rjmp	.+44     	; 0x4a3e <__floatsisf+0x6c>
    4a12:	88 23       	and	r24, r24
    4a14:	11 f0       	breq	.+4      	; 0x4a1a <__floatsisf+0x48>
    4a16:	96 e9       	ldi	r25, 0x96	; 150
    4a18:	11 c0       	rjmp	.+34     	; 0x4a3c <__floatsisf+0x6a>
    4a1a:	77 23       	and	r23, r23
    4a1c:	21 f0       	breq	.+8      	; 0x4a26 <__floatsisf+0x54>
    4a1e:	9e e8       	ldi	r25, 0x8E	; 142
    4a20:	87 2f       	mov	r24, r23
    4a22:	76 2f       	mov	r23, r22
    4a24:	05 c0       	rjmp	.+10     	; 0x4a30 <__floatsisf+0x5e>
    4a26:	66 23       	and	r22, r22
    4a28:	71 f0       	breq	.+28     	; 0x4a46 <__floatsisf+0x74>
    4a2a:	96 e8       	ldi	r25, 0x86	; 134
    4a2c:	86 2f       	mov	r24, r22
    4a2e:	70 e0       	ldi	r23, 0x00	; 0
    4a30:	60 e0       	ldi	r22, 0x00	; 0
    4a32:	2a f0       	brmi	.+10     	; 0x4a3e <__floatsisf+0x6c>
    4a34:	9a 95       	dec	r25
    4a36:	66 0f       	add	r22, r22
    4a38:	77 1f       	adc	r23, r23
    4a3a:	88 1f       	adc	r24, r24
    4a3c:	da f7       	brpl	.-10     	; 0x4a34 <__floatsisf+0x62>
    4a3e:	88 0f       	add	r24, r24
    4a40:	96 95       	lsr	r25
    4a42:	87 95       	ror	r24
    4a44:	97 f9       	bld	r25, 7
    4a46:	08 95       	ret

00004a48 <__fp_cmp>:
    4a48:	99 0f       	add	r25, r25
    4a4a:	00 08       	sbc	r0, r0
    4a4c:	55 0f       	add	r21, r21
    4a4e:	aa 0b       	sbc	r26, r26
    4a50:	e0 e8       	ldi	r30, 0x80	; 128
    4a52:	fe ef       	ldi	r31, 0xFE	; 254
    4a54:	16 16       	cp	r1, r22
    4a56:	17 06       	cpc	r1, r23
    4a58:	e8 07       	cpc	r30, r24
    4a5a:	f9 07       	cpc	r31, r25
    4a5c:	c0 f0       	brcs	.+48     	; 0x4a8e <__fp_cmp+0x46>
    4a5e:	12 16       	cp	r1, r18
    4a60:	13 06       	cpc	r1, r19
    4a62:	e4 07       	cpc	r30, r20
    4a64:	f5 07       	cpc	r31, r21
    4a66:	98 f0       	brcs	.+38     	; 0x4a8e <__fp_cmp+0x46>
    4a68:	62 1b       	sub	r22, r18
    4a6a:	73 0b       	sbc	r23, r19
    4a6c:	84 0b       	sbc	r24, r20
    4a6e:	95 0b       	sbc	r25, r21
    4a70:	39 f4       	brne	.+14     	; 0x4a80 <__fp_cmp+0x38>
    4a72:	0a 26       	eor	r0, r26
    4a74:	61 f0       	breq	.+24     	; 0x4a8e <__fp_cmp+0x46>
    4a76:	23 2b       	or	r18, r19
    4a78:	24 2b       	or	r18, r20
    4a7a:	25 2b       	or	r18, r21
    4a7c:	21 f4       	brne	.+8      	; 0x4a86 <__fp_cmp+0x3e>
    4a7e:	08 95       	ret
    4a80:	0a 26       	eor	r0, r26
    4a82:	09 f4       	brne	.+2      	; 0x4a86 <__fp_cmp+0x3e>
    4a84:	a1 40       	sbci	r26, 0x01	; 1
    4a86:	a6 95       	lsr	r26
    4a88:	8f ef       	ldi	r24, 0xFF	; 255
    4a8a:	81 1d       	adc	r24, r1
    4a8c:	81 1d       	adc	r24, r1
    4a8e:	08 95       	ret

00004a90 <__fp_inf>:
    4a90:	97 f9       	bld	r25, 7
    4a92:	9f 67       	ori	r25, 0x7F	; 127
    4a94:	80 e8       	ldi	r24, 0x80	; 128
    4a96:	70 e0       	ldi	r23, 0x00	; 0
    4a98:	60 e0       	ldi	r22, 0x00	; 0
    4a9a:	08 95       	ret

00004a9c <__fp_nan>:
    4a9c:	9f ef       	ldi	r25, 0xFF	; 255
    4a9e:	80 ec       	ldi	r24, 0xC0	; 192
    4aa0:	08 95       	ret

00004aa2 <__fp_pscA>:
    4aa2:	00 24       	eor	r0, r0
    4aa4:	0a 94       	dec	r0
    4aa6:	16 16       	cp	r1, r22
    4aa8:	17 06       	cpc	r1, r23
    4aaa:	18 06       	cpc	r1, r24
    4aac:	09 06       	cpc	r0, r25
    4aae:	08 95       	ret

00004ab0 <__fp_pscB>:
    4ab0:	00 24       	eor	r0, r0
    4ab2:	0a 94       	dec	r0
    4ab4:	12 16       	cp	r1, r18
    4ab6:	13 06       	cpc	r1, r19
    4ab8:	14 06       	cpc	r1, r20
    4aba:	05 06       	cpc	r0, r21
    4abc:	08 95       	ret

00004abe <__fp_round>:
    4abe:	09 2e       	mov	r0, r25
    4ac0:	03 94       	inc	r0
    4ac2:	00 0c       	add	r0, r0
    4ac4:	11 f4       	brne	.+4      	; 0x4aca <__fp_round+0xc>
    4ac6:	88 23       	and	r24, r24
    4ac8:	52 f0       	brmi	.+20     	; 0x4ade <__fp_round+0x20>
    4aca:	bb 0f       	add	r27, r27
    4acc:	40 f4       	brcc	.+16     	; 0x4ade <__fp_round+0x20>
    4ace:	bf 2b       	or	r27, r31
    4ad0:	11 f4       	brne	.+4      	; 0x4ad6 <__fp_round+0x18>
    4ad2:	60 ff       	sbrs	r22, 0
    4ad4:	04 c0       	rjmp	.+8      	; 0x4ade <__fp_round+0x20>
    4ad6:	6f 5f       	subi	r22, 0xFF	; 255
    4ad8:	7f 4f       	sbci	r23, 0xFF	; 255
    4ada:	8f 4f       	sbci	r24, 0xFF	; 255
    4adc:	9f 4f       	sbci	r25, 0xFF	; 255
    4ade:	08 95       	ret

00004ae0 <__fp_split3>:
    4ae0:	57 fd       	sbrc	r21, 7
    4ae2:	90 58       	subi	r25, 0x80	; 128
    4ae4:	44 0f       	add	r20, r20
    4ae6:	55 1f       	adc	r21, r21
    4ae8:	59 f0       	breq	.+22     	; 0x4b00 <__fp_splitA+0x10>
    4aea:	5f 3f       	cpi	r21, 0xFF	; 255
    4aec:	71 f0       	breq	.+28     	; 0x4b0a <__fp_splitA+0x1a>
    4aee:	47 95       	ror	r20

00004af0 <__fp_splitA>:
    4af0:	88 0f       	add	r24, r24
    4af2:	97 fb       	bst	r25, 7
    4af4:	99 1f       	adc	r25, r25
    4af6:	61 f0       	breq	.+24     	; 0x4b10 <__fp_splitA+0x20>
    4af8:	9f 3f       	cpi	r25, 0xFF	; 255
    4afa:	79 f0       	breq	.+30     	; 0x4b1a <__fp_splitA+0x2a>
    4afc:	87 95       	ror	r24
    4afe:	08 95       	ret
    4b00:	12 16       	cp	r1, r18
    4b02:	13 06       	cpc	r1, r19
    4b04:	14 06       	cpc	r1, r20
    4b06:	55 1f       	adc	r21, r21
    4b08:	f2 cf       	rjmp	.-28     	; 0x4aee <__fp_split3+0xe>
    4b0a:	46 95       	lsr	r20
    4b0c:	f1 df       	rcall	.-30     	; 0x4af0 <__fp_splitA>
    4b0e:	08 c0       	rjmp	.+16     	; 0x4b20 <__fp_splitA+0x30>
    4b10:	16 16       	cp	r1, r22
    4b12:	17 06       	cpc	r1, r23
    4b14:	18 06       	cpc	r1, r24
    4b16:	99 1f       	adc	r25, r25
    4b18:	f1 cf       	rjmp	.-30     	; 0x4afc <__fp_splitA+0xc>
    4b1a:	86 95       	lsr	r24
    4b1c:	71 05       	cpc	r23, r1
    4b1e:	61 05       	cpc	r22, r1
    4b20:	08 94       	sec
    4b22:	08 95       	ret

00004b24 <__fp_zero>:
    4b24:	e8 94       	clt

00004b26 <__fp_szero>:
    4b26:	bb 27       	eor	r27, r27
    4b28:	66 27       	eor	r22, r22
    4b2a:	77 27       	eor	r23, r23
    4b2c:	cb 01       	movw	r24, r22
    4b2e:	97 f9       	bld	r25, 7
    4b30:	08 95       	ret

00004b32 <__gesf2>:
    4b32:	0e 94 24 25 	call	0x4a48	; 0x4a48 <__fp_cmp>
    4b36:	08 f4       	brcc	.+2      	; 0x4b3a <__gesf2+0x8>
    4b38:	8f ef       	ldi	r24, 0xFF	; 255
    4b3a:	08 95       	ret

00004b3c <__mulsf3>:
    4b3c:	0e 94 b1 25 	call	0x4b62	; 0x4b62 <__mulsf3x>
    4b40:	0c 94 5f 25 	jmp	0x4abe	; 0x4abe <__fp_round>
    4b44:	0e 94 51 25 	call	0x4aa2	; 0x4aa2 <__fp_pscA>
    4b48:	38 f0       	brcs	.+14     	; 0x4b58 <__mulsf3+0x1c>
    4b4a:	0e 94 58 25 	call	0x4ab0	; 0x4ab0 <__fp_pscB>
    4b4e:	20 f0       	brcs	.+8      	; 0x4b58 <__mulsf3+0x1c>
    4b50:	95 23       	and	r25, r21
    4b52:	11 f0       	breq	.+4      	; 0x4b58 <__mulsf3+0x1c>
    4b54:	0c 94 48 25 	jmp	0x4a90	; 0x4a90 <__fp_inf>
    4b58:	0c 94 4e 25 	jmp	0x4a9c	; 0x4a9c <__fp_nan>
    4b5c:	11 24       	eor	r1, r1
    4b5e:	0c 94 93 25 	jmp	0x4b26	; 0x4b26 <__fp_szero>

00004b62 <__mulsf3x>:
    4b62:	0e 94 70 25 	call	0x4ae0	; 0x4ae0 <__fp_split3>
    4b66:	70 f3       	brcs	.-36     	; 0x4b44 <__mulsf3+0x8>

00004b68 <__mulsf3_pse>:
    4b68:	95 9f       	mul	r25, r21
    4b6a:	c1 f3       	breq	.-16     	; 0x4b5c <__mulsf3+0x20>
    4b6c:	95 0f       	add	r25, r21
    4b6e:	50 e0       	ldi	r21, 0x00	; 0
    4b70:	55 1f       	adc	r21, r21
    4b72:	62 9f       	mul	r22, r18
    4b74:	f0 01       	movw	r30, r0
    4b76:	72 9f       	mul	r23, r18
    4b78:	bb 27       	eor	r27, r27
    4b7a:	f0 0d       	add	r31, r0
    4b7c:	b1 1d       	adc	r27, r1
    4b7e:	63 9f       	mul	r22, r19
    4b80:	aa 27       	eor	r26, r26
    4b82:	f0 0d       	add	r31, r0
    4b84:	b1 1d       	adc	r27, r1
    4b86:	aa 1f       	adc	r26, r26
    4b88:	64 9f       	mul	r22, r20
    4b8a:	66 27       	eor	r22, r22
    4b8c:	b0 0d       	add	r27, r0
    4b8e:	a1 1d       	adc	r26, r1
    4b90:	66 1f       	adc	r22, r22
    4b92:	82 9f       	mul	r24, r18
    4b94:	22 27       	eor	r18, r18
    4b96:	b0 0d       	add	r27, r0
    4b98:	a1 1d       	adc	r26, r1
    4b9a:	62 1f       	adc	r22, r18
    4b9c:	73 9f       	mul	r23, r19
    4b9e:	b0 0d       	add	r27, r0
    4ba0:	a1 1d       	adc	r26, r1
    4ba2:	62 1f       	adc	r22, r18
    4ba4:	83 9f       	mul	r24, r19
    4ba6:	a0 0d       	add	r26, r0
    4ba8:	61 1d       	adc	r22, r1
    4baa:	22 1f       	adc	r18, r18
    4bac:	74 9f       	mul	r23, r20
    4bae:	33 27       	eor	r19, r19
    4bb0:	a0 0d       	add	r26, r0
    4bb2:	61 1d       	adc	r22, r1
    4bb4:	23 1f       	adc	r18, r19
    4bb6:	84 9f       	mul	r24, r20
    4bb8:	60 0d       	add	r22, r0
    4bba:	21 1d       	adc	r18, r1
    4bbc:	82 2f       	mov	r24, r18
    4bbe:	76 2f       	mov	r23, r22
    4bc0:	6a 2f       	mov	r22, r26
    4bc2:	11 24       	eor	r1, r1
    4bc4:	9f 57       	subi	r25, 0x7F	; 127
    4bc6:	50 40       	sbci	r21, 0x00	; 0
    4bc8:	9a f0       	brmi	.+38     	; 0x4bf0 <__mulsf3_pse+0x88>
    4bca:	f1 f0       	breq	.+60     	; 0x4c08 <__mulsf3_pse+0xa0>
    4bcc:	88 23       	and	r24, r24
    4bce:	4a f0       	brmi	.+18     	; 0x4be2 <__mulsf3_pse+0x7a>
    4bd0:	ee 0f       	add	r30, r30
    4bd2:	ff 1f       	adc	r31, r31
    4bd4:	bb 1f       	adc	r27, r27
    4bd6:	66 1f       	adc	r22, r22
    4bd8:	77 1f       	adc	r23, r23
    4bda:	88 1f       	adc	r24, r24
    4bdc:	91 50       	subi	r25, 0x01	; 1
    4bde:	50 40       	sbci	r21, 0x00	; 0
    4be0:	a9 f7       	brne	.-22     	; 0x4bcc <__mulsf3_pse+0x64>
    4be2:	9e 3f       	cpi	r25, 0xFE	; 254
    4be4:	51 05       	cpc	r21, r1
    4be6:	80 f0       	brcs	.+32     	; 0x4c08 <__mulsf3_pse+0xa0>
    4be8:	0c 94 48 25 	jmp	0x4a90	; 0x4a90 <__fp_inf>
    4bec:	0c 94 93 25 	jmp	0x4b26	; 0x4b26 <__fp_szero>
    4bf0:	5f 3f       	cpi	r21, 0xFF	; 255
    4bf2:	e4 f3       	brlt	.-8      	; 0x4bec <__mulsf3_pse+0x84>
    4bf4:	98 3e       	cpi	r25, 0xE8	; 232
    4bf6:	d4 f3       	brlt	.-12     	; 0x4bec <__mulsf3_pse+0x84>
    4bf8:	86 95       	lsr	r24
    4bfa:	77 95       	ror	r23
    4bfc:	67 95       	ror	r22
    4bfe:	b7 95       	ror	r27
    4c00:	f7 95       	ror	r31
    4c02:	e7 95       	ror	r30
    4c04:	9f 5f       	subi	r25, 0xFF	; 255
    4c06:	c1 f7       	brne	.-16     	; 0x4bf8 <__mulsf3_pse+0x90>
    4c08:	fe 2b       	or	r31, r30
    4c0a:	88 0f       	add	r24, r24
    4c0c:	91 1d       	adc	r25, r1
    4c0e:	96 95       	lsr	r25
    4c10:	87 95       	ror	r24
    4c12:	97 f9       	bld	r25, 7
    4c14:	08 95       	ret

00004c16 <vfprintf>:
    4c16:	2f 92       	push	r2
    4c18:	3f 92       	push	r3
    4c1a:	4f 92       	push	r4
    4c1c:	5f 92       	push	r5
    4c1e:	6f 92       	push	r6
    4c20:	7f 92       	push	r7
    4c22:	8f 92       	push	r8
    4c24:	9f 92       	push	r9
    4c26:	af 92       	push	r10
    4c28:	bf 92       	push	r11
    4c2a:	cf 92       	push	r12
    4c2c:	df 92       	push	r13
    4c2e:	ef 92       	push	r14
    4c30:	ff 92       	push	r15
    4c32:	0f 93       	push	r16
    4c34:	1f 93       	push	r17
    4c36:	cf 93       	push	r28
    4c38:	df 93       	push	r29
    4c3a:	cd b7       	in	r28, 0x3d	; 61
    4c3c:	de b7       	in	r29, 0x3e	; 62
    4c3e:	60 97       	sbiw	r28, 0x10	; 16
    4c40:	0f b6       	in	r0, 0x3f	; 63
    4c42:	f8 94       	cli
    4c44:	de bf       	out	0x3e, r29	; 62
    4c46:	0f be       	out	0x3f, r0	; 63
    4c48:	cd bf       	out	0x3d, r28	; 61
    4c4a:	7c 01       	movw	r14, r24
    4c4c:	1b 01       	movw	r2, r22
    4c4e:	6a 01       	movw	r12, r20
    4c50:	fc 01       	movw	r30, r24
    4c52:	17 82       	std	Z+7, r1	; 0x07
    4c54:	16 82       	std	Z+6, r1	; 0x06
    4c56:	83 81       	ldd	r24, Z+3	; 0x03
    4c58:	81 ff       	sbrs	r24, 1
    4c5a:	44 c3       	rjmp	.+1672   	; 0x52e4 <vfprintf+0x6ce>
    4c5c:	9e 01       	movw	r18, r28
    4c5e:	2f 5f       	subi	r18, 0xFF	; 255
    4c60:	3f 4f       	sbci	r19, 0xFF	; 255
    4c62:	39 01       	movw	r6, r18
    4c64:	f7 01       	movw	r30, r14
    4c66:	93 81       	ldd	r25, Z+3	; 0x03
    4c68:	f1 01       	movw	r30, r2
    4c6a:	93 fd       	sbrc	r25, 3
    4c6c:	85 91       	lpm	r24, Z+
    4c6e:	93 ff       	sbrs	r25, 3
    4c70:	81 91       	ld	r24, Z+
    4c72:	1f 01       	movw	r2, r30
    4c74:	88 23       	and	r24, r24
    4c76:	09 f4       	brne	.+2      	; 0x4c7a <vfprintf+0x64>
    4c78:	31 c3       	rjmp	.+1634   	; 0x52dc <vfprintf+0x6c6>
    4c7a:	85 32       	cpi	r24, 0x25	; 37
    4c7c:	39 f4       	brne	.+14     	; 0x4c8c <vfprintf+0x76>
    4c7e:	93 fd       	sbrc	r25, 3
    4c80:	85 91       	lpm	r24, Z+
    4c82:	93 ff       	sbrs	r25, 3
    4c84:	81 91       	ld	r24, Z+
    4c86:	1f 01       	movw	r2, r30
    4c88:	85 32       	cpi	r24, 0x25	; 37
    4c8a:	39 f4       	brne	.+14     	; 0x4c9a <vfprintf+0x84>
    4c8c:	b7 01       	movw	r22, r14
    4c8e:	90 e0       	ldi	r25, 0x00	; 0
    4c90:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    4c94:	56 01       	movw	r10, r12
    4c96:	65 01       	movw	r12, r10
    4c98:	e5 cf       	rjmp	.-54     	; 0x4c64 <vfprintf+0x4e>
    4c9a:	10 e0       	ldi	r17, 0x00	; 0
    4c9c:	51 2c       	mov	r5, r1
    4c9e:	91 2c       	mov	r9, r1
    4ca0:	ff e1       	ldi	r31, 0x1F	; 31
    4ca2:	f9 15       	cp	r31, r9
    4ca4:	d8 f0       	brcs	.+54     	; 0x4cdc <vfprintf+0xc6>
    4ca6:	8b 32       	cpi	r24, 0x2B	; 43
    4ca8:	79 f0       	breq	.+30     	; 0x4cc8 <vfprintf+0xb2>
    4caa:	38 f4       	brcc	.+14     	; 0x4cba <vfprintf+0xa4>
    4cac:	80 32       	cpi	r24, 0x20	; 32
    4cae:	79 f0       	breq	.+30     	; 0x4cce <vfprintf+0xb8>
    4cb0:	83 32       	cpi	r24, 0x23	; 35
    4cb2:	a1 f4       	brne	.+40     	; 0x4cdc <vfprintf+0xc6>
    4cb4:	f9 2d       	mov	r31, r9
    4cb6:	f0 61       	ori	r31, 0x10	; 16
    4cb8:	2e c0       	rjmp	.+92     	; 0x4d16 <vfprintf+0x100>
    4cba:	8d 32       	cpi	r24, 0x2D	; 45
    4cbc:	61 f0       	breq	.+24     	; 0x4cd6 <vfprintf+0xc0>
    4cbe:	80 33       	cpi	r24, 0x30	; 48
    4cc0:	69 f4       	brne	.+26     	; 0x4cdc <vfprintf+0xc6>
    4cc2:	29 2d       	mov	r18, r9
    4cc4:	21 60       	ori	r18, 0x01	; 1
    4cc6:	2d c0       	rjmp	.+90     	; 0x4d22 <vfprintf+0x10c>
    4cc8:	39 2d       	mov	r19, r9
    4cca:	32 60       	ori	r19, 0x02	; 2
    4ccc:	93 2e       	mov	r9, r19
    4cce:	89 2d       	mov	r24, r9
    4cd0:	84 60       	ori	r24, 0x04	; 4
    4cd2:	98 2e       	mov	r9, r24
    4cd4:	2a c0       	rjmp	.+84     	; 0x4d2a <vfprintf+0x114>
    4cd6:	e9 2d       	mov	r30, r9
    4cd8:	e8 60       	ori	r30, 0x08	; 8
    4cda:	15 c0       	rjmp	.+42     	; 0x4d06 <vfprintf+0xf0>
    4cdc:	97 fc       	sbrc	r9, 7
    4cde:	2d c0       	rjmp	.+90     	; 0x4d3a <vfprintf+0x124>
    4ce0:	20 ed       	ldi	r18, 0xD0	; 208
    4ce2:	28 0f       	add	r18, r24
    4ce4:	2a 30       	cpi	r18, 0x0A	; 10
    4ce6:	88 f4       	brcc	.+34     	; 0x4d0a <vfprintf+0xf4>
    4ce8:	96 fe       	sbrs	r9, 6
    4cea:	06 c0       	rjmp	.+12     	; 0x4cf8 <vfprintf+0xe2>
    4cec:	3a e0       	ldi	r19, 0x0A	; 10
    4cee:	13 9f       	mul	r17, r19
    4cf0:	20 0d       	add	r18, r0
    4cf2:	11 24       	eor	r1, r1
    4cf4:	12 2f       	mov	r17, r18
    4cf6:	19 c0       	rjmp	.+50     	; 0x4d2a <vfprintf+0x114>
    4cf8:	8a e0       	ldi	r24, 0x0A	; 10
    4cfa:	58 9e       	mul	r5, r24
    4cfc:	20 0d       	add	r18, r0
    4cfe:	11 24       	eor	r1, r1
    4d00:	52 2e       	mov	r5, r18
    4d02:	e9 2d       	mov	r30, r9
    4d04:	e0 62       	ori	r30, 0x20	; 32
    4d06:	9e 2e       	mov	r9, r30
    4d08:	10 c0       	rjmp	.+32     	; 0x4d2a <vfprintf+0x114>
    4d0a:	8e 32       	cpi	r24, 0x2E	; 46
    4d0c:	31 f4       	brne	.+12     	; 0x4d1a <vfprintf+0x104>
    4d0e:	96 fc       	sbrc	r9, 6
    4d10:	e5 c2       	rjmp	.+1482   	; 0x52dc <vfprintf+0x6c6>
    4d12:	f9 2d       	mov	r31, r9
    4d14:	f0 64       	ori	r31, 0x40	; 64
    4d16:	9f 2e       	mov	r9, r31
    4d18:	08 c0       	rjmp	.+16     	; 0x4d2a <vfprintf+0x114>
    4d1a:	8c 36       	cpi	r24, 0x6C	; 108
    4d1c:	21 f4       	brne	.+8      	; 0x4d26 <vfprintf+0x110>
    4d1e:	29 2d       	mov	r18, r9
    4d20:	20 68       	ori	r18, 0x80	; 128
    4d22:	92 2e       	mov	r9, r18
    4d24:	02 c0       	rjmp	.+4      	; 0x4d2a <vfprintf+0x114>
    4d26:	88 36       	cpi	r24, 0x68	; 104
    4d28:	41 f4       	brne	.+16     	; 0x4d3a <vfprintf+0x124>
    4d2a:	f1 01       	movw	r30, r2
    4d2c:	93 fd       	sbrc	r25, 3
    4d2e:	85 91       	lpm	r24, Z+
    4d30:	93 ff       	sbrs	r25, 3
    4d32:	81 91       	ld	r24, Z+
    4d34:	1f 01       	movw	r2, r30
    4d36:	81 11       	cpse	r24, r1
    4d38:	b3 cf       	rjmp	.-154    	; 0x4ca0 <vfprintf+0x8a>
    4d3a:	9b eb       	ldi	r25, 0xBB	; 187
    4d3c:	98 0f       	add	r25, r24
    4d3e:	93 30       	cpi	r25, 0x03	; 3
    4d40:	20 f4       	brcc	.+8      	; 0x4d4a <vfprintf+0x134>
    4d42:	99 2d       	mov	r25, r9
    4d44:	90 61       	ori	r25, 0x10	; 16
    4d46:	80 5e       	subi	r24, 0xE0	; 224
    4d48:	07 c0       	rjmp	.+14     	; 0x4d58 <vfprintf+0x142>
    4d4a:	9b e9       	ldi	r25, 0x9B	; 155
    4d4c:	98 0f       	add	r25, r24
    4d4e:	93 30       	cpi	r25, 0x03	; 3
    4d50:	08 f0       	brcs	.+2      	; 0x4d54 <vfprintf+0x13e>
    4d52:	66 c1       	rjmp	.+716    	; 0x5020 <vfprintf+0x40a>
    4d54:	99 2d       	mov	r25, r9
    4d56:	9f 7e       	andi	r25, 0xEF	; 239
    4d58:	96 ff       	sbrs	r25, 6
    4d5a:	16 e0       	ldi	r17, 0x06	; 6
    4d5c:	9f 73       	andi	r25, 0x3F	; 63
    4d5e:	99 2e       	mov	r9, r25
    4d60:	85 36       	cpi	r24, 0x65	; 101
    4d62:	19 f4       	brne	.+6      	; 0x4d6a <vfprintf+0x154>
    4d64:	90 64       	ori	r25, 0x40	; 64
    4d66:	99 2e       	mov	r9, r25
    4d68:	08 c0       	rjmp	.+16     	; 0x4d7a <vfprintf+0x164>
    4d6a:	86 36       	cpi	r24, 0x66	; 102
    4d6c:	21 f4       	brne	.+8      	; 0x4d76 <vfprintf+0x160>
    4d6e:	39 2f       	mov	r19, r25
    4d70:	30 68       	ori	r19, 0x80	; 128
    4d72:	93 2e       	mov	r9, r19
    4d74:	02 c0       	rjmp	.+4      	; 0x4d7a <vfprintf+0x164>
    4d76:	11 11       	cpse	r17, r1
    4d78:	11 50       	subi	r17, 0x01	; 1
    4d7a:	97 fe       	sbrs	r9, 7
    4d7c:	07 c0       	rjmp	.+14     	; 0x4d8c <vfprintf+0x176>
    4d7e:	1c 33       	cpi	r17, 0x3C	; 60
    4d80:	50 f4       	brcc	.+20     	; 0x4d96 <vfprintf+0x180>
    4d82:	44 24       	eor	r4, r4
    4d84:	43 94       	inc	r4
    4d86:	41 0e       	add	r4, r17
    4d88:	27 e0       	ldi	r18, 0x07	; 7
    4d8a:	0b c0       	rjmp	.+22     	; 0x4da2 <vfprintf+0x18c>
    4d8c:	18 30       	cpi	r17, 0x08	; 8
    4d8e:	38 f0       	brcs	.+14     	; 0x4d9e <vfprintf+0x188>
    4d90:	27 e0       	ldi	r18, 0x07	; 7
    4d92:	17 e0       	ldi	r17, 0x07	; 7
    4d94:	05 c0       	rjmp	.+10     	; 0x4da0 <vfprintf+0x18a>
    4d96:	27 e0       	ldi	r18, 0x07	; 7
    4d98:	9c e3       	ldi	r25, 0x3C	; 60
    4d9a:	49 2e       	mov	r4, r25
    4d9c:	02 c0       	rjmp	.+4      	; 0x4da2 <vfprintf+0x18c>
    4d9e:	21 2f       	mov	r18, r17
    4da0:	41 2c       	mov	r4, r1
    4da2:	56 01       	movw	r10, r12
    4da4:	84 e0       	ldi	r24, 0x04	; 4
    4da6:	a8 0e       	add	r10, r24
    4da8:	b1 1c       	adc	r11, r1
    4daa:	f6 01       	movw	r30, r12
    4dac:	60 81       	ld	r22, Z
    4dae:	71 81       	ldd	r23, Z+1	; 0x01
    4db0:	82 81       	ldd	r24, Z+2	; 0x02
    4db2:	93 81       	ldd	r25, Z+3	; 0x03
    4db4:	04 2d       	mov	r16, r4
    4db6:	a3 01       	movw	r20, r6
    4db8:	0e 94 de 2a 	call	0x55bc	; 0x55bc <__ftoa_engine>
    4dbc:	6c 01       	movw	r12, r24
    4dbe:	f9 81       	ldd	r31, Y+1	; 0x01
    4dc0:	fc 87       	std	Y+12, r31	; 0x0c
    4dc2:	f0 ff       	sbrs	r31, 0
    4dc4:	02 c0       	rjmp	.+4      	; 0x4dca <vfprintf+0x1b4>
    4dc6:	f3 ff       	sbrs	r31, 3
    4dc8:	06 c0       	rjmp	.+12     	; 0x4dd6 <vfprintf+0x1c0>
    4dca:	91 fc       	sbrc	r9, 1
    4dcc:	06 c0       	rjmp	.+12     	; 0x4dda <vfprintf+0x1c4>
    4dce:	92 fe       	sbrs	r9, 2
    4dd0:	06 c0       	rjmp	.+12     	; 0x4dde <vfprintf+0x1c8>
    4dd2:	00 e2       	ldi	r16, 0x20	; 32
    4dd4:	05 c0       	rjmp	.+10     	; 0x4de0 <vfprintf+0x1ca>
    4dd6:	0d e2       	ldi	r16, 0x2D	; 45
    4dd8:	03 c0       	rjmp	.+6      	; 0x4de0 <vfprintf+0x1ca>
    4dda:	0b e2       	ldi	r16, 0x2B	; 43
    4ddc:	01 c0       	rjmp	.+2      	; 0x4de0 <vfprintf+0x1ca>
    4dde:	00 e0       	ldi	r16, 0x00	; 0
    4de0:	8c 85       	ldd	r24, Y+12	; 0x0c
    4de2:	8c 70       	andi	r24, 0x0C	; 12
    4de4:	19 f0       	breq	.+6      	; 0x4dec <vfprintf+0x1d6>
    4de6:	01 11       	cpse	r16, r1
    4de8:	5a c2       	rjmp	.+1204   	; 0x529e <vfprintf+0x688>
    4dea:	9b c2       	rjmp	.+1334   	; 0x5322 <vfprintf+0x70c>
    4dec:	97 fe       	sbrs	r9, 7
    4dee:	10 c0       	rjmp	.+32     	; 0x4e10 <vfprintf+0x1fa>
    4df0:	4c 0c       	add	r4, r12
    4df2:	fc 85       	ldd	r31, Y+12	; 0x0c
    4df4:	f4 ff       	sbrs	r31, 4
    4df6:	04 c0       	rjmp	.+8      	; 0x4e00 <vfprintf+0x1ea>
    4df8:	8a 81       	ldd	r24, Y+2	; 0x02
    4dfa:	81 33       	cpi	r24, 0x31	; 49
    4dfc:	09 f4       	brne	.+2      	; 0x4e00 <vfprintf+0x1ea>
    4dfe:	4a 94       	dec	r4
    4e00:	14 14       	cp	r1, r4
    4e02:	74 f5       	brge	.+92     	; 0x4e60 <vfprintf+0x24a>
    4e04:	28 e0       	ldi	r18, 0x08	; 8
    4e06:	24 15       	cp	r18, r4
    4e08:	78 f5       	brcc	.+94     	; 0x4e68 <vfprintf+0x252>
    4e0a:	88 e0       	ldi	r24, 0x08	; 8
    4e0c:	48 2e       	mov	r4, r24
    4e0e:	2c c0       	rjmp	.+88     	; 0x4e68 <vfprintf+0x252>
    4e10:	96 fc       	sbrc	r9, 6
    4e12:	2a c0       	rjmp	.+84     	; 0x4e68 <vfprintf+0x252>
    4e14:	81 2f       	mov	r24, r17
    4e16:	90 e0       	ldi	r25, 0x00	; 0
    4e18:	8c 15       	cp	r24, r12
    4e1a:	9d 05       	cpc	r25, r13
    4e1c:	9c f0       	brlt	.+38     	; 0x4e44 <vfprintf+0x22e>
    4e1e:	3c ef       	ldi	r19, 0xFC	; 252
    4e20:	c3 16       	cp	r12, r19
    4e22:	3f ef       	ldi	r19, 0xFF	; 255
    4e24:	d3 06       	cpc	r13, r19
    4e26:	74 f0       	brlt	.+28     	; 0x4e44 <vfprintf+0x22e>
    4e28:	89 2d       	mov	r24, r9
    4e2a:	80 68       	ori	r24, 0x80	; 128
    4e2c:	98 2e       	mov	r9, r24
    4e2e:	0a c0       	rjmp	.+20     	; 0x4e44 <vfprintf+0x22e>
    4e30:	e2 e0       	ldi	r30, 0x02	; 2
    4e32:	f0 e0       	ldi	r31, 0x00	; 0
    4e34:	ec 0f       	add	r30, r28
    4e36:	fd 1f       	adc	r31, r29
    4e38:	e1 0f       	add	r30, r17
    4e3a:	f1 1d       	adc	r31, r1
    4e3c:	80 81       	ld	r24, Z
    4e3e:	80 33       	cpi	r24, 0x30	; 48
    4e40:	19 f4       	brne	.+6      	; 0x4e48 <vfprintf+0x232>
    4e42:	11 50       	subi	r17, 0x01	; 1
    4e44:	11 11       	cpse	r17, r1
    4e46:	f4 cf       	rjmp	.-24     	; 0x4e30 <vfprintf+0x21a>
    4e48:	97 fe       	sbrs	r9, 7
    4e4a:	0e c0       	rjmp	.+28     	; 0x4e68 <vfprintf+0x252>
    4e4c:	44 24       	eor	r4, r4
    4e4e:	43 94       	inc	r4
    4e50:	41 0e       	add	r4, r17
    4e52:	81 2f       	mov	r24, r17
    4e54:	90 e0       	ldi	r25, 0x00	; 0
    4e56:	c8 16       	cp	r12, r24
    4e58:	d9 06       	cpc	r13, r25
    4e5a:	2c f4       	brge	.+10     	; 0x4e66 <vfprintf+0x250>
    4e5c:	1c 19       	sub	r17, r12
    4e5e:	04 c0       	rjmp	.+8      	; 0x4e68 <vfprintf+0x252>
    4e60:	44 24       	eor	r4, r4
    4e62:	43 94       	inc	r4
    4e64:	01 c0       	rjmp	.+2      	; 0x4e68 <vfprintf+0x252>
    4e66:	10 e0       	ldi	r17, 0x00	; 0
    4e68:	97 fe       	sbrs	r9, 7
    4e6a:	06 c0       	rjmp	.+12     	; 0x4e78 <vfprintf+0x262>
    4e6c:	1c 14       	cp	r1, r12
    4e6e:	1d 04       	cpc	r1, r13
    4e70:	34 f4       	brge	.+12     	; 0x4e7e <vfprintf+0x268>
    4e72:	c6 01       	movw	r24, r12
    4e74:	01 96       	adiw	r24, 0x01	; 1
    4e76:	05 c0       	rjmp	.+10     	; 0x4e82 <vfprintf+0x26c>
    4e78:	85 e0       	ldi	r24, 0x05	; 5
    4e7a:	90 e0       	ldi	r25, 0x00	; 0
    4e7c:	02 c0       	rjmp	.+4      	; 0x4e82 <vfprintf+0x26c>
    4e7e:	81 e0       	ldi	r24, 0x01	; 1
    4e80:	90 e0       	ldi	r25, 0x00	; 0
    4e82:	01 11       	cpse	r16, r1
    4e84:	01 96       	adiw	r24, 0x01	; 1
    4e86:	11 23       	and	r17, r17
    4e88:	31 f0       	breq	.+12     	; 0x4e96 <vfprintf+0x280>
    4e8a:	21 2f       	mov	r18, r17
    4e8c:	30 e0       	ldi	r19, 0x00	; 0
    4e8e:	2f 5f       	subi	r18, 0xFF	; 255
    4e90:	3f 4f       	sbci	r19, 0xFF	; 255
    4e92:	82 0f       	add	r24, r18
    4e94:	93 1f       	adc	r25, r19
    4e96:	25 2d       	mov	r18, r5
    4e98:	30 e0       	ldi	r19, 0x00	; 0
    4e9a:	82 17       	cp	r24, r18
    4e9c:	93 07       	cpc	r25, r19
    4e9e:	14 f4       	brge	.+4      	; 0x4ea4 <vfprintf+0x28e>
    4ea0:	58 1a       	sub	r5, r24
    4ea2:	01 c0       	rjmp	.+2      	; 0x4ea6 <vfprintf+0x290>
    4ea4:	51 2c       	mov	r5, r1
    4ea6:	89 2d       	mov	r24, r9
    4ea8:	89 70       	andi	r24, 0x09	; 9
    4eaa:	49 f4       	brne	.+18     	; 0x4ebe <vfprintf+0x2a8>
    4eac:	55 20       	and	r5, r5
    4eae:	39 f0       	breq	.+14     	; 0x4ebe <vfprintf+0x2a8>
    4eb0:	b7 01       	movw	r22, r14
    4eb2:	80 e2       	ldi	r24, 0x20	; 32
    4eb4:	90 e0       	ldi	r25, 0x00	; 0
    4eb6:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    4eba:	5a 94       	dec	r5
    4ebc:	f7 cf       	rjmp	.-18     	; 0x4eac <vfprintf+0x296>
    4ebe:	00 23       	and	r16, r16
    4ec0:	29 f0       	breq	.+10     	; 0x4ecc <vfprintf+0x2b6>
    4ec2:	b7 01       	movw	r22, r14
    4ec4:	80 2f       	mov	r24, r16
    4ec6:	90 e0       	ldi	r25, 0x00	; 0
    4ec8:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    4ecc:	93 fc       	sbrc	r9, 3
    4ece:	09 c0       	rjmp	.+18     	; 0x4ee2 <vfprintf+0x2cc>
    4ed0:	55 20       	and	r5, r5
    4ed2:	39 f0       	breq	.+14     	; 0x4ee2 <vfprintf+0x2cc>
    4ed4:	b7 01       	movw	r22, r14
    4ed6:	80 e3       	ldi	r24, 0x30	; 48
    4ed8:	90 e0       	ldi	r25, 0x00	; 0
    4eda:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    4ede:	5a 94       	dec	r5
    4ee0:	f7 cf       	rjmp	.-18     	; 0x4ed0 <vfprintf+0x2ba>
    4ee2:	97 fe       	sbrs	r9, 7
    4ee4:	4c c0       	rjmp	.+152    	; 0x4f7e <vfprintf+0x368>
    4ee6:	46 01       	movw	r8, r12
    4ee8:	d7 fe       	sbrs	r13, 7
    4eea:	02 c0       	rjmp	.+4      	; 0x4ef0 <vfprintf+0x2da>
    4eec:	81 2c       	mov	r8, r1
    4eee:	91 2c       	mov	r9, r1
    4ef0:	c6 01       	movw	r24, r12
    4ef2:	88 19       	sub	r24, r8
    4ef4:	99 09       	sbc	r25, r9
    4ef6:	f3 01       	movw	r30, r6
    4ef8:	e8 0f       	add	r30, r24
    4efa:	f9 1f       	adc	r31, r25
    4efc:	fe 87       	std	Y+14, r31	; 0x0e
    4efe:	ed 87       	std	Y+13, r30	; 0x0d
    4f00:	96 01       	movw	r18, r12
    4f02:	24 19       	sub	r18, r4
    4f04:	31 09       	sbc	r19, r1
    4f06:	38 8b       	std	Y+16, r19	; 0x10
    4f08:	2f 87       	std	Y+15, r18	; 0x0f
    4f0a:	01 2f       	mov	r16, r17
    4f0c:	10 e0       	ldi	r17, 0x00	; 0
    4f0e:	11 95       	neg	r17
    4f10:	01 95       	neg	r16
    4f12:	11 09       	sbc	r17, r1
    4f14:	3f ef       	ldi	r19, 0xFF	; 255
    4f16:	83 16       	cp	r8, r19
    4f18:	93 06       	cpc	r9, r19
    4f1a:	29 f4       	brne	.+10     	; 0x4f26 <vfprintf+0x310>
    4f1c:	b7 01       	movw	r22, r14
    4f1e:	8e e2       	ldi	r24, 0x2E	; 46
    4f20:	90 e0       	ldi	r25, 0x00	; 0
    4f22:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    4f26:	c8 14       	cp	r12, r8
    4f28:	d9 04       	cpc	r13, r9
    4f2a:	4c f0       	brlt	.+18     	; 0x4f3e <vfprintf+0x328>
    4f2c:	8f 85       	ldd	r24, Y+15	; 0x0f
    4f2e:	98 89       	ldd	r25, Y+16	; 0x10
    4f30:	88 15       	cp	r24, r8
    4f32:	99 05       	cpc	r25, r9
    4f34:	24 f4       	brge	.+8      	; 0x4f3e <vfprintf+0x328>
    4f36:	ed 85       	ldd	r30, Y+13	; 0x0d
    4f38:	fe 85       	ldd	r31, Y+14	; 0x0e
    4f3a:	81 81       	ldd	r24, Z+1	; 0x01
    4f3c:	01 c0       	rjmp	.+2      	; 0x4f40 <vfprintf+0x32a>
    4f3e:	80 e3       	ldi	r24, 0x30	; 48
    4f40:	f1 e0       	ldi	r31, 0x01	; 1
    4f42:	8f 1a       	sub	r8, r31
    4f44:	91 08       	sbc	r9, r1
    4f46:	2d 85       	ldd	r18, Y+13	; 0x0d
    4f48:	3e 85       	ldd	r19, Y+14	; 0x0e
    4f4a:	2f 5f       	subi	r18, 0xFF	; 255
    4f4c:	3f 4f       	sbci	r19, 0xFF	; 255
    4f4e:	3e 87       	std	Y+14, r19	; 0x0e
    4f50:	2d 87       	std	Y+13, r18	; 0x0d
    4f52:	80 16       	cp	r8, r16
    4f54:	91 06       	cpc	r9, r17
    4f56:	2c f0       	brlt	.+10     	; 0x4f62 <vfprintf+0x34c>
    4f58:	b7 01       	movw	r22, r14
    4f5a:	90 e0       	ldi	r25, 0x00	; 0
    4f5c:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    4f60:	d9 cf       	rjmp	.-78     	; 0x4f14 <vfprintf+0x2fe>
    4f62:	c8 14       	cp	r12, r8
    4f64:	d9 04       	cpc	r13, r9
    4f66:	41 f4       	brne	.+16     	; 0x4f78 <vfprintf+0x362>
    4f68:	9a 81       	ldd	r25, Y+2	; 0x02
    4f6a:	96 33       	cpi	r25, 0x36	; 54
    4f6c:	20 f4       	brcc	.+8      	; 0x4f76 <vfprintf+0x360>
    4f6e:	95 33       	cpi	r25, 0x35	; 53
    4f70:	19 f4       	brne	.+6      	; 0x4f78 <vfprintf+0x362>
    4f72:	3c 85       	ldd	r19, Y+12	; 0x0c
    4f74:	34 ff       	sbrs	r19, 4
    4f76:	81 e3       	ldi	r24, 0x31	; 49
    4f78:	b7 01       	movw	r22, r14
    4f7a:	90 e0       	ldi	r25, 0x00	; 0
    4f7c:	4e c0       	rjmp	.+156    	; 0x501a <vfprintf+0x404>
    4f7e:	8a 81       	ldd	r24, Y+2	; 0x02
    4f80:	81 33       	cpi	r24, 0x31	; 49
    4f82:	19 f0       	breq	.+6      	; 0x4f8a <vfprintf+0x374>
    4f84:	9c 85       	ldd	r25, Y+12	; 0x0c
    4f86:	9f 7e       	andi	r25, 0xEF	; 239
    4f88:	9c 87       	std	Y+12, r25	; 0x0c
    4f8a:	b7 01       	movw	r22, r14
    4f8c:	90 e0       	ldi	r25, 0x00	; 0
    4f8e:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    4f92:	11 11       	cpse	r17, r1
    4f94:	05 c0       	rjmp	.+10     	; 0x4fa0 <vfprintf+0x38a>
    4f96:	94 fc       	sbrc	r9, 4
    4f98:	18 c0       	rjmp	.+48     	; 0x4fca <vfprintf+0x3b4>
    4f9a:	85 e6       	ldi	r24, 0x65	; 101
    4f9c:	90 e0       	ldi	r25, 0x00	; 0
    4f9e:	17 c0       	rjmp	.+46     	; 0x4fce <vfprintf+0x3b8>
    4fa0:	b7 01       	movw	r22, r14
    4fa2:	8e e2       	ldi	r24, 0x2E	; 46
    4fa4:	90 e0       	ldi	r25, 0x00	; 0
    4fa6:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    4faa:	1e 5f       	subi	r17, 0xFE	; 254
    4fac:	82 e0       	ldi	r24, 0x02	; 2
    4fae:	01 e0       	ldi	r16, 0x01	; 1
    4fb0:	08 0f       	add	r16, r24
    4fb2:	f3 01       	movw	r30, r6
    4fb4:	e8 0f       	add	r30, r24
    4fb6:	f1 1d       	adc	r31, r1
    4fb8:	80 81       	ld	r24, Z
    4fba:	b7 01       	movw	r22, r14
    4fbc:	90 e0       	ldi	r25, 0x00	; 0
    4fbe:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    4fc2:	80 2f       	mov	r24, r16
    4fc4:	01 13       	cpse	r16, r17
    4fc6:	f3 cf       	rjmp	.-26     	; 0x4fae <vfprintf+0x398>
    4fc8:	e6 cf       	rjmp	.-52     	; 0x4f96 <vfprintf+0x380>
    4fca:	85 e4       	ldi	r24, 0x45	; 69
    4fcc:	90 e0       	ldi	r25, 0x00	; 0
    4fce:	b7 01       	movw	r22, r14
    4fd0:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    4fd4:	d7 fc       	sbrc	r13, 7
    4fd6:	06 c0       	rjmp	.+12     	; 0x4fe4 <vfprintf+0x3ce>
    4fd8:	c1 14       	cp	r12, r1
    4fda:	d1 04       	cpc	r13, r1
    4fdc:	41 f4       	brne	.+16     	; 0x4fee <vfprintf+0x3d8>
    4fde:	ec 85       	ldd	r30, Y+12	; 0x0c
    4fe0:	e4 ff       	sbrs	r30, 4
    4fe2:	05 c0       	rjmp	.+10     	; 0x4fee <vfprintf+0x3d8>
    4fe4:	d1 94       	neg	r13
    4fe6:	c1 94       	neg	r12
    4fe8:	d1 08       	sbc	r13, r1
    4fea:	8d e2       	ldi	r24, 0x2D	; 45
    4fec:	01 c0       	rjmp	.+2      	; 0x4ff0 <vfprintf+0x3da>
    4fee:	8b e2       	ldi	r24, 0x2B	; 43
    4ff0:	b7 01       	movw	r22, r14
    4ff2:	90 e0       	ldi	r25, 0x00	; 0
    4ff4:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    4ff8:	80 e3       	ldi	r24, 0x30	; 48
    4ffa:	2a e0       	ldi	r18, 0x0A	; 10
    4ffc:	c2 16       	cp	r12, r18
    4ffe:	d1 04       	cpc	r13, r1
    5000:	2c f0       	brlt	.+10     	; 0x500c <vfprintf+0x3f6>
    5002:	8f 5f       	subi	r24, 0xFF	; 255
    5004:	fa e0       	ldi	r31, 0x0A	; 10
    5006:	cf 1a       	sub	r12, r31
    5008:	d1 08       	sbc	r13, r1
    500a:	f7 cf       	rjmp	.-18     	; 0x4ffa <vfprintf+0x3e4>
    500c:	b7 01       	movw	r22, r14
    500e:	90 e0       	ldi	r25, 0x00	; 0
    5010:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    5014:	b7 01       	movw	r22, r14
    5016:	c6 01       	movw	r24, r12
    5018:	c0 96       	adiw	r24, 0x30	; 48
    501a:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    501e:	54 c1       	rjmp	.+680    	; 0x52c8 <vfprintf+0x6b2>
    5020:	83 36       	cpi	r24, 0x63	; 99
    5022:	31 f0       	breq	.+12     	; 0x5030 <vfprintf+0x41a>
    5024:	83 37       	cpi	r24, 0x73	; 115
    5026:	79 f0       	breq	.+30     	; 0x5046 <vfprintf+0x430>
    5028:	83 35       	cpi	r24, 0x53	; 83
    502a:	09 f0       	breq	.+2      	; 0x502e <vfprintf+0x418>
    502c:	56 c0       	rjmp	.+172    	; 0x50da <vfprintf+0x4c4>
    502e:	20 c0       	rjmp	.+64     	; 0x5070 <vfprintf+0x45a>
    5030:	56 01       	movw	r10, r12
    5032:	32 e0       	ldi	r19, 0x02	; 2
    5034:	a3 0e       	add	r10, r19
    5036:	b1 1c       	adc	r11, r1
    5038:	f6 01       	movw	r30, r12
    503a:	80 81       	ld	r24, Z
    503c:	89 83       	std	Y+1, r24	; 0x01
    503e:	01 e0       	ldi	r16, 0x01	; 1
    5040:	10 e0       	ldi	r17, 0x00	; 0
    5042:	63 01       	movw	r12, r6
    5044:	12 c0       	rjmp	.+36     	; 0x506a <vfprintf+0x454>
    5046:	56 01       	movw	r10, r12
    5048:	f2 e0       	ldi	r31, 0x02	; 2
    504a:	af 0e       	add	r10, r31
    504c:	b1 1c       	adc	r11, r1
    504e:	f6 01       	movw	r30, r12
    5050:	c0 80       	ld	r12, Z
    5052:	d1 80       	ldd	r13, Z+1	; 0x01
    5054:	96 fe       	sbrs	r9, 6
    5056:	03 c0       	rjmp	.+6      	; 0x505e <vfprintf+0x448>
    5058:	61 2f       	mov	r22, r17
    505a:	70 e0       	ldi	r23, 0x00	; 0
    505c:	02 c0       	rjmp	.+4      	; 0x5062 <vfprintf+0x44c>
    505e:	6f ef       	ldi	r22, 0xFF	; 255
    5060:	7f ef       	ldi	r23, 0xFF	; 255
    5062:	c6 01       	movw	r24, r12
    5064:	0e 94 dc 2b 	call	0x57b8	; 0x57b8 <strnlen>
    5068:	8c 01       	movw	r16, r24
    506a:	f9 2d       	mov	r31, r9
    506c:	ff 77       	andi	r31, 0x7F	; 127
    506e:	14 c0       	rjmp	.+40     	; 0x5098 <vfprintf+0x482>
    5070:	56 01       	movw	r10, r12
    5072:	22 e0       	ldi	r18, 0x02	; 2
    5074:	a2 0e       	add	r10, r18
    5076:	b1 1c       	adc	r11, r1
    5078:	f6 01       	movw	r30, r12
    507a:	c0 80       	ld	r12, Z
    507c:	d1 80       	ldd	r13, Z+1	; 0x01
    507e:	96 fe       	sbrs	r9, 6
    5080:	03 c0       	rjmp	.+6      	; 0x5088 <vfprintf+0x472>
    5082:	61 2f       	mov	r22, r17
    5084:	70 e0       	ldi	r23, 0x00	; 0
    5086:	02 c0       	rjmp	.+4      	; 0x508c <vfprintf+0x476>
    5088:	6f ef       	ldi	r22, 0xFF	; 255
    508a:	7f ef       	ldi	r23, 0xFF	; 255
    508c:	c6 01       	movw	r24, r12
    508e:	0e 94 bd 2b 	call	0x577a	; 0x577a <strnlen_P>
    5092:	8c 01       	movw	r16, r24
    5094:	f9 2d       	mov	r31, r9
    5096:	f0 68       	ori	r31, 0x80	; 128
    5098:	9f 2e       	mov	r9, r31
    509a:	f3 fd       	sbrc	r31, 3
    509c:	1a c0       	rjmp	.+52     	; 0x50d2 <vfprintf+0x4bc>
    509e:	85 2d       	mov	r24, r5
    50a0:	90 e0       	ldi	r25, 0x00	; 0
    50a2:	08 17       	cp	r16, r24
    50a4:	19 07       	cpc	r17, r25
    50a6:	a8 f4       	brcc	.+42     	; 0x50d2 <vfprintf+0x4bc>
    50a8:	b7 01       	movw	r22, r14
    50aa:	80 e2       	ldi	r24, 0x20	; 32
    50ac:	90 e0       	ldi	r25, 0x00	; 0
    50ae:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    50b2:	5a 94       	dec	r5
    50b4:	f4 cf       	rjmp	.-24     	; 0x509e <vfprintf+0x488>
    50b6:	f6 01       	movw	r30, r12
    50b8:	97 fc       	sbrc	r9, 7
    50ba:	85 91       	lpm	r24, Z+
    50bc:	97 fe       	sbrs	r9, 7
    50be:	81 91       	ld	r24, Z+
    50c0:	6f 01       	movw	r12, r30
    50c2:	b7 01       	movw	r22, r14
    50c4:	90 e0       	ldi	r25, 0x00	; 0
    50c6:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    50ca:	51 10       	cpse	r5, r1
    50cc:	5a 94       	dec	r5
    50ce:	01 50       	subi	r16, 0x01	; 1
    50d0:	11 09       	sbc	r17, r1
    50d2:	01 15       	cp	r16, r1
    50d4:	11 05       	cpc	r17, r1
    50d6:	79 f7       	brne	.-34     	; 0x50b6 <vfprintf+0x4a0>
    50d8:	f7 c0       	rjmp	.+494    	; 0x52c8 <vfprintf+0x6b2>
    50da:	84 36       	cpi	r24, 0x64	; 100
    50dc:	11 f0       	breq	.+4      	; 0x50e2 <vfprintf+0x4cc>
    50de:	89 36       	cpi	r24, 0x69	; 105
    50e0:	61 f5       	brne	.+88     	; 0x513a <vfprintf+0x524>
    50e2:	56 01       	movw	r10, r12
    50e4:	97 fe       	sbrs	r9, 7
    50e6:	09 c0       	rjmp	.+18     	; 0x50fa <vfprintf+0x4e4>
    50e8:	24 e0       	ldi	r18, 0x04	; 4
    50ea:	a2 0e       	add	r10, r18
    50ec:	b1 1c       	adc	r11, r1
    50ee:	f6 01       	movw	r30, r12
    50f0:	60 81       	ld	r22, Z
    50f2:	71 81       	ldd	r23, Z+1	; 0x01
    50f4:	82 81       	ldd	r24, Z+2	; 0x02
    50f6:	93 81       	ldd	r25, Z+3	; 0x03
    50f8:	0a c0       	rjmp	.+20     	; 0x510e <vfprintf+0x4f8>
    50fa:	f2 e0       	ldi	r31, 0x02	; 2
    50fc:	af 0e       	add	r10, r31
    50fe:	b1 1c       	adc	r11, r1
    5100:	f6 01       	movw	r30, r12
    5102:	60 81       	ld	r22, Z
    5104:	71 81       	ldd	r23, Z+1	; 0x01
    5106:	07 2e       	mov	r0, r23
    5108:	00 0c       	add	r0, r0
    510a:	88 0b       	sbc	r24, r24
    510c:	99 0b       	sbc	r25, r25
    510e:	f9 2d       	mov	r31, r9
    5110:	ff 76       	andi	r31, 0x6F	; 111
    5112:	9f 2e       	mov	r9, r31
    5114:	97 ff       	sbrs	r25, 7
    5116:	09 c0       	rjmp	.+18     	; 0x512a <vfprintf+0x514>
    5118:	90 95       	com	r25
    511a:	80 95       	com	r24
    511c:	70 95       	com	r23
    511e:	61 95       	neg	r22
    5120:	7f 4f       	sbci	r23, 0xFF	; 255
    5122:	8f 4f       	sbci	r24, 0xFF	; 255
    5124:	9f 4f       	sbci	r25, 0xFF	; 255
    5126:	f0 68       	ori	r31, 0x80	; 128
    5128:	9f 2e       	mov	r9, r31
    512a:	2a e0       	ldi	r18, 0x0A	; 10
    512c:	30 e0       	ldi	r19, 0x00	; 0
    512e:	a3 01       	movw	r20, r6
    5130:	0e 94 ed 2c 	call	0x59da	; 0x59da <__ultoa_invert>
    5134:	c8 2e       	mov	r12, r24
    5136:	c6 18       	sub	r12, r6
    5138:	3f c0       	rjmp	.+126    	; 0x51b8 <vfprintf+0x5a2>
    513a:	09 2d       	mov	r16, r9
    513c:	85 37       	cpi	r24, 0x75	; 117
    513e:	21 f4       	brne	.+8      	; 0x5148 <vfprintf+0x532>
    5140:	0f 7e       	andi	r16, 0xEF	; 239
    5142:	2a e0       	ldi	r18, 0x0A	; 10
    5144:	30 e0       	ldi	r19, 0x00	; 0
    5146:	1d c0       	rjmp	.+58     	; 0x5182 <vfprintf+0x56c>
    5148:	09 7f       	andi	r16, 0xF9	; 249
    514a:	8f 36       	cpi	r24, 0x6F	; 111
    514c:	91 f0       	breq	.+36     	; 0x5172 <vfprintf+0x55c>
    514e:	18 f4       	brcc	.+6      	; 0x5156 <vfprintf+0x540>
    5150:	88 35       	cpi	r24, 0x58	; 88
    5152:	59 f0       	breq	.+22     	; 0x516a <vfprintf+0x554>
    5154:	c3 c0       	rjmp	.+390    	; 0x52dc <vfprintf+0x6c6>
    5156:	80 37       	cpi	r24, 0x70	; 112
    5158:	19 f0       	breq	.+6      	; 0x5160 <vfprintf+0x54a>
    515a:	88 37       	cpi	r24, 0x78	; 120
    515c:	11 f0       	breq	.+4      	; 0x5162 <vfprintf+0x54c>
    515e:	be c0       	rjmp	.+380    	; 0x52dc <vfprintf+0x6c6>
    5160:	00 61       	ori	r16, 0x10	; 16
    5162:	04 ff       	sbrs	r16, 4
    5164:	09 c0       	rjmp	.+18     	; 0x5178 <vfprintf+0x562>
    5166:	04 60       	ori	r16, 0x04	; 4
    5168:	07 c0       	rjmp	.+14     	; 0x5178 <vfprintf+0x562>
    516a:	94 fe       	sbrs	r9, 4
    516c:	08 c0       	rjmp	.+16     	; 0x517e <vfprintf+0x568>
    516e:	06 60       	ori	r16, 0x06	; 6
    5170:	06 c0       	rjmp	.+12     	; 0x517e <vfprintf+0x568>
    5172:	28 e0       	ldi	r18, 0x08	; 8
    5174:	30 e0       	ldi	r19, 0x00	; 0
    5176:	05 c0       	rjmp	.+10     	; 0x5182 <vfprintf+0x56c>
    5178:	20 e1       	ldi	r18, 0x10	; 16
    517a:	30 e0       	ldi	r19, 0x00	; 0
    517c:	02 c0       	rjmp	.+4      	; 0x5182 <vfprintf+0x56c>
    517e:	20 e1       	ldi	r18, 0x10	; 16
    5180:	32 e0       	ldi	r19, 0x02	; 2
    5182:	56 01       	movw	r10, r12
    5184:	07 ff       	sbrs	r16, 7
    5186:	09 c0       	rjmp	.+18     	; 0x519a <vfprintf+0x584>
    5188:	84 e0       	ldi	r24, 0x04	; 4
    518a:	a8 0e       	add	r10, r24
    518c:	b1 1c       	adc	r11, r1
    518e:	f6 01       	movw	r30, r12
    5190:	60 81       	ld	r22, Z
    5192:	71 81       	ldd	r23, Z+1	; 0x01
    5194:	82 81       	ldd	r24, Z+2	; 0x02
    5196:	93 81       	ldd	r25, Z+3	; 0x03
    5198:	08 c0       	rjmp	.+16     	; 0x51aa <vfprintf+0x594>
    519a:	f2 e0       	ldi	r31, 0x02	; 2
    519c:	af 0e       	add	r10, r31
    519e:	b1 1c       	adc	r11, r1
    51a0:	f6 01       	movw	r30, r12
    51a2:	60 81       	ld	r22, Z
    51a4:	71 81       	ldd	r23, Z+1	; 0x01
    51a6:	80 e0       	ldi	r24, 0x00	; 0
    51a8:	90 e0       	ldi	r25, 0x00	; 0
    51aa:	a3 01       	movw	r20, r6
    51ac:	0e 94 ed 2c 	call	0x59da	; 0x59da <__ultoa_invert>
    51b0:	c8 2e       	mov	r12, r24
    51b2:	c6 18       	sub	r12, r6
    51b4:	0f 77       	andi	r16, 0x7F	; 127
    51b6:	90 2e       	mov	r9, r16
    51b8:	96 fe       	sbrs	r9, 6
    51ba:	0b c0       	rjmp	.+22     	; 0x51d2 <vfprintf+0x5bc>
    51bc:	09 2d       	mov	r16, r9
    51be:	0e 7f       	andi	r16, 0xFE	; 254
    51c0:	c1 16       	cp	r12, r17
    51c2:	50 f4       	brcc	.+20     	; 0x51d8 <vfprintf+0x5c2>
    51c4:	94 fe       	sbrs	r9, 4
    51c6:	0a c0       	rjmp	.+20     	; 0x51dc <vfprintf+0x5c6>
    51c8:	92 fc       	sbrc	r9, 2
    51ca:	08 c0       	rjmp	.+16     	; 0x51dc <vfprintf+0x5c6>
    51cc:	09 2d       	mov	r16, r9
    51ce:	0e 7e       	andi	r16, 0xEE	; 238
    51d0:	05 c0       	rjmp	.+10     	; 0x51dc <vfprintf+0x5c6>
    51d2:	dc 2c       	mov	r13, r12
    51d4:	09 2d       	mov	r16, r9
    51d6:	03 c0       	rjmp	.+6      	; 0x51de <vfprintf+0x5c8>
    51d8:	dc 2c       	mov	r13, r12
    51da:	01 c0       	rjmp	.+2      	; 0x51de <vfprintf+0x5c8>
    51dc:	d1 2e       	mov	r13, r17
    51de:	04 ff       	sbrs	r16, 4
    51e0:	0d c0       	rjmp	.+26     	; 0x51fc <vfprintf+0x5e6>
    51e2:	fe 01       	movw	r30, r28
    51e4:	ec 0d       	add	r30, r12
    51e6:	f1 1d       	adc	r31, r1
    51e8:	80 81       	ld	r24, Z
    51ea:	80 33       	cpi	r24, 0x30	; 48
    51ec:	11 f4       	brne	.+4      	; 0x51f2 <vfprintf+0x5dc>
    51ee:	09 7e       	andi	r16, 0xE9	; 233
    51f0:	09 c0       	rjmp	.+18     	; 0x5204 <vfprintf+0x5ee>
    51f2:	02 ff       	sbrs	r16, 2
    51f4:	06 c0       	rjmp	.+12     	; 0x5202 <vfprintf+0x5ec>
    51f6:	d3 94       	inc	r13
    51f8:	d3 94       	inc	r13
    51fa:	04 c0       	rjmp	.+8      	; 0x5204 <vfprintf+0x5ee>
    51fc:	80 2f       	mov	r24, r16
    51fe:	86 78       	andi	r24, 0x86	; 134
    5200:	09 f0       	breq	.+2      	; 0x5204 <vfprintf+0x5ee>
    5202:	d3 94       	inc	r13
    5204:	03 fd       	sbrc	r16, 3
    5206:	11 c0       	rjmp	.+34     	; 0x522a <vfprintf+0x614>
    5208:	00 ff       	sbrs	r16, 0
    520a:	06 c0       	rjmp	.+12     	; 0x5218 <vfprintf+0x602>
    520c:	1c 2d       	mov	r17, r12
    520e:	d5 14       	cp	r13, r5
    5210:	80 f4       	brcc	.+32     	; 0x5232 <vfprintf+0x61c>
    5212:	15 0d       	add	r17, r5
    5214:	1d 19       	sub	r17, r13
    5216:	0d c0       	rjmp	.+26     	; 0x5232 <vfprintf+0x61c>
    5218:	d5 14       	cp	r13, r5
    521a:	58 f4       	brcc	.+22     	; 0x5232 <vfprintf+0x61c>
    521c:	b7 01       	movw	r22, r14
    521e:	80 e2       	ldi	r24, 0x20	; 32
    5220:	90 e0       	ldi	r25, 0x00	; 0
    5222:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    5226:	d3 94       	inc	r13
    5228:	f7 cf       	rjmp	.-18     	; 0x5218 <vfprintf+0x602>
    522a:	d5 14       	cp	r13, r5
    522c:	10 f4       	brcc	.+4      	; 0x5232 <vfprintf+0x61c>
    522e:	5d 18       	sub	r5, r13
    5230:	01 c0       	rjmp	.+2      	; 0x5234 <vfprintf+0x61e>
    5232:	51 2c       	mov	r5, r1
    5234:	04 ff       	sbrs	r16, 4
    5236:	10 c0       	rjmp	.+32     	; 0x5258 <vfprintf+0x642>
    5238:	b7 01       	movw	r22, r14
    523a:	80 e3       	ldi	r24, 0x30	; 48
    523c:	90 e0       	ldi	r25, 0x00	; 0
    523e:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    5242:	02 ff       	sbrs	r16, 2
    5244:	17 c0       	rjmp	.+46     	; 0x5274 <vfprintf+0x65e>
    5246:	01 fd       	sbrc	r16, 1
    5248:	03 c0       	rjmp	.+6      	; 0x5250 <vfprintf+0x63a>
    524a:	88 e7       	ldi	r24, 0x78	; 120
    524c:	90 e0       	ldi	r25, 0x00	; 0
    524e:	02 c0       	rjmp	.+4      	; 0x5254 <vfprintf+0x63e>
    5250:	88 e5       	ldi	r24, 0x58	; 88
    5252:	90 e0       	ldi	r25, 0x00	; 0
    5254:	b7 01       	movw	r22, r14
    5256:	0c c0       	rjmp	.+24     	; 0x5270 <vfprintf+0x65a>
    5258:	80 2f       	mov	r24, r16
    525a:	86 78       	andi	r24, 0x86	; 134
    525c:	59 f0       	breq	.+22     	; 0x5274 <vfprintf+0x65e>
    525e:	01 ff       	sbrs	r16, 1
    5260:	02 c0       	rjmp	.+4      	; 0x5266 <vfprintf+0x650>
    5262:	8b e2       	ldi	r24, 0x2B	; 43
    5264:	01 c0       	rjmp	.+2      	; 0x5268 <vfprintf+0x652>
    5266:	80 e2       	ldi	r24, 0x20	; 32
    5268:	07 fd       	sbrc	r16, 7
    526a:	8d e2       	ldi	r24, 0x2D	; 45
    526c:	b7 01       	movw	r22, r14
    526e:	90 e0       	ldi	r25, 0x00	; 0
    5270:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    5274:	c1 16       	cp	r12, r17
    5276:	38 f4       	brcc	.+14     	; 0x5286 <vfprintf+0x670>
    5278:	b7 01       	movw	r22, r14
    527a:	80 e3       	ldi	r24, 0x30	; 48
    527c:	90 e0       	ldi	r25, 0x00	; 0
    527e:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    5282:	11 50       	subi	r17, 0x01	; 1
    5284:	f7 cf       	rjmp	.-18     	; 0x5274 <vfprintf+0x65e>
    5286:	ca 94       	dec	r12
    5288:	f3 01       	movw	r30, r6
    528a:	ec 0d       	add	r30, r12
    528c:	f1 1d       	adc	r31, r1
    528e:	80 81       	ld	r24, Z
    5290:	b7 01       	movw	r22, r14
    5292:	90 e0       	ldi	r25, 0x00	; 0
    5294:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    5298:	c1 10       	cpse	r12, r1
    529a:	f5 cf       	rjmp	.-22     	; 0x5286 <vfprintf+0x670>
    529c:	15 c0       	rjmp	.+42     	; 0x52c8 <vfprintf+0x6b2>
    529e:	f4 e0       	ldi	r31, 0x04	; 4
    52a0:	f5 15       	cp	r31, r5
    52a2:	60 f5       	brcc	.+88     	; 0x52fc <vfprintf+0x6e6>
    52a4:	84 e0       	ldi	r24, 0x04	; 4
    52a6:	58 1a       	sub	r5, r24
    52a8:	93 fe       	sbrs	r9, 3
    52aa:	1f c0       	rjmp	.+62     	; 0x52ea <vfprintf+0x6d4>
    52ac:	01 11       	cpse	r16, r1
    52ae:	27 c0       	rjmp	.+78     	; 0x52fe <vfprintf+0x6e8>
    52b0:	2c 85       	ldd	r18, Y+12	; 0x0c
    52b2:	23 ff       	sbrs	r18, 3
    52b4:	2a c0       	rjmp	.+84     	; 0x530a <vfprintf+0x6f4>
    52b6:	0c e8       	ldi	r16, 0x8C	; 140
    52b8:	10 e0       	ldi	r17, 0x00	; 0
    52ba:	39 2d       	mov	r19, r9
    52bc:	30 71       	andi	r19, 0x10	; 16
    52be:	93 2e       	mov	r9, r19
    52c0:	f8 01       	movw	r30, r16
    52c2:	84 91       	lpm	r24, Z
    52c4:	81 11       	cpse	r24, r1
    52c6:	24 c0       	rjmp	.+72     	; 0x5310 <vfprintf+0x6fa>
    52c8:	55 20       	and	r5, r5
    52ca:	09 f4       	brne	.+2      	; 0x52ce <vfprintf+0x6b8>
    52cc:	e4 cc       	rjmp	.-1592   	; 0x4c96 <vfprintf+0x80>
    52ce:	b7 01       	movw	r22, r14
    52d0:	80 e2       	ldi	r24, 0x20	; 32
    52d2:	90 e0       	ldi	r25, 0x00	; 0
    52d4:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    52d8:	5a 94       	dec	r5
    52da:	f6 cf       	rjmp	.-20     	; 0x52c8 <vfprintf+0x6b2>
    52dc:	f7 01       	movw	r30, r14
    52de:	86 81       	ldd	r24, Z+6	; 0x06
    52e0:	97 81       	ldd	r25, Z+7	; 0x07
    52e2:	26 c0       	rjmp	.+76     	; 0x5330 <vfprintf+0x71a>
    52e4:	8f ef       	ldi	r24, 0xFF	; 255
    52e6:	9f ef       	ldi	r25, 0xFF	; 255
    52e8:	23 c0       	rjmp	.+70     	; 0x5330 <vfprintf+0x71a>
    52ea:	b7 01       	movw	r22, r14
    52ec:	80 e2       	ldi	r24, 0x20	; 32
    52ee:	90 e0       	ldi	r25, 0x00	; 0
    52f0:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    52f4:	5a 94       	dec	r5
    52f6:	51 10       	cpse	r5, r1
    52f8:	f8 cf       	rjmp	.-16     	; 0x52ea <vfprintf+0x6d4>
    52fa:	d8 cf       	rjmp	.-80     	; 0x52ac <vfprintf+0x696>
    52fc:	51 2c       	mov	r5, r1
    52fe:	b7 01       	movw	r22, r14
    5300:	80 2f       	mov	r24, r16
    5302:	90 e0       	ldi	r25, 0x00	; 0
    5304:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    5308:	d3 cf       	rjmp	.-90     	; 0x52b0 <vfprintf+0x69a>
    530a:	00 e9       	ldi	r16, 0x90	; 144
    530c:	10 e0       	ldi	r17, 0x00	; 0
    530e:	d5 cf       	rjmp	.-86     	; 0x52ba <vfprintf+0x6a4>
    5310:	91 10       	cpse	r9, r1
    5312:	80 52       	subi	r24, 0x20	; 32
    5314:	b7 01       	movw	r22, r14
    5316:	90 e0       	ldi	r25, 0x00	; 0
    5318:	0e 94 0e 2c 	call	0x581c	; 0x581c <fputc>
    531c:	0f 5f       	subi	r16, 0xFF	; 255
    531e:	1f 4f       	sbci	r17, 0xFF	; 255
    5320:	cf cf       	rjmp	.-98     	; 0x52c0 <vfprintf+0x6aa>
    5322:	23 e0       	ldi	r18, 0x03	; 3
    5324:	25 15       	cp	r18, r5
    5326:	10 f4       	brcc	.+4      	; 0x532c <vfprintf+0x716>
    5328:	83 e0       	ldi	r24, 0x03	; 3
    532a:	bd cf       	rjmp	.-134    	; 0x52a6 <vfprintf+0x690>
    532c:	51 2c       	mov	r5, r1
    532e:	c0 cf       	rjmp	.-128    	; 0x52b0 <vfprintf+0x69a>
    5330:	60 96       	adiw	r28, 0x10	; 16
    5332:	0f b6       	in	r0, 0x3f	; 63
    5334:	f8 94       	cli
    5336:	de bf       	out	0x3e, r29	; 62
    5338:	0f be       	out	0x3f, r0	; 63
    533a:	cd bf       	out	0x3d, r28	; 61
    533c:	df 91       	pop	r29
    533e:	cf 91       	pop	r28
    5340:	1f 91       	pop	r17
    5342:	0f 91       	pop	r16
    5344:	ff 90       	pop	r15
    5346:	ef 90       	pop	r14
    5348:	df 90       	pop	r13
    534a:	cf 90       	pop	r12
    534c:	bf 90       	pop	r11
    534e:	af 90       	pop	r10
    5350:	9f 90       	pop	r9
    5352:	8f 90       	pop	r8
    5354:	7f 90       	pop	r7
    5356:	6f 90       	pop	r6
    5358:	5f 90       	pop	r5
    535a:	4f 90       	pop	r4
    535c:	3f 90       	pop	r3
    535e:	2f 90       	pop	r2
    5360:	08 95       	ret

00005362 <__adddi3_s8>:
    5362:	00 24       	eor	r0, r0
    5364:	a7 fd       	sbrc	r26, 7
    5366:	00 94       	com	r0
    5368:	2a 0f       	add	r18, r26
    536a:	30 1d       	adc	r19, r0
    536c:	40 1d       	adc	r20, r0
    536e:	50 1d       	adc	r21, r0
    5370:	60 1d       	adc	r22, r0
    5372:	70 1d       	adc	r23, r0
    5374:	80 1d       	adc	r24, r0
    5376:	90 1d       	adc	r25, r0
    5378:	08 95       	ret

0000537a <malloc>:
    537a:	0f 93       	push	r16
    537c:	1f 93       	push	r17
    537e:	cf 93       	push	r28
    5380:	df 93       	push	r29
    5382:	82 30       	cpi	r24, 0x02	; 2
    5384:	91 05       	cpc	r25, r1
    5386:	10 f4       	brcc	.+4      	; 0x538c <malloc+0x12>
    5388:	82 e0       	ldi	r24, 0x02	; 2
    538a:	90 e0       	ldi	r25, 0x00	; 0
    538c:	e0 91 9d 04 	lds	r30, 0x049D	; 0x80049d <__flp>
    5390:	f0 91 9e 04 	lds	r31, 0x049E	; 0x80049e <__flp+0x1>
    5394:	20 e0       	ldi	r18, 0x00	; 0
    5396:	30 e0       	ldi	r19, 0x00	; 0
    5398:	a0 e0       	ldi	r26, 0x00	; 0
    539a:	b0 e0       	ldi	r27, 0x00	; 0
    539c:	30 97       	sbiw	r30, 0x00	; 0
    539e:	19 f1       	breq	.+70     	; 0x53e6 <malloc+0x6c>
    53a0:	40 81       	ld	r20, Z
    53a2:	51 81       	ldd	r21, Z+1	; 0x01
    53a4:	02 81       	ldd	r16, Z+2	; 0x02
    53a6:	13 81       	ldd	r17, Z+3	; 0x03
    53a8:	48 17       	cp	r20, r24
    53aa:	59 07       	cpc	r21, r25
    53ac:	c8 f0       	brcs	.+50     	; 0x53e0 <malloc+0x66>
    53ae:	84 17       	cp	r24, r20
    53b0:	95 07       	cpc	r25, r21
    53b2:	69 f4       	brne	.+26     	; 0x53ce <malloc+0x54>
    53b4:	10 97       	sbiw	r26, 0x00	; 0
    53b6:	31 f0       	breq	.+12     	; 0x53c4 <malloc+0x4a>
    53b8:	12 96       	adiw	r26, 0x02	; 2
    53ba:	0c 93       	st	X, r16
    53bc:	12 97       	sbiw	r26, 0x02	; 2
    53be:	13 96       	adiw	r26, 0x03	; 3
    53c0:	1c 93       	st	X, r17
    53c2:	27 c0       	rjmp	.+78     	; 0x5412 <malloc+0x98>
    53c4:	00 93 9d 04 	sts	0x049D, r16	; 0x80049d <__flp>
    53c8:	10 93 9e 04 	sts	0x049E, r17	; 0x80049e <__flp+0x1>
    53cc:	22 c0       	rjmp	.+68     	; 0x5412 <malloc+0x98>
    53ce:	21 15       	cp	r18, r1
    53d0:	31 05       	cpc	r19, r1
    53d2:	19 f0       	breq	.+6      	; 0x53da <malloc+0x60>
    53d4:	42 17       	cp	r20, r18
    53d6:	53 07       	cpc	r21, r19
    53d8:	18 f4       	brcc	.+6      	; 0x53e0 <malloc+0x66>
    53da:	9a 01       	movw	r18, r20
    53dc:	bd 01       	movw	r22, r26
    53de:	ef 01       	movw	r28, r30
    53e0:	df 01       	movw	r26, r30
    53e2:	f8 01       	movw	r30, r16
    53e4:	db cf       	rjmp	.-74     	; 0x539c <malloc+0x22>
    53e6:	21 15       	cp	r18, r1
    53e8:	31 05       	cpc	r19, r1
    53ea:	f9 f0       	breq	.+62     	; 0x542a <malloc+0xb0>
    53ec:	28 1b       	sub	r18, r24
    53ee:	39 0b       	sbc	r19, r25
    53f0:	24 30       	cpi	r18, 0x04	; 4
    53f2:	31 05       	cpc	r19, r1
    53f4:	80 f4       	brcc	.+32     	; 0x5416 <malloc+0x9c>
    53f6:	8a 81       	ldd	r24, Y+2	; 0x02
    53f8:	9b 81       	ldd	r25, Y+3	; 0x03
    53fa:	61 15       	cp	r22, r1
    53fc:	71 05       	cpc	r23, r1
    53fe:	21 f0       	breq	.+8      	; 0x5408 <malloc+0x8e>
    5400:	fb 01       	movw	r30, r22
    5402:	93 83       	std	Z+3, r25	; 0x03
    5404:	82 83       	std	Z+2, r24	; 0x02
    5406:	04 c0       	rjmp	.+8      	; 0x5410 <malloc+0x96>
    5408:	90 93 9e 04 	sts	0x049E, r25	; 0x80049e <__flp+0x1>
    540c:	80 93 9d 04 	sts	0x049D, r24	; 0x80049d <__flp>
    5410:	fe 01       	movw	r30, r28
    5412:	32 96       	adiw	r30, 0x02	; 2
    5414:	44 c0       	rjmp	.+136    	; 0x549e <malloc+0x124>
    5416:	fe 01       	movw	r30, r28
    5418:	e2 0f       	add	r30, r18
    541a:	f3 1f       	adc	r31, r19
    541c:	81 93       	st	Z+, r24
    541e:	91 93       	st	Z+, r25
    5420:	22 50       	subi	r18, 0x02	; 2
    5422:	31 09       	sbc	r19, r1
    5424:	39 83       	std	Y+1, r19	; 0x01
    5426:	28 83       	st	Y, r18
    5428:	3a c0       	rjmp	.+116    	; 0x549e <malloc+0x124>
    542a:	20 91 9b 04 	lds	r18, 0x049B	; 0x80049b <__brkval>
    542e:	30 91 9c 04 	lds	r19, 0x049C	; 0x80049c <__brkval+0x1>
    5432:	23 2b       	or	r18, r19
    5434:	41 f4       	brne	.+16     	; 0x5446 <malloc+0xcc>
    5436:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    543a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    543e:	30 93 9c 04 	sts	0x049C, r19	; 0x80049c <__brkval+0x1>
    5442:	20 93 9b 04 	sts	0x049B, r18	; 0x80049b <__brkval>
    5446:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    544a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    544e:	21 15       	cp	r18, r1
    5450:	31 05       	cpc	r19, r1
    5452:	41 f4       	brne	.+16     	; 0x5464 <malloc+0xea>
    5454:	2d b7       	in	r18, 0x3d	; 61
    5456:	3e b7       	in	r19, 0x3e	; 62
    5458:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    545c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    5460:	24 1b       	sub	r18, r20
    5462:	35 0b       	sbc	r19, r21
    5464:	e0 91 9b 04 	lds	r30, 0x049B	; 0x80049b <__brkval>
    5468:	f0 91 9c 04 	lds	r31, 0x049C	; 0x80049c <__brkval+0x1>
    546c:	e2 17       	cp	r30, r18
    546e:	f3 07       	cpc	r31, r19
    5470:	a0 f4       	brcc	.+40     	; 0x549a <malloc+0x120>
    5472:	2e 1b       	sub	r18, r30
    5474:	3f 0b       	sbc	r19, r31
    5476:	28 17       	cp	r18, r24
    5478:	39 07       	cpc	r19, r25
    547a:	78 f0       	brcs	.+30     	; 0x549a <malloc+0x120>
    547c:	ac 01       	movw	r20, r24
    547e:	4e 5f       	subi	r20, 0xFE	; 254
    5480:	5f 4f       	sbci	r21, 0xFF	; 255
    5482:	24 17       	cp	r18, r20
    5484:	35 07       	cpc	r19, r21
    5486:	48 f0       	brcs	.+18     	; 0x549a <malloc+0x120>
    5488:	4e 0f       	add	r20, r30
    548a:	5f 1f       	adc	r21, r31
    548c:	50 93 9c 04 	sts	0x049C, r21	; 0x80049c <__brkval+0x1>
    5490:	40 93 9b 04 	sts	0x049B, r20	; 0x80049b <__brkval>
    5494:	81 93       	st	Z+, r24
    5496:	91 93       	st	Z+, r25
    5498:	02 c0       	rjmp	.+4      	; 0x549e <malloc+0x124>
    549a:	e0 e0       	ldi	r30, 0x00	; 0
    549c:	f0 e0       	ldi	r31, 0x00	; 0
    549e:	cf 01       	movw	r24, r30
    54a0:	df 91       	pop	r29
    54a2:	cf 91       	pop	r28
    54a4:	1f 91       	pop	r17
    54a6:	0f 91       	pop	r16
    54a8:	08 95       	ret

000054aa <free>:
    54aa:	cf 93       	push	r28
    54ac:	df 93       	push	r29
    54ae:	00 97       	sbiw	r24, 0x00	; 0
    54b0:	09 f4       	brne	.+2      	; 0x54b4 <free+0xa>
    54b2:	81 c0       	rjmp	.+258    	; 0x55b6 <free+0x10c>
    54b4:	fc 01       	movw	r30, r24
    54b6:	32 97       	sbiw	r30, 0x02	; 2
    54b8:	13 82       	std	Z+3, r1	; 0x03
    54ba:	12 82       	std	Z+2, r1	; 0x02
    54bc:	a0 91 9d 04 	lds	r26, 0x049D	; 0x80049d <__flp>
    54c0:	b0 91 9e 04 	lds	r27, 0x049E	; 0x80049e <__flp+0x1>
    54c4:	10 97       	sbiw	r26, 0x00	; 0
    54c6:	81 f4       	brne	.+32     	; 0x54e8 <free+0x3e>
    54c8:	20 81       	ld	r18, Z
    54ca:	31 81       	ldd	r19, Z+1	; 0x01
    54cc:	82 0f       	add	r24, r18
    54ce:	93 1f       	adc	r25, r19
    54d0:	20 91 9b 04 	lds	r18, 0x049B	; 0x80049b <__brkval>
    54d4:	30 91 9c 04 	lds	r19, 0x049C	; 0x80049c <__brkval+0x1>
    54d8:	28 17       	cp	r18, r24
    54da:	39 07       	cpc	r19, r25
    54dc:	51 f5       	brne	.+84     	; 0x5532 <free+0x88>
    54de:	f0 93 9c 04 	sts	0x049C, r31	; 0x80049c <__brkval+0x1>
    54e2:	e0 93 9b 04 	sts	0x049B, r30	; 0x80049b <__brkval>
    54e6:	67 c0       	rjmp	.+206    	; 0x55b6 <free+0x10c>
    54e8:	ed 01       	movw	r28, r26
    54ea:	20 e0       	ldi	r18, 0x00	; 0
    54ec:	30 e0       	ldi	r19, 0x00	; 0
    54ee:	ce 17       	cp	r28, r30
    54f0:	df 07       	cpc	r29, r31
    54f2:	40 f4       	brcc	.+16     	; 0x5504 <free+0x5a>
    54f4:	4a 81       	ldd	r20, Y+2	; 0x02
    54f6:	5b 81       	ldd	r21, Y+3	; 0x03
    54f8:	9e 01       	movw	r18, r28
    54fa:	41 15       	cp	r20, r1
    54fc:	51 05       	cpc	r21, r1
    54fe:	f1 f0       	breq	.+60     	; 0x553c <free+0x92>
    5500:	ea 01       	movw	r28, r20
    5502:	f5 cf       	rjmp	.-22     	; 0x54ee <free+0x44>
    5504:	d3 83       	std	Z+3, r29	; 0x03
    5506:	c2 83       	std	Z+2, r28	; 0x02
    5508:	40 81       	ld	r20, Z
    550a:	51 81       	ldd	r21, Z+1	; 0x01
    550c:	84 0f       	add	r24, r20
    550e:	95 1f       	adc	r25, r21
    5510:	c8 17       	cp	r28, r24
    5512:	d9 07       	cpc	r29, r25
    5514:	59 f4       	brne	.+22     	; 0x552c <free+0x82>
    5516:	88 81       	ld	r24, Y
    5518:	99 81       	ldd	r25, Y+1	; 0x01
    551a:	84 0f       	add	r24, r20
    551c:	95 1f       	adc	r25, r21
    551e:	02 96       	adiw	r24, 0x02	; 2
    5520:	91 83       	std	Z+1, r25	; 0x01
    5522:	80 83       	st	Z, r24
    5524:	8a 81       	ldd	r24, Y+2	; 0x02
    5526:	9b 81       	ldd	r25, Y+3	; 0x03
    5528:	93 83       	std	Z+3, r25	; 0x03
    552a:	82 83       	std	Z+2, r24	; 0x02
    552c:	21 15       	cp	r18, r1
    552e:	31 05       	cpc	r19, r1
    5530:	29 f4       	brne	.+10     	; 0x553c <free+0x92>
    5532:	f0 93 9e 04 	sts	0x049E, r31	; 0x80049e <__flp+0x1>
    5536:	e0 93 9d 04 	sts	0x049D, r30	; 0x80049d <__flp>
    553a:	3d c0       	rjmp	.+122    	; 0x55b6 <free+0x10c>
    553c:	e9 01       	movw	r28, r18
    553e:	fb 83       	std	Y+3, r31	; 0x03
    5540:	ea 83       	std	Y+2, r30	; 0x02
    5542:	49 91       	ld	r20, Y+
    5544:	59 91       	ld	r21, Y+
    5546:	c4 0f       	add	r28, r20
    5548:	d5 1f       	adc	r29, r21
    554a:	ec 17       	cp	r30, r28
    554c:	fd 07       	cpc	r31, r29
    554e:	61 f4       	brne	.+24     	; 0x5568 <free+0xbe>
    5550:	80 81       	ld	r24, Z
    5552:	91 81       	ldd	r25, Z+1	; 0x01
    5554:	84 0f       	add	r24, r20
    5556:	95 1f       	adc	r25, r21
    5558:	02 96       	adiw	r24, 0x02	; 2
    555a:	e9 01       	movw	r28, r18
    555c:	99 83       	std	Y+1, r25	; 0x01
    555e:	88 83       	st	Y, r24
    5560:	82 81       	ldd	r24, Z+2	; 0x02
    5562:	93 81       	ldd	r25, Z+3	; 0x03
    5564:	9b 83       	std	Y+3, r25	; 0x03
    5566:	8a 83       	std	Y+2, r24	; 0x02
    5568:	e0 e0       	ldi	r30, 0x00	; 0
    556a:	f0 e0       	ldi	r31, 0x00	; 0
    556c:	12 96       	adiw	r26, 0x02	; 2
    556e:	8d 91       	ld	r24, X+
    5570:	9c 91       	ld	r25, X
    5572:	13 97       	sbiw	r26, 0x03	; 3
    5574:	00 97       	sbiw	r24, 0x00	; 0
    5576:	19 f0       	breq	.+6      	; 0x557e <free+0xd4>
    5578:	fd 01       	movw	r30, r26
    557a:	dc 01       	movw	r26, r24
    557c:	f7 cf       	rjmp	.-18     	; 0x556c <free+0xc2>
    557e:	8d 91       	ld	r24, X+
    5580:	9c 91       	ld	r25, X
    5582:	11 97       	sbiw	r26, 0x01	; 1
    5584:	9d 01       	movw	r18, r26
    5586:	2e 5f       	subi	r18, 0xFE	; 254
    5588:	3f 4f       	sbci	r19, 0xFF	; 255
    558a:	82 0f       	add	r24, r18
    558c:	93 1f       	adc	r25, r19
    558e:	20 91 9b 04 	lds	r18, 0x049B	; 0x80049b <__brkval>
    5592:	30 91 9c 04 	lds	r19, 0x049C	; 0x80049c <__brkval+0x1>
    5596:	28 17       	cp	r18, r24
    5598:	39 07       	cpc	r19, r25
    559a:	69 f4       	brne	.+26     	; 0x55b6 <free+0x10c>
    559c:	30 97       	sbiw	r30, 0x00	; 0
    559e:	29 f4       	brne	.+10     	; 0x55aa <free+0x100>
    55a0:	10 92 9e 04 	sts	0x049E, r1	; 0x80049e <__flp+0x1>
    55a4:	10 92 9d 04 	sts	0x049D, r1	; 0x80049d <__flp>
    55a8:	02 c0       	rjmp	.+4      	; 0x55ae <free+0x104>
    55aa:	13 82       	std	Z+3, r1	; 0x03
    55ac:	12 82       	std	Z+2, r1	; 0x02
    55ae:	b0 93 9c 04 	sts	0x049C, r27	; 0x80049c <__brkval+0x1>
    55b2:	a0 93 9b 04 	sts	0x049B, r26	; 0x80049b <__brkval>
    55b6:	df 91       	pop	r29
    55b8:	cf 91       	pop	r28
    55ba:	08 95       	ret

000055bc <__ftoa_engine>:
    55bc:	28 30       	cpi	r18, 0x08	; 8
    55be:	08 f0       	brcs	.+2      	; 0x55c2 <__ftoa_engine+0x6>
    55c0:	27 e0       	ldi	r18, 0x07	; 7
    55c2:	33 27       	eor	r19, r19
    55c4:	da 01       	movw	r26, r20
    55c6:	99 0f       	add	r25, r25
    55c8:	31 1d       	adc	r19, r1
    55ca:	87 fd       	sbrc	r24, 7
    55cc:	91 60       	ori	r25, 0x01	; 1
    55ce:	00 96       	adiw	r24, 0x00	; 0
    55d0:	61 05       	cpc	r22, r1
    55d2:	71 05       	cpc	r23, r1
    55d4:	39 f4       	brne	.+14     	; 0x55e4 <__ftoa_engine+0x28>
    55d6:	32 60       	ori	r19, 0x02	; 2
    55d8:	2e 5f       	subi	r18, 0xFE	; 254
    55da:	3d 93       	st	X+, r19
    55dc:	30 e3       	ldi	r19, 0x30	; 48
    55de:	2a 95       	dec	r18
    55e0:	e1 f7       	brne	.-8      	; 0x55da <__ftoa_engine+0x1e>
    55e2:	08 95       	ret
    55e4:	9f 3f       	cpi	r25, 0xFF	; 255
    55e6:	30 f0       	brcs	.+12     	; 0x55f4 <__ftoa_engine+0x38>
    55e8:	80 38       	cpi	r24, 0x80	; 128
    55ea:	71 05       	cpc	r23, r1
    55ec:	61 05       	cpc	r22, r1
    55ee:	09 f0       	breq	.+2      	; 0x55f2 <__ftoa_engine+0x36>
    55f0:	3c 5f       	subi	r19, 0xFC	; 252
    55f2:	3c 5f       	subi	r19, 0xFC	; 252
    55f4:	3d 93       	st	X+, r19
    55f6:	91 30       	cpi	r25, 0x01	; 1
    55f8:	08 f0       	brcs	.+2      	; 0x55fc <__ftoa_engine+0x40>
    55fa:	80 68       	ori	r24, 0x80	; 128
    55fc:	91 1d       	adc	r25, r1
    55fe:	df 93       	push	r29
    5600:	cf 93       	push	r28
    5602:	1f 93       	push	r17
    5604:	0f 93       	push	r16
    5606:	ff 92       	push	r15
    5608:	ef 92       	push	r14
    560a:	19 2f       	mov	r17, r25
    560c:	98 7f       	andi	r25, 0xF8	; 248
    560e:	96 95       	lsr	r25
    5610:	e9 2f       	mov	r30, r25
    5612:	96 95       	lsr	r25
    5614:	96 95       	lsr	r25
    5616:	e9 0f       	add	r30, r25
    5618:	ff 27       	eor	r31, r31
    561a:	e2 51       	subi	r30, 0x12	; 18
    561c:	ff 4f       	sbci	r31, 0xFF	; 255
    561e:	99 27       	eor	r25, r25
    5620:	33 27       	eor	r19, r19
    5622:	ee 24       	eor	r14, r14
    5624:	ff 24       	eor	r15, r15
    5626:	a7 01       	movw	r20, r14
    5628:	e7 01       	movw	r28, r14
    562a:	05 90       	lpm	r0, Z+
    562c:	08 94       	sec
    562e:	07 94       	ror	r0
    5630:	28 f4       	brcc	.+10     	; 0x563c <__ftoa_engine+0x80>
    5632:	36 0f       	add	r19, r22
    5634:	e7 1e       	adc	r14, r23
    5636:	f8 1e       	adc	r15, r24
    5638:	49 1f       	adc	r20, r25
    563a:	51 1d       	adc	r21, r1
    563c:	66 0f       	add	r22, r22
    563e:	77 1f       	adc	r23, r23
    5640:	88 1f       	adc	r24, r24
    5642:	99 1f       	adc	r25, r25
    5644:	06 94       	lsr	r0
    5646:	a1 f7       	brne	.-24     	; 0x5630 <__ftoa_engine+0x74>
    5648:	05 90       	lpm	r0, Z+
    564a:	07 94       	ror	r0
    564c:	28 f4       	brcc	.+10     	; 0x5658 <__ftoa_engine+0x9c>
    564e:	e7 0e       	add	r14, r23
    5650:	f8 1e       	adc	r15, r24
    5652:	49 1f       	adc	r20, r25
    5654:	56 1f       	adc	r21, r22
    5656:	c1 1d       	adc	r28, r1
    5658:	77 0f       	add	r23, r23
    565a:	88 1f       	adc	r24, r24
    565c:	99 1f       	adc	r25, r25
    565e:	66 1f       	adc	r22, r22
    5660:	06 94       	lsr	r0
    5662:	a1 f7       	brne	.-24     	; 0x564c <__ftoa_engine+0x90>
    5664:	05 90       	lpm	r0, Z+
    5666:	07 94       	ror	r0
    5668:	28 f4       	brcc	.+10     	; 0x5674 <__ftoa_engine+0xb8>
    566a:	f8 0e       	add	r15, r24
    566c:	49 1f       	adc	r20, r25
    566e:	56 1f       	adc	r21, r22
    5670:	c7 1f       	adc	r28, r23
    5672:	d1 1d       	adc	r29, r1
    5674:	88 0f       	add	r24, r24
    5676:	99 1f       	adc	r25, r25
    5678:	66 1f       	adc	r22, r22
    567a:	77 1f       	adc	r23, r23
    567c:	06 94       	lsr	r0
    567e:	a1 f7       	brne	.-24     	; 0x5668 <__ftoa_engine+0xac>
    5680:	05 90       	lpm	r0, Z+
    5682:	07 94       	ror	r0
    5684:	20 f4       	brcc	.+8      	; 0x568e <__ftoa_engine+0xd2>
    5686:	49 0f       	add	r20, r25
    5688:	56 1f       	adc	r21, r22
    568a:	c7 1f       	adc	r28, r23
    568c:	d8 1f       	adc	r29, r24
    568e:	99 0f       	add	r25, r25
    5690:	66 1f       	adc	r22, r22
    5692:	77 1f       	adc	r23, r23
    5694:	88 1f       	adc	r24, r24
    5696:	06 94       	lsr	r0
    5698:	a9 f7       	brne	.-22     	; 0x5684 <__ftoa_engine+0xc8>
    569a:	84 91       	lpm	r24, Z
    569c:	10 95       	com	r17
    569e:	17 70       	andi	r17, 0x07	; 7
    56a0:	41 f0       	breq	.+16     	; 0x56b2 <__ftoa_engine+0xf6>
    56a2:	d6 95       	lsr	r29
    56a4:	c7 95       	ror	r28
    56a6:	57 95       	ror	r21
    56a8:	47 95       	ror	r20
    56aa:	f7 94       	ror	r15
    56ac:	e7 94       	ror	r14
    56ae:	1a 95       	dec	r17
    56b0:	c1 f7       	brne	.-16     	; 0x56a2 <__ftoa_engine+0xe6>
    56b2:	e4 e9       	ldi	r30, 0x94	; 148
    56b4:	f0 e0       	ldi	r31, 0x00	; 0
    56b6:	68 94       	set
    56b8:	15 90       	lpm	r1, Z+
    56ba:	15 91       	lpm	r17, Z+
    56bc:	35 91       	lpm	r19, Z+
    56be:	65 91       	lpm	r22, Z+
    56c0:	95 91       	lpm	r25, Z+
    56c2:	05 90       	lpm	r0, Z+
    56c4:	7f e2       	ldi	r23, 0x2F	; 47
    56c6:	73 95       	inc	r23
    56c8:	e1 18       	sub	r14, r1
    56ca:	f1 0a       	sbc	r15, r17
    56cc:	43 0b       	sbc	r20, r19
    56ce:	56 0b       	sbc	r21, r22
    56d0:	c9 0b       	sbc	r28, r25
    56d2:	d0 09       	sbc	r29, r0
    56d4:	c0 f7       	brcc	.-16     	; 0x56c6 <__ftoa_engine+0x10a>
    56d6:	e1 0c       	add	r14, r1
    56d8:	f1 1e       	adc	r15, r17
    56da:	43 1f       	adc	r20, r19
    56dc:	56 1f       	adc	r21, r22
    56de:	c9 1f       	adc	r28, r25
    56e0:	d0 1d       	adc	r29, r0
    56e2:	7e f4       	brtc	.+30     	; 0x5702 <__ftoa_engine+0x146>
    56e4:	70 33       	cpi	r23, 0x30	; 48
    56e6:	11 f4       	brne	.+4      	; 0x56ec <__ftoa_engine+0x130>
    56e8:	8a 95       	dec	r24
    56ea:	e6 cf       	rjmp	.-52     	; 0x56b8 <__ftoa_engine+0xfc>
    56ec:	e8 94       	clt
    56ee:	01 50       	subi	r16, 0x01	; 1
    56f0:	30 f0       	brcs	.+12     	; 0x56fe <__ftoa_engine+0x142>
    56f2:	08 0f       	add	r16, r24
    56f4:	0a f4       	brpl	.+2      	; 0x56f8 <__ftoa_engine+0x13c>
    56f6:	00 27       	eor	r16, r16
    56f8:	02 17       	cp	r16, r18
    56fa:	08 f4       	brcc	.+2      	; 0x56fe <__ftoa_engine+0x142>
    56fc:	20 2f       	mov	r18, r16
    56fe:	23 95       	inc	r18
    5700:	02 2f       	mov	r16, r18
    5702:	7a 33       	cpi	r23, 0x3A	; 58
    5704:	28 f0       	brcs	.+10     	; 0x5710 <__ftoa_engine+0x154>
    5706:	79 e3       	ldi	r23, 0x39	; 57
    5708:	7d 93       	st	X+, r23
    570a:	2a 95       	dec	r18
    570c:	e9 f7       	brne	.-6      	; 0x5708 <__ftoa_engine+0x14c>
    570e:	10 c0       	rjmp	.+32     	; 0x5730 <__ftoa_engine+0x174>
    5710:	7d 93       	st	X+, r23
    5712:	2a 95       	dec	r18
    5714:	89 f6       	brne	.-94     	; 0x56b8 <__ftoa_engine+0xfc>
    5716:	06 94       	lsr	r0
    5718:	97 95       	ror	r25
    571a:	67 95       	ror	r22
    571c:	37 95       	ror	r19
    571e:	17 95       	ror	r17
    5720:	17 94       	ror	r1
    5722:	e1 18       	sub	r14, r1
    5724:	f1 0a       	sbc	r15, r17
    5726:	43 0b       	sbc	r20, r19
    5728:	56 0b       	sbc	r21, r22
    572a:	c9 0b       	sbc	r28, r25
    572c:	d0 09       	sbc	r29, r0
    572e:	98 f0       	brcs	.+38     	; 0x5756 <__ftoa_engine+0x19a>
    5730:	23 95       	inc	r18
    5732:	7e 91       	ld	r23, -X
    5734:	73 95       	inc	r23
    5736:	7a 33       	cpi	r23, 0x3A	; 58
    5738:	08 f0       	brcs	.+2      	; 0x573c <__ftoa_engine+0x180>
    573a:	70 e3       	ldi	r23, 0x30	; 48
    573c:	7c 93       	st	X, r23
    573e:	20 13       	cpse	r18, r16
    5740:	b8 f7       	brcc	.-18     	; 0x5730 <__ftoa_engine+0x174>
    5742:	7e 91       	ld	r23, -X
    5744:	70 61       	ori	r23, 0x10	; 16
    5746:	7d 93       	st	X+, r23
    5748:	30 f0       	brcs	.+12     	; 0x5756 <__ftoa_engine+0x19a>
    574a:	83 95       	inc	r24
    574c:	71 e3       	ldi	r23, 0x31	; 49
    574e:	7d 93       	st	X+, r23
    5750:	70 e3       	ldi	r23, 0x30	; 48
    5752:	2a 95       	dec	r18
    5754:	e1 f7       	brne	.-8      	; 0x574e <__ftoa_engine+0x192>
    5756:	11 24       	eor	r1, r1
    5758:	ef 90       	pop	r14
    575a:	ff 90       	pop	r15
    575c:	0f 91       	pop	r16
    575e:	1f 91       	pop	r17
    5760:	cf 91       	pop	r28
    5762:	df 91       	pop	r29
    5764:	99 27       	eor	r25, r25
    5766:	87 fd       	sbrc	r24, 7
    5768:	90 95       	com	r25
    576a:	08 95       	ret

0000576c <strcpy_P>:
    576c:	fb 01       	movw	r30, r22
    576e:	dc 01       	movw	r26, r24
    5770:	05 90       	lpm	r0, Z+
    5772:	0d 92       	st	X+, r0
    5774:	00 20       	and	r0, r0
    5776:	e1 f7       	brne	.-8      	; 0x5770 <strcpy_P+0x4>
    5778:	08 95       	ret

0000577a <strnlen_P>:
    577a:	fc 01       	movw	r30, r24
    577c:	05 90       	lpm	r0, Z+
    577e:	61 50       	subi	r22, 0x01	; 1
    5780:	70 40       	sbci	r23, 0x00	; 0
    5782:	01 10       	cpse	r0, r1
    5784:	d8 f7       	brcc	.-10     	; 0x577c <strnlen_P+0x2>
    5786:	80 95       	com	r24
    5788:	90 95       	com	r25
    578a:	8e 0f       	add	r24, r30
    578c:	9f 1f       	adc	r25, r31
    578e:	08 95       	ret

00005790 <strtok>:
    5790:	48 ea       	ldi	r20, 0xA8	; 168
    5792:	51 e0       	ldi	r21, 0x01	; 1
    5794:	0c 94 e7 2b 	jmp	0x57ce	; 0x57ce <strtok_r>

00005798 <strcmp>:
    5798:	fb 01       	movw	r30, r22
    579a:	dc 01       	movw	r26, r24
    579c:	8d 91       	ld	r24, X+
    579e:	01 90       	ld	r0, Z+
    57a0:	80 19       	sub	r24, r0
    57a2:	01 10       	cpse	r0, r1
    57a4:	d9 f3       	breq	.-10     	; 0x579c <strcmp+0x4>
    57a6:	99 0b       	sbc	r25, r25
    57a8:	08 95       	ret

000057aa <strcpy>:
    57aa:	fb 01       	movw	r30, r22
    57ac:	dc 01       	movw	r26, r24
    57ae:	01 90       	ld	r0, Z+
    57b0:	0d 92       	st	X+, r0
    57b2:	00 20       	and	r0, r0
    57b4:	e1 f7       	brne	.-8      	; 0x57ae <strcpy+0x4>
    57b6:	08 95       	ret

000057b8 <strnlen>:
    57b8:	fc 01       	movw	r30, r24
    57ba:	61 50       	subi	r22, 0x01	; 1
    57bc:	70 40       	sbci	r23, 0x00	; 0
    57be:	01 90       	ld	r0, Z+
    57c0:	01 10       	cpse	r0, r1
    57c2:	d8 f7       	brcc	.-10     	; 0x57ba <strnlen+0x2>
    57c4:	80 95       	com	r24
    57c6:	90 95       	com	r25
    57c8:	8e 0f       	add	r24, r30
    57ca:	9f 1f       	adc	r25, r31
    57cc:	08 95       	ret

000057ce <strtok_r>:
    57ce:	fa 01       	movw	r30, r20
    57d0:	a1 91       	ld	r26, Z+
    57d2:	b0 81       	ld	r27, Z
    57d4:	00 97       	sbiw	r24, 0x00	; 0
    57d6:	19 f4       	brne	.+6      	; 0x57de <strtok_r+0x10>
    57d8:	10 97       	sbiw	r26, 0x00	; 0
    57da:	e1 f0       	breq	.+56     	; 0x5814 <strtok_r+0x46>
    57dc:	cd 01       	movw	r24, r26
    57de:	dc 01       	movw	r26, r24
    57e0:	cd 01       	movw	r24, r26
    57e2:	0d 90       	ld	r0, X+
    57e4:	00 20       	and	r0, r0
    57e6:	11 f4       	brne	.+4      	; 0x57ec <strtok_r+0x1e>
    57e8:	c0 01       	movw	r24, r0
    57ea:	13 c0       	rjmp	.+38     	; 0x5812 <strtok_r+0x44>
    57ec:	fb 01       	movw	r30, r22
    57ee:	21 91       	ld	r18, Z+
    57f0:	22 23       	and	r18, r18
    57f2:	19 f0       	breq	.+6      	; 0x57fa <strtok_r+0x2c>
    57f4:	20 15       	cp	r18, r0
    57f6:	d9 f7       	brne	.-10     	; 0x57ee <strtok_r+0x20>
    57f8:	f3 cf       	rjmp	.-26     	; 0x57e0 <strtok_r+0x12>
    57fa:	fb 01       	movw	r30, r22
    57fc:	21 91       	ld	r18, Z+
    57fe:	20 15       	cp	r18, r0
    5800:	19 f4       	brne	.+6      	; 0x5808 <strtok_r+0x3a>
    5802:	1e 92       	st	-X, r1
    5804:	11 96       	adiw	r26, 0x01	; 1
    5806:	06 c0       	rjmp	.+12     	; 0x5814 <strtok_r+0x46>
    5808:	22 23       	and	r18, r18
    580a:	c1 f7       	brne	.-16     	; 0x57fc <strtok_r+0x2e>
    580c:	0d 90       	ld	r0, X+
    580e:	00 20       	and	r0, r0
    5810:	a1 f7       	brne	.-24     	; 0x57fa <strtok_r+0x2c>
    5812:	d0 01       	movw	r26, r0
    5814:	fa 01       	movw	r30, r20
    5816:	a1 93       	st	Z+, r26
    5818:	b0 83       	st	Z, r27
    581a:	08 95       	ret

0000581c <fputc>:
    581c:	0f 93       	push	r16
    581e:	1f 93       	push	r17
    5820:	cf 93       	push	r28
    5822:	df 93       	push	r29
    5824:	fb 01       	movw	r30, r22
    5826:	23 81       	ldd	r18, Z+3	; 0x03
    5828:	21 fd       	sbrc	r18, 1
    582a:	03 c0       	rjmp	.+6      	; 0x5832 <fputc+0x16>
    582c:	8f ef       	ldi	r24, 0xFF	; 255
    582e:	9f ef       	ldi	r25, 0xFF	; 255
    5830:	2c c0       	rjmp	.+88     	; 0x588a <fputc+0x6e>
    5832:	22 ff       	sbrs	r18, 2
    5834:	16 c0       	rjmp	.+44     	; 0x5862 <fputc+0x46>
    5836:	46 81       	ldd	r20, Z+6	; 0x06
    5838:	57 81       	ldd	r21, Z+7	; 0x07
    583a:	24 81       	ldd	r18, Z+4	; 0x04
    583c:	35 81       	ldd	r19, Z+5	; 0x05
    583e:	42 17       	cp	r20, r18
    5840:	53 07       	cpc	r21, r19
    5842:	44 f4       	brge	.+16     	; 0x5854 <fputc+0x38>
    5844:	a0 81       	ld	r26, Z
    5846:	b1 81       	ldd	r27, Z+1	; 0x01
    5848:	9d 01       	movw	r18, r26
    584a:	2f 5f       	subi	r18, 0xFF	; 255
    584c:	3f 4f       	sbci	r19, 0xFF	; 255
    584e:	31 83       	std	Z+1, r19	; 0x01
    5850:	20 83       	st	Z, r18
    5852:	8c 93       	st	X, r24
    5854:	26 81       	ldd	r18, Z+6	; 0x06
    5856:	37 81       	ldd	r19, Z+7	; 0x07
    5858:	2f 5f       	subi	r18, 0xFF	; 255
    585a:	3f 4f       	sbci	r19, 0xFF	; 255
    585c:	37 83       	std	Z+7, r19	; 0x07
    585e:	26 83       	std	Z+6, r18	; 0x06
    5860:	14 c0       	rjmp	.+40     	; 0x588a <fputc+0x6e>
    5862:	8b 01       	movw	r16, r22
    5864:	ec 01       	movw	r28, r24
    5866:	fb 01       	movw	r30, r22
    5868:	00 84       	ldd	r0, Z+8	; 0x08
    586a:	f1 85       	ldd	r31, Z+9	; 0x09
    586c:	e0 2d       	mov	r30, r0
    586e:	09 95       	icall
    5870:	89 2b       	or	r24, r25
    5872:	e1 f6       	brne	.-72     	; 0x582c <fputc+0x10>
    5874:	d8 01       	movw	r26, r16
    5876:	16 96       	adiw	r26, 0x06	; 6
    5878:	8d 91       	ld	r24, X+
    587a:	9c 91       	ld	r25, X
    587c:	17 97       	sbiw	r26, 0x07	; 7
    587e:	01 96       	adiw	r24, 0x01	; 1
    5880:	17 96       	adiw	r26, 0x07	; 7
    5882:	9c 93       	st	X, r25
    5884:	8e 93       	st	-X, r24
    5886:	16 97       	sbiw	r26, 0x06	; 6
    5888:	ce 01       	movw	r24, r28
    588a:	df 91       	pop	r29
    588c:	cf 91       	pop	r28
    588e:	1f 91       	pop	r17
    5890:	0f 91       	pop	r16
    5892:	08 95       	ret

00005894 <sprintf>:
    5894:	0f 93       	push	r16
    5896:	1f 93       	push	r17
    5898:	cf 93       	push	r28
    589a:	df 93       	push	r29
    589c:	cd b7       	in	r28, 0x3d	; 61
    589e:	de b7       	in	r29, 0x3e	; 62
    58a0:	2e 97       	sbiw	r28, 0x0e	; 14
    58a2:	0f b6       	in	r0, 0x3f	; 63
    58a4:	f8 94       	cli
    58a6:	de bf       	out	0x3e, r29	; 62
    58a8:	0f be       	out	0x3f, r0	; 63
    58aa:	cd bf       	out	0x3d, r28	; 61
    58ac:	0d 89       	ldd	r16, Y+21	; 0x15
    58ae:	1e 89       	ldd	r17, Y+22	; 0x16
    58b0:	86 e0       	ldi	r24, 0x06	; 6
    58b2:	8c 83       	std	Y+4, r24	; 0x04
    58b4:	1a 83       	std	Y+2, r17	; 0x02
    58b6:	09 83       	std	Y+1, r16	; 0x01
    58b8:	8f ef       	ldi	r24, 0xFF	; 255
    58ba:	9f e7       	ldi	r25, 0x7F	; 127
    58bc:	9e 83       	std	Y+6, r25	; 0x06
    58be:	8d 83       	std	Y+5, r24	; 0x05
    58c0:	ae 01       	movw	r20, r28
    58c2:	47 5e       	subi	r20, 0xE7	; 231
    58c4:	5f 4f       	sbci	r21, 0xFF	; 255
    58c6:	6f 89       	ldd	r22, Y+23	; 0x17
    58c8:	78 8d       	ldd	r23, Y+24	; 0x18
    58ca:	ce 01       	movw	r24, r28
    58cc:	01 96       	adiw	r24, 0x01	; 1
    58ce:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <vfprintf>
    58d2:	ef 81       	ldd	r30, Y+7	; 0x07
    58d4:	f8 85       	ldd	r31, Y+8	; 0x08
    58d6:	e0 0f       	add	r30, r16
    58d8:	f1 1f       	adc	r31, r17
    58da:	10 82       	st	Z, r1
    58dc:	2e 96       	adiw	r28, 0x0e	; 14
    58de:	0f b6       	in	r0, 0x3f	; 63
    58e0:	f8 94       	cli
    58e2:	de bf       	out	0x3e, r29	; 62
    58e4:	0f be       	out	0x3f, r0	; 63
    58e6:	cd bf       	out	0x3d, r28	; 61
    58e8:	df 91       	pop	r29
    58ea:	cf 91       	pop	r28
    58ec:	1f 91       	pop	r17
    58ee:	0f 91       	pop	r16
    58f0:	08 95       	ret

000058f2 <sscanf>:
    58f2:	cf 93       	push	r28
    58f4:	df 93       	push	r29
    58f6:	cd b7       	in	r28, 0x3d	; 61
    58f8:	de b7       	in	r29, 0x3e	; 62
    58fa:	2e 97       	sbiw	r28, 0x0e	; 14
    58fc:	0f b6       	in	r0, 0x3f	; 63
    58fe:	f8 94       	cli
    5900:	de bf       	out	0x3e, r29	; 62
    5902:	0f be       	out	0x3f, r0	; 63
    5904:	cd bf       	out	0x3d, r28	; 61
    5906:	85 e0       	ldi	r24, 0x05	; 5
    5908:	8c 83       	std	Y+4, r24	; 0x04
    590a:	8b 89       	ldd	r24, Y+19	; 0x13
    590c:	9c 89       	ldd	r25, Y+20	; 0x14
    590e:	9a 83       	std	Y+2, r25	; 0x02
    5910:	89 83       	std	Y+1, r24	; 0x01
    5912:	ae 01       	movw	r20, r28
    5914:	49 5e       	subi	r20, 0xE9	; 233
    5916:	5f 4f       	sbci	r21, 0xFF	; 255
    5918:	6d 89       	ldd	r22, Y+21	; 0x15
    591a:	7e 89       	ldd	r23, Y+22	; 0x16
    591c:	ce 01       	movw	r24, r28
    591e:	01 96       	adiw	r24, 0x01	; 1
    5920:	0e 94 0a 2f 	call	0x5e14	; 0x5e14 <vfscanf>
    5924:	2e 96       	adiw	r28, 0x0e	; 14
    5926:	0f b6       	in	r0, 0x3f	; 63
    5928:	f8 94       	cli
    592a:	de bf       	out	0x3e, r29	; 62
    592c:	0f be       	out	0x3f, r0	; 63
    592e:	cd bf       	out	0x3d, r28	; 61
    5930:	df 91       	pop	r29
    5932:	cf 91       	pop	r28
    5934:	08 95       	ret

00005936 <vsprintf>:
    5936:	0f 93       	push	r16
    5938:	1f 93       	push	r17
    593a:	cf 93       	push	r28
    593c:	df 93       	push	r29
    593e:	cd b7       	in	r28, 0x3d	; 61
    5940:	de b7       	in	r29, 0x3e	; 62
    5942:	2e 97       	sbiw	r28, 0x0e	; 14
    5944:	0f b6       	in	r0, 0x3f	; 63
    5946:	f8 94       	cli
    5948:	de bf       	out	0x3e, r29	; 62
    594a:	0f be       	out	0x3f, r0	; 63
    594c:	cd bf       	out	0x3d, r28	; 61
    594e:	8c 01       	movw	r16, r24
    5950:	86 e0       	ldi	r24, 0x06	; 6
    5952:	8c 83       	std	Y+4, r24	; 0x04
    5954:	1a 83       	std	Y+2, r17	; 0x02
    5956:	09 83       	std	Y+1, r16	; 0x01
    5958:	8f ef       	ldi	r24, 0xFF	; 255
    595a:	9f e7       	ldi	r25, 0x7F	; 127
    595c:	9e 83       	std	Y+6, r25	; 0x06
    595e:	8d 83       	std	Y+5, r24	; 0x05
    5960:	ce 01       	movw	r24, r28
    5962:	01 96       	adiw	r24, 0x01	; 1
    5964:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <vfprintf>
    5968:	ef 81       	ldd	r30, Y+7	; 0x07
    596a:	f8 85       	ldd	r31, Y+8	; 0x08
    596c:	e0 0f       	add	r30, r16
    596e:	f1 1f       	adc	r31, r17
    5970:	10 82       	st	Z, r1
    5972:	2e 96       	adiw	r28, 0x0e	; 14
    5974:	0f b6       	in	r0, 0x3f	; 63
    5976:	f8 94       	cli
    5978:	de bf       	out	0x3e, r29	; 62
    597a:	0f be       	out	0x3f, r0	; 63
    597c:	cd bf       	out	0x3d, r28	; 61
    597e:	df 91       	pop	r29
    5980:	cf 91       	pop	r28
    5982:	1f 91       	pop	r17
    5984:	0f 91       	pop	r16
    5986:	08 95       	ret

00005988 <vsprintf_P>:
    5988:	0f 93       	push	r16
    598a:	1f 93       	push	r17
    598c:	cf 93       	push	r28
    598e:	df 93       	push	r29
    5990:	cd b7       	in	r28, 0x3d	; 61
    5992:	de b7       	in	r29, 0x3e	; 62
    5994:	2e 97       	sbiw	r28, 0x0e	; 14
    5996:	0f b6       	in	r0, 0x3f	; 63
    5998:	f8 94       	cli
    599a:	de bf       	out	0x3e, r29	; 62
    599c:	0f be       	out	0x3f, r0	; 63
    599e:	cd bf       	out	0x3d, r28	; 61
    59a0:	8c 01       	movw	r16, r24
    59a2:	8e e0       	ldi	r24, 0x0E	; 14
    59a4:	8c 83       	std	Y+4, r24	; 0x04
    59a6:	1a 83       	std	Y+2, r17	; 0x02
    59a8:	09 83       	std	Y+1, r16	; 0x01
    59aa:	8f ef       	ldi	r24, 0xFF	; 255
    59ac:	9f e7       	ldi	r25, 0x7F	; 127
    59ae:	9e 83       	std	Y+6, r25	; 0x06
    59b0:	8d 83       	std	Y+5, r24	; 0x05
    59b2:	ce 01       	movw	r24, r28
    59b4:	01 96       	adiw	r24, 0x01	; 1
    59b6:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <vfprintf>
    59ba:	ef 81       	ldd	r30, Y+7	; 0x07
    59bc:	f8 85       	ldd	r31, Y+8	; 0x08
    59be:	e0 0f       	add	r30, r16
    59c0:	f1 1f       	adc	r31, r17
    59c2:	10 82       	st	Z, r1
    59c4:	2e 96       	adiw	r28, 0x0e	; 14
    59c6:	0f b6       	in	r0, 0x3f	; 63
    59c8:	f8 94       	cli
    59ca:	de bf       	out	0x3e, r29	; 62
    59cc:	0f be       	out	0x3f, r0	; 63
    59ce:	cd bf       	out	0x3d, r28	; 61
    59d0:	df 91       	pop	r29
    59d2:	cf 91       	pop	r28
    59d4:	1f 91       	pop	r17
    59d6:	0f 91       	pop	r16
    59d8:	08 95       	ret

000059da <__ultoa_invert>:
    59da:	fa 01       	movw	r30, r20
    59dc:	aa 27       	eor	r26, r26
    59de:	28 30       	cpi	r18, 0x08	; 8
    59e0:	51 f1       	breq	.+84     	; 0x5a36 <__ultoa_invert+0x5c>
    59e2:	20 31       	cpi	r18, 0x10	; 16
    59e4:	81 f1       	breq	.+96     	; 0x5a46 <__ultoa_invert+0x6c>
    59e6:	e8 94       	clt
    59e8:	6f 93       	push	r22
    59ea:	6e 7f       	andi	r22, 0xFE	; 254
    59ec:	6e 5f       	subi	r22, 0xFE	; 254
    59ee:	7f 4f       	sbci	r23, 0xFF	; 255
    59f0:	8f 4f       	sbci	r24, 0xFF	; 255
    59f2:	9f 4f       	sbci	r25, 0xFF	; 255
    59f4:	af 4f       	sbci	r26, 0xFF	; 255
    59f6:	b1 e0       	ldi	r27, 0x01	; 1
    59f8:	3e d0       	rcall	.+124    	; 0x5a76 <__ultoa_invert+0x9c>
    59fa:	b4 e0       	ldi	r27, 0x04	; 4
    59fc:	3c d0       	rcall	.+120    	; 0x5a76 <__ultoa_invert+0x9c>
    59fe:	67 0f       	add	r22, r23
    5a00:	78 1f       	adc	r23, r24
    5a02:	89 1f       	adc	r24, r25
    5a04:	9a 1f       	adc	r25, r26
    5a06:	a1 1d       	adc	r26, r1
    5a08:	68 0f       	add	r22, r24
    5a0a:	79 1f       	adc	r23, r25
    5a0c:	8a 1f       	adc	r24, r26
    5a0e:	91 1d       	adc	r25, r1
    5a10:	a1 1d       	adc	r26, r1
    5a12:	6a 0f       	add	r22, r26
    5a14:	71 1d       	adc	r23, r1
    5a16:	81 1d       	adc	r24, r1
    5a18:	91 1d       	adc	r25, r1
    5a1a:	a1 1d       	adc	r26, r1
    5a1c:	20 d0       	rcall	.+64     	; 0x5a5e <__ultoa_invert+0x84>
    5a1e:	09 f4       	brne	.+2      	; 0x5a22 <__ultoa_invert+0x48>
    5a20:	68 94       	set
    5a22:	3f 91       	pop	r19
    5a24:	2a e0       	ldi	r18, 0x0A	; 10
    5a26:	26 9f       	mul	r18, r22
    5a28:	11 24       	eor	r1, r1
    5a2a:	30 19       	sub	r19, r0
    5a2c:	30 5d       	subi	r19, 0xD0	; 208
    5a2e:	31 93       	st	Z+, r19
    5a30:	de f6       	brtc	.-74     	; 0x59e8 <__ultoa_invert+0xe>
    5a32:	cf 01       	movw	r24, r30
    5a34:	08 95       	ret
    5a36:	46 2f       	mov	r20, r22
    5a38:	47 70       	andi	r20, 0x07	; 7
    5a3a:	40 5d       	subi	r20, 0xD0	; 208
    5a3c:	41 93       	st	Z+, r20
    5a3e:	b3 e0       	ldi	r27, 0x03	; 3
    5a40:	0f d0       	rcall	.+30     	; 0x5a60 <__ultoa_invert+0x86>
    5a42:	c9 f7       	brne	.-14     	; 0x5a36 <__ultoa_invert+0x5c>
    5a44:	f6 cf       	rjmp	.-20     	; 0x5a32 <__ultoa_invert+0x58>
    5a46:	46 2f       	mov	r20, r22
    5a48:	4f 70       	andi	r20, 0x0F	; 15
    5a4a:	40 5d       	subi	r20, 0xD0	; 208
    5a4c:	4a 33       	cpi	r20, 0x3A	; 58
    5a4e:	18 f0       	brcs	.+6      	; 0x5a56 <__ultoa_invert+0x7c>
    5a50:	49 5d       	subi	r20, 0xD9	; 217
    5a52:	31 fd       	sbrc	r19, 1
    5a54:	40 52       	subi	r20, 0x20	; 32
    5a56:	41 93       	st	Z+, r20
    5a58:	02 d0       	rcall	.+4      	; 0x5a5e <__ultoa_invert+0x84>
    5a5a:	a9 f7       	brne	.-22     	; 0x5a46 <__ultoa_invert+0x6c>
    5a5c:	ea cf       	rjmp	.-44     	; 0x5a32 <__ultoa_invert+0x58>
    5a5e:	b4 e0       	ldi	r27, 0x04	; 4
    5a60:	a6 95       	lsr	r26
    5a62:	97 95       	ror	r25
    5a64:	87 95       	ror	r24
    5a66:	77 95       	ror	r23
    5a68:	67 95       	ror	r22
    5a6a:	ba 95       	dec	r27
    5a6c:	c9 f7       	brne	.-14     	; 0x5a60 <__ultoa_invert+0x86>
    5a6e:	00 97       	sbiw	r24, 0x00	; 0
    5a70:	61 05       	cpc	r22, r1
    5a72:	71 05       	cpc	r23, r1
    5a74:	08 95       	ret
    5a76:	9b 01       	movw	r18, r22
    5a78:	ac 01       	movw	r20, r24
    5a7a:	0a 2e       	mov	r0, r26
    5a7c:	06 94       	lsr	r0
    5a7e:	57 95       	ror	r21
    5a80:	47 95       	ror	r20
    5a82:	37 95       	ror	r19
    5a84:	27 95       	ror	r18
    5a86:	ba 95       	dec	r27
    5a88:	c9 f7       	brne	.-14     	; 0x5a7c <__ultoa_invert+0xa2>
    5a8a:	62 0f       	add	r22, r18
    5a8c:	73 1f       	adc	r23, r19
    5a8e:	84 1f       	adc	r24, r20
    5a90:	95 1f       	adc	r25, r21
    5a92:	a0 1d       	adc	r26, r0
    5a94:	08 95       	ret

00005a96 <putval>:
    5a96:	20 fd       	sbrc	r18, 0
    5a98:	09 c0       	rjmp	.+18     	; 0x5aac <putval+0x16>
    5a9a:	fc 01       	movw	r30, r24
    5a9c:	23 fd       	sbrc	r18, 3
    5a9e:	05 c0       	rjmp	.+10     	; 0x5aaa <putval+0x14>
    5aa0:	22 ff       	sbrs	r18, 2
    5aa2:	02 c0       	rjmp	.+4      	; 0x5aa8 <putval+0x12>
    5aa4:	73 83       	std	Z+3, r23	; 0x03
    5aa6:	62 83       	std	Z+2, r22	; 0x02
    5aa8:	51 83       	std	Z+1, r21	; 0x01
    5aaa:	40 83       	st	Z, r20
    5aac:	08 95       	ret

00005aae <mulacc>:
    5aae:	44 fd       	sbrc	r20, 4
    5ab0:	17 c0       	rjmp	.+46     	; 0x5ae0 <mulacc+0x32>
    5ab2:	46 fd       	sbrc	r20, 6
    5ab4:	17 c0       	rjmp	.+46     	; 0x5ae4 <mulacc+0x36>
    5ab6:	ab 01       	movw	r20, r22
    5ab8:	bc 01       	movw	r22, r24
    5aba:	da 01       	movw	r26, r20
    5abc:	fb 01       	movw	r30, r22
    5abe:	aa 0f       	add	r26, r26
    5ac0:	bb 1f       	adc	r27, r27
    5ac2:	ee 1f       	adc	r30, r30
    5ac4:	ff 1f       	adc	r31, r31
    5ac6:	10 94       	com	r1
    5ac8:	d1 f7       	brne	.-12     	; 0x5abe <mulacc+0x10>
    5aca:	4a 0f       	add	r20, r26
    5acc:	5b 1f       	adc	r21, r27
    5ace:	6e 1f       	adc	r22, r30
    5ad0:	7f 1f       	adc	r23, r31
    5ad2:	cb 01       	movw	r24, r22
    5ad4:	ba 01       	movw	r22, r20
    5ad6:	66 0f       	add	r22, r22
    5ad8:	77 1f       	adc	r23, r23
    5ada:	88 1f       	adc	r24, r24
    5adc:	99 1f       	adc	r25, r25
    5ade:	09 c0       	rjmp	.+18     	; 0x5af2 <mulacc+0x44>
    5ae0:	33 e0       	ldi	r19, 0x03	; 3
    5ae2:	01 c0       	rjmp	.+2      	; 0x5ae6 <mulacc+0x38>
    5ae4:	34 e0       	ldi	r19, 0x04	; 4
    5ae6:	66 0f       	add	r22, r22
    5ae8:	77 1f       	adc	r23, r23
    5aea:	88 1f       	adc	r24, r24
    5aec:	99 1f       	adc	r25, r25
    5aee:	31 50       	subi	r19, 0x01	; 1
    5af0:	d1 f7       	brne	.-12     	; 0x5ae6 <mulacc+0x38>
    5af2:	62 0f       	add	r22, r18
    5af4:	71 1d       	adc	r23, r1
    5af6:	81 1d       	adc	r24, r1
    5af8:	91 1d       	adc	r25, r1
    5afa:	08 95       	ret

00005afc <skip_spaces>:
    5afc:	0f 93       	push	r16
    5afe:	1f 93       	push	r17
    5b00:	cf 93       	push	r28
    5b02:	df 93       	push	r29
    5b04:	8c 01       	movw	r16, r24
    5b06:	c8 01       	movw	r24, r16
    5b08:	0e 94 43 30 	call	0x6086	; 0x6086 <fgetc>
    5b0c:	ec 01       	movw	r28, r24
    5b0e:	97 fd       	sbrc	r25, 7
    5b10:	08 c0       	rjmp	.+16     	; 0x5b22 <skip_spaces+0x26>
    5b12:	0e 94 2f 30 	call	0x605e	; 0x605e <isspace>
    5b16:	89 2b       	or	r24, r25
    5b18:	b1 f7       	brne	.-20     	; 0x5b06 <skip_spaces+0xa>
    5b1a:	b8 01       	movw	r22, r16
    5b1c:	ce 01       	movw	r24, r28
    5b1e:	0e 94 81 30 	call	0x6102	; 0x6102 <ungetc>
    5b22:	ce 01       	movw	r24, r28
    5b24:	df 91       	pop	r29
    5b26:	cf 91       	pop	r28
    5b28:	1f 91       	pop	r17
    5b2a:	0f 91       	pop	r16
    5b2c:	08 95       	ret

00005b2e <conv_int>:
    5b2e:	8f 92       	push	r8
    5b30:	9f 92       	push	r9
    5b32:	af 92       	push	r10
    5b34:	bf 92       	push	r11
    5b36:	ef 92       	push	r14
    5b38:	ff 92       	push	r15
    5b3a:	0f 93       	push	r16
    5b3c:	1f 93       	push	r17
    5b3e:	cf 93       	push	r28
    5b40:	df 93       	push	r29
    5b42:	8c 01       	movw	r16, r24
    5b44:	d6 2f       	mov	r29, r22
    5b46:	7a 01       	movw	r14, r20
    5b48:	b2 2e       	mov	r11, r18
    5b4a:	0e 94 43 30 	call	0x6086	; 0x6086 <fgetc>
    5b4e:	9c 01       	movw	r18, r24
    5b50:	33 27       	eor	r19, r19
    5b52:	2b 32       	cpi	r18, 0x2B	; 43
    5b54:	31 05       	cpc	r19, r1
    5b56:	31 f0       	breq	.+12     	; 0x5b64 <conv_int+0x36>
    5b58:	2d 32       	cpi	r18, 0x2D	; 45
    5b5a:	31 05       	cpc	r19, r1
    5b5c:	61 f4       	brne	.+24     	; 0x5b76 <conv_int+0x48>
    5b5e:	8b 2d       	mov	r24, r11
    5b60:	80 68       	ori	r24, 0x80	; 128
    5b62:	b8 2e       	mov	r11, r24
    5b64:	d1 50       	subi	r29, 0x01	; 1
    5b66:	11 f4       	brne	.+4      	; 0x5b6c <conv_int+0x3e>
    5b68:	80 e0       	ldi	r24, 0x00	; 0
    5b6a:	68 c0       	rjmp	.+208    	; 0x5c3c <conv_int+0x10e>
    5b6c:	c8 01       	movw	r24, r16
    5b6e:	0e 94 43 30 	call	0x6086	; 0x6086 <fgetc>
    5b72:	97 fd       	sbrc	r25, 7
    5b74:	f9 cf       	rjmp	.-14     	; 0x5b68 <conv_int+0x3a>
    5b76:	cb 2d       	mov	r28, r11
    5b78:	cd 7f       	andi	r28, 0xFD	; 253
    5b7a:	2b 2d       	mov	r18, r11
    5b7c:	20 73       	andi	r18, 0x30	; 48
    5b7e:	09 f5       	brne	.+66     	; 0x5bc2 <conv_int+0x94>
    5b80:	80 33       	cpi	r24, 0x30	; 48
    5b82:	f9 f4       	brne	.+62     	; 0x5bc2 <conv_int+0x94>
    5b84:	aa 24       	eor	r10, r10
    5b86:	aa 94       	dec	r10
    5b88:	ad 0e       	add	r10, r29
    5b8a:	09 f4       	brne	.+2      	; 0x5b8e <conv_int+0x60>
    5b8c:	43 c0       	rjmp	.+134    	; 0x5c14 <conv_int+0xe6>
    5b8e:	c8 01       	movw	r24, r16
    5b90:	0e 94 43 30 	call	0x6086	; 0x6086 <fgetc>
    5b94:	97 fd       	sbrc	r25, 7
    5b96:	3e c0       	rjmp	.+124    	; 0x5c14 <conv_int+0xe6>
    5b98:	9c 01       	movw	r18, r24
    5b9a:	2f 7d       	andi	r18, 0xDF	; 223
    5b9c:	33 27       	eor	r19, r19
    5b9e:	28 35       	cpi	r18, 0x58	; 88
    5ba0:	31 05       	cpc	r19, r1
    5ba2:	49 f4       	brne	.+18     	; 0x5bb6 <conv_int+0x88>
    5ba4:	c2 64       	ori	r28, 0x42	; 66
    5ba6:	d2 50       	subi	r29, 0x02	; 2
    5ba8:	a9 f1       	breq	.+106    	; 0x5c14 <conv_int+0xe6>
    5baa:	c8 01       	movw	r24, r16
    5bac:	0e 94 43 30 	call	0x6086	; 0x6086 <fgetc>
    5bb0:	97 ff       	sbrs	r25, 7
    5bb2:	07 c0       	rjmp	.+14     	; 0x5bc2 <conv_int+0x94>
    5bb4:	2f c0       	rjmp	.+94     	; 0x5c14 <conv_int+0xe6>
    5bb6:	b6 fe       	sbrs	r11, 6
    5bb8:	02 c0       	rjmp	.+4      	; 0x5bbe <conv_int+0x90>
    5bba:	c2 60       	ori	r28, 0x02	; 2
    5bbc:	01 c0       	rjmp	.+2      	; 0x5bc0 <conv_int+0x92>
    5bbe:	c2 61       	ori	r28, 0x12	; 18
    5bc0:	da 2d       	mov	r29, r10
    5bc2:	81 2c       	mov	r8, r1
    5bc4:	91 2c       	mov	r9, r1
    5bc6:	54 01       	movw	r10, r8
    5bc8:	20 ed       	ldi	r18, 0xD0	; 208
    5bca:	28 0f       	add	r18, r24
    5bcc:	28 30       	cpi	r18, 0x08	; 8
    5bce:	80 f0       	brcs	.+32     	; 0x5bf0 <conv_int+0xc2>
    5bd0:	c4 ff       	sbrs	r28, 4
    5bd2:	04 c0       	rjmp	.+8      	; 0x5bdc <conv_int+0xae>
    5bd4:	b8 01       	movw	r22, r16
    5bd6:	0e 94 81 30 	call	0x6102	; 0x6102 <ungetc>
    5bda:	19 c0       	rjmp	.+50     	; 0x5c0e <conv_int+0xe0>
    5bdc:	2a 30       	cpi	r18, 0x0A	; 10
    5bde:	40 f0       	brcs	.+16     	; 0x5bf0 <conv_int+0xc2>
    5be0:	c6 ff       	sbrs	r28, 6
    5be2:	f8 cf       	rjmp	.-16     	; 0x5bd4 <conv_int+0xa6>
    5be4:	2f 7d       	andi	r18, 0xDF	; 223
    5be6:	3f ee       	ldi	r19, 0xEF	; 239
    5be8:	32 0f       	add	r19, r18
    5bea:	36 30       	cpi	r19, 0x06	; 6
    5bec:	98 f7       	brcc	.-26     	; 0x5bd4 <conv_int+0xa6>
    5bee:	27 50       	subi	r18, 0x07	; 7
    5bf0:	4c 2f       	mov	r20, r28
    5bf2:	c5 01       	movw	r24, r10
    5bf4:	b4 01       	movw	r22, r8
    5bf6:	0e 94 57 2d 	call	0x5aae	; 0x5aae <mulacc>
    5bfa:	4b 01       	movw	r8, r22
    5bfc:	5c 01       	movw	r10, r24
    5bfe:	c2 60       	ori	r28, 0x02	; 2
    5c00:	d1 50       	subi	r29, 0x01	; 1
    5c02:	59 f0       	breq	.+22     	; 0x5c1a <conv_int+0xec>
    5c04:	c8 01       	movw	r24, r16
    5c06:	0e 94 43 30 	call	0x6086	; 0x6086 <fgetc>
    5c0a:	97 ff       	sbrs	r25, 7
    5c0c:	dd cf       	rjmp	.-70     	; 0x5bc8 <conv_int+0x9a>
    5c0e:	c1 fd       	sbrc	r28, 1
    5c10:	04 c0       	rjmp	.+8      	; 0x5c1a <conv_int+0xec>
    5c12:	aa cf       	rjmp	.-172    	; 0x5b68 <conv_int+0x3a>
    5c14:	81 2c       	mov	r8, r1
    5c16:	91 2c       	mov	r9, r1
    5c18:	54 01       	movw	r10, r8
    5c1a:	c7 ff       	sbrs	r28, 7
    5c1c:	08 c0       	rjmp	.+16     	; 0x5c2e <conv_int+0x100>
    5c1e:	b0 94       	com	r11
    5c20:	a0 94       	com	r10
    5c22:	90 94       	com	r9
    5c24:	80 94       	com	r8
    5c26:	81 1c       	adc	r8, r1
    5c28:	91 1c       	adc	r9, r1
    5c2a:	a1 1c       	adc	r10, r1
    5c2c:	b1 1c       	adc	r11, r1
    5c2e:	2c 2f       	mov	r18, r28
    5c30:	b5 01       	movw	r22, r10
    5c32:	a4 01       	movw	r20, r8
    5c34:	c7 01       	movw	r24, r14
    5c36:	0e 94 4b 2d 	call	0x5a96	; 0x5a96 <putval>
    5c3a:	81 e0       	ldi	r24, 0x01	; 1
    5c3c:	df 91       	pop	r29
    5c3e:	cf 91       	pop	r28
    5c40:	1f 91       	pop	r17
    5c42:	0f 91       	pop	r16
    5c44:	ff 90       	pop	r15
    5c46:	ef 90       	pop	r14
    5c48:	bf 90       	pop	r11
    5c4a:	af 90       	pop	r10
    5c4c:	9f 90       	pop	r9
    5c4e:	8f 90       	pop	r8
    5c50:	08 95       	ret

00005c52 <conv_brk>:
    5c52:	5f 92       	push	r5
    5c54:	6f 92       	push	r6
    5c56:	7f 92       	push	r7
    5c58:	8f 92       	push	r8
    5c5a:	9f 92       	push	r9
    5c5c:	af 92       	push	r10
    5c5e:	bf 92       	push	r11
    5c60:	cf 92       	push	r12
    5c62:	df 92       	push	r13
    5c64:	ef 92       	push	r14
    5c66:	ff 92       	push	r15
    5c68:	0f 93       	push	r16
    5c6a:	1f 93       	push	r17
    5c6c:	cf 93       	push	r28
    5c6e:	df 93       	push	r29
    5c70:	cd b7       	in	r28, 0x3d	; 61
    5c72:	de b7       	in	r29, 0x3e	; 62
    5c74:	a0 97       	sbiw	r28, 0x20	; 32
    5c76:	0f b6       	in	r0, 0x3f	; 63
    5c78:	f8 94       	cli
    5c7a:	de bf       	out	0x3e, r29	; 62
    5c7c:	0f be       	out	0x3f, r0	; 63
    5c7e:	cd bf       	out	0x3d, r28	; 61
    5c80:	5c 01       	movw	r10, r24
    5c82:	96 2e       	mov	r9, r22
    5c84:	7a 01       	movw	r14, r20
    5c86:	f9 01       	movw	r30, r18
    5c88:	8e 01       	movw	r16, r28
    5c8a:	0f 5f       	subi	r16, 0xFF	; 255
    5c8c:	1f 4f       	sbci	r17, 0xFF	; 255
    5c8e:	68 01       	movw	r12, r16
    5c90:	80 e2       	ldi	r24, 0x20	; 32
    5c92:	d8 01       	movw	r26, r16
    5c94:	1d 92       	st	X+, r1
    5c96:	8a 95       	dec	r24
    5c98:	e9 f7       	brne	.-6      	; 0x5c94 <conv_brk+0x42>
    5c9a:	d5 01       	movw	r26, r10
    5c9c:	13 96       	adiw	r26, 0x03	; 3
    5c9e:	8c 90       	ld	r8, X
    5ca0:	80 e0       	ldi	r24, 0x00	; 0
    5ca2:	90 e0       	ldi	r25, 0x00	; 0
    5ca4:	61 2c       	mov	r6, r1
    5ca6:	71 2c       	mov	r7, r1
    5ca8:	30 e0       	ldi	r19, 0x00	; 0
    5caa:	61 e0       	ldi	r22, 0x01	; 1
    5cac:	70 e0       	ldi	r23, 0x00	; 0
    5cae:	83 fc       	sbrc	r8, 3
    5cb0:	25 91       	lpm	r18, Z+
    5cb2:	83 fe       	sbrs	r8, 3
    5cb4:	21 91       	ld	r18, Z+
    5cb6:	8f 01       	movw	r16, r30
    5cb8:	52 2e       	mov	r5, r18
    5cba:	21 11       	cpse	r18, r1
    5cbc:	03 c0       	rjmp	.+6      	; 0x5cc4 <conv_brk+0x72>
    5cbe:	80 e0       	ldi	r24, 0x00	; 0
    5cc0:	90 e0       	ldi	r25, 0x00	; 0
    5cc2:	92 c0       	rjmp	.+292    	; 0x5de8 <conv_brk+0x196>
    5cc4:	2e 35       	cpi	r18, 0x5E	; 94
    5cc6:	11 f4       	brne	.+4      	; 0x5ccc <conv_brk+0x7a>
    5cc8:	00 97       	sbiw	r24, 0x00	; 0
    5cca:	51 f1       	breq	.+84     	; 0x5d20 <conv_brk+0xce>
    5ccc:	43 2f       	mov	r20, r19
    5cce:	50 e0       	ldi	r21, 0x00	; 0
    5cd0:	48 17       	cp	r20, r24
    5cd2:	59 07       	cpc	r21, r25
    5cd4:	3c f4       	brge	.+14     	; 0x5ce4 <conv_brk+0x92>
    5cd6:	2d 35       	cpi	r18, 0x5D	; 93
    5cd8:	59 f1       	breq	.+86     	; 0x5d30 <conv_brk+0xde>
    5cda:	2d 32       	cpi	r18, 0x2D	; 45
    5cdc:	19 f4       	brne	.+6      	; 0x5ce4 <conv_brk+0x92>
    5cde:	77 20       	and	r7, r7
    5ce0:	09 f1       	breq	.+66     	; 0x5d24 <conv_brk+0xd2>
    5ce2:	03 c0       	rjmp	.+6      	; 0x5cea <conv_brk+0x98>
    5ce4:	77 20       	and	r7, r7
    5ce6:	09 f4       	brne	.+2      	; 0x5cea <conv_brk+0x98>
    5ce8:	6a c0       	rjmp	.+212    	; 0x5dbe <conv_brk+0x16c>
    5cea:	45 2d       	mov	r20, r5
    5cec:	46 95       	lsr	r20
    5cee:	46 95       	lsr	r20
    5cf0:	46 95       	lsr	r20
    5cf2:	d6 01       	movw	r26, r12
    5cf4:	a4 0f       	add	r26, r20
    5cf6:	b1 1d       	adc	r27, r1
    5cf8:	45 2d       	mov	r20, r5
    5cfa:	47 70       	andi	r20, 0x07	; 7
    5cfc:	8b 01       	movw	r16, r22
    5cfe:	02 c0       	rjmp	.+4      	; 0x5d04 <conv_brk+0xb2>
    5d00:	00 0f       	add	r16, r16
    5d02:	11 1f       	adc	r17, r17
    5d04:	4a 95       	dec	r20
    5d06:	e2 f7       	brpl	.-8      	; 0x5d00 <conv_brk+0xae>
    5d08:	a8 01       	movw	r20, r16
    5d0a:	5c 91       	ld	r21, X
    5d0c:	45 2b       	or	r20, r21
    5d0e:	4c 93       	st	X, r20
    5d10:	65 14       	cp	r6, r5
    5d12:	59 f0       	breq	.+22     	; 0x5d2a <conv_brk+0xd8>
    5d14:	56 14       	cp	r5, r6
    5d16:	10 f4       	brcc	.+4      	; 0x5d1c <conv_brk+0xca>
    5d18:	53 94       	inc	r5
    5d1a:	e7 cf       	rjmp	.-50     	; 0x5cea <conv_brk+0x98>
    5d1c:	5a 94       	dec	r5
    5d1e:	e5 cf       	rjmp	.-54     	; 0x5cea <conv_brk+0x98>
    5d20:	31 e0       	ldi	r19, 0x01	; 1
    5d22:	04 c0       	rjmp	.+8      	; 0x5d2c <conv_brk+0xda>
    5d24:	77 24       	eor	r7, r7
    5d26:	73 94       	inc	r7
    5d28:	01 c0       	rjmp	.+2      	; 0x5d2c <conv_brk+0xda>
    5d2a:	71 2c       	mov	r7, r1
    5d2c:	01 96       	adiw	r24, 0x01	; 1
    5d2e:	bf cf       	rjmp	.-130    	; 0x5cae <conv_brk+0x5c>
    5d30:	77 20       	and	r7, r7
    5d32:	19 f0       	breq	.+6      	; 0x5d3a <conv_brk+0xe8>
    5d34:	8e 81       	ldd	r24, Y+6	; 0x06
    5d36:	80 62       	ori	r24, 0x20	; 32
    5d38:	8e 83       	std	Y+6, r24	; 0x06
    5d3a:	31 11       	cpse	r19, r1
    5d3c:	03 c0       	rjmp	.+6      	; 0x5d44 <conv_brk+0xf2>
    5d3e:	88 24       	eor	r8, r8
    5d40:	83 94       	inc	r8
    5d42:	17 c0       	rjmp	.+46     	; 0x5d72 <conv_brk+0x120>
    5d44:	f6 01       	movw	r30, r12
    5d46:	9e 01       	movw	r18, r28
    5d48:	2f 5d       	subi	r18, 0xDF	; 223
    5d4a:	3f 4f       	sbci	r19, 0xFF	; 255
    5d4c:	80 81       	ld	r24, Z
    5d4e:	80 95       	com	r24
    5d50:	81 93       	st	Z+, r24
    5d52:	2e 17       	cp	r18, r30
    5d54:	3f 07       	cpc	r19, r31
    5d56:	d1 f7       	brne	.-12     	; 0x5d4c <conv_brk+0xfa>
    5d58:	f2 cf       	rjmp	.-28     	; 0x5d3e <conv_brk+0xec>
    5d5a:	e1 14       	cp	r14, r1
    5d5c:	f1 04       	cpc	r15, r1
    5d5e:	29 f0       	breq	.+10     	; 0x5d6a <conv_brk+0x118>
    5d60:	d7 01       	movw	r26, r14
    5d62:	8c 93       	st	X, r24
    5d64:	f7 01       	movw	r30, r14
    5d66:	31 96       	adiw	r30, 0x01	; 1
    5d68:	7f 01       	movw	r14, r30
    5d6a:	9a 94       	dec	r9
    5d6c:	81 2c       	mov	r8, r1
    5d6e:	99 20       	and	r9, r9
    5d70:	f9 f0       	breq	.+62     	; 0x5db0 <conv_brk+0x15e>
    5d72:	c5 01       	movw	r24, r10
    5d74:	0e 94 43 30 	call	0x6086	; 0x6086 <fgetc>
    5d78:	97 fd       	sbrc	r25, 7
    5d7a:	18 c0       	rjmp	.+48     	; 0x5dac <conv_brk+0x15a>
    5d7c:	fc 01       	movw	r30, r24
    5d7e:	ff 27       	eor	r31, r31
    5d80:	23 e0       	ldi	r18, 0x03	; 3
    5d82:	f5 95       	asr	r31
    5d84:	e7 95       	ror	r30
    5d86:	2a 95       	dec	r18
    5d88:	e1 f7       	brne	.-8      	; 0x5d82 <conv_brk+0x130>
    5d8a:	ec 0d       	add	r30, r12
    5d8c:	fd 1d       	adc	r31, r13
    5d8e:	20 81       	ld	r18, Z
    5d90:	30 e0       	ldi	r19, 0x00	; 0
    5d92:	ac 01       	movw	r20, r24
    5d94:	47 70       	andi	r20, 0x07	; 7
    5d96:	55 27       	eor	r21, r21
    5d98:	02 c0       	rjmp	.+4      	; 0x5d9e <conv_brk+0x14c>
    5d9a:	35 95       	asr	r19
    5d9c:	27 95       	ror	r18
    5d9e:	4a 95       	dec	r20
    5da0:	e2 f7       	brpl	.-8      	; 0x5d9a <conv_brk+0x148>
    5da2:	20 fd       	sbrc	r18, 0
    5da4:	da cf       	rjmp	.-76     	; 0x5d5a <conv_brk+0x108>
    5da6:	b5 01       	movw	r22, r10
    5da8:	0e 94 81 30 	call	0x6102	; 0x6102 <ungetc>
    5dac:	81 10       	cpse	r8, r1
    5dae:	87 cf       	rjmp	.-242    	; 0x5cbe <conv_brk+0x6c>
    5db0:	e1 14       	cp	r14, r1
    5db2:	f1 04       	cpc	r15, r1
    5db4:	11 f0       	breq	.+4      	; 0x5dba <conv_brk+0x168>
    5db6:	d7 01       	movw	r26, r14
    5db8:	1c 92       	st	X, r1
    5dba:	c8 01       	movw	r24, r16
    5dbc:	15 c0       	rjmp	.+42     	; 0x5de8 <conv_brk+0x196>
    5dbe:	42 2f       	mov	r20, r18
    5dc0:	46 95       	lsr	r20
    5dc2:	46 95       	lsr	r20
    5dc4:	46 95       	lsr	r20
    5dc6:	d6 01       	movw	r26, r12
    5dc8:	a4 0f       	add	r26, r20
    5dca:	b1 1d       	adc	r27, r1
    5dcc:	42 2f       	mov	r20, r18
    5dce:	47 70       	andi	r20, 0x07	; 7
    5dd0:	8b 01       	movw	r16, r22
    5dd2:	02 c0       	rjmp	.+4      	; 0x5dd8 <conv_brk+0x186>
    5dd4:	00 0f       	add	r16, r16
    5dd6:	11 1f       	adc	r17, r17
    5dd8:	4a 95       	dec	r20
    5dda:	e2 f7       	brpl	.-8      	; 0x5dd4 <conv_brk+0x182>
    5ddc:	a8 01       	movw	r20, r16
    5dde:	5c 91       	ld	r21, X
    5de0:	45 2b       	or	r20, r21
    5de2:	4c 93       	st	X, r20
    5de4:	62 2e       	mov	r6, r18
    5de6:	a2 cf       	rjmp	.-188    	; 0x5d2c <conv_brk+0xda>
    5de8:	a0 96       	adiw	r28, 0x20	; 32
    5dea:	0f b6       	in	r0, 0x3f	; 63
    5dec:	f8 94       	cli
    5dee:	de bf       	out	0x3e, r29	; 62
    5df0:	0f be       	out	0x3f, r0	; 63
    5df2:	cd bf       	out	0x3d, r28	; 61
    5df4:	df 91       	pop	r29
    5df6:	cf 91       	pop	r28
    5df8:	1f 91       	pop	r17
    5dfa:	0f 91       	pop	r16
    5dfc:	ff 90       	pop	r15
    5dfe:	ef 90       	pop	r14
    5e00:	df 90       	pop	r13
    5e02:	cf 90       	pop	r12
    5e04:	bf 90       	pop	r11
    5e06:	af 90       	pop	r10
    5e08:	9f 90       	pop	r9
    5e0a:	8f 90       	pop	r8
    5e0c:	7f 90       	pop	r7
    5e0e:	6f 90       	pop	r6
    5e10:	5f 90       	pop	r5
    5e12:	08 95       	ret

00005e14 <vfscanf>:
    5e14:	5f 92       	push	r5
    5e16:	6f 92       	push	r6
    5e18:	7f 92       	push	r7
    5e1a:	8f 92       	push	r8
    5e1c:	9f 92       	push	r9
    5e1e:	af 92       	push	r10
    5e20:	bf 92       	push	r11
    5e22:	cf 92       	push	r12
    5e24:	df 92       	push	r13
    5e26:	ef 92       	push	r14
    5e28:	ff 92       	push	r15
    5e2a:	0f 93       	push	r16
    5e2c:	1f 93       	push	r17
    5e2e:	cf 93       	push	r28
    5e30:	df 93       	push	r29
    5e32:	6c 01       	movw	r12, r24
    5e34:	eb 01       	movw	r28, r22
    5e36:	5a 01       	movw	r10, r20
    5e38:	fc 01       	movw	r30, r24
    5e3a:	17 82       	std	Z+7, r1	; 0x07
    5e3c:	16 82       	std	Z+6, r1	; 0x06
    5e3e:	51 2c       	mov	r5, r1
    5e40:	f6 01       	movw	r30, r12
    5e42:	e3 80       	ldd	r14, Z+3	; 0x03
    5e44:	fe 01       	movw	r30, r28
    5e46:	e3 fc       	sbrc	r14, 3
    5e48:	85 91       	lpm	r24, Z+
    5e4a:	e3 fe       	sbrs	r14, 3
    5e4c:	81 91       	ld	r24, Z+
    5e4e:	18 2f       	mov	r17, r24
    5e50:	ef 01       	movw	r28, r30
    5e52:	88 23       	and	r24, r24
    5e54:	09 f4       	brne	.+2      	; 0x5e58 <vfscanf+0x44>
    5e56:	ee c0       	rjmp	.+476    	; 0x6034 <vfscanf+0x220>
    5e58:	90 e0       	ldi	r25, 0x00	; 0
    5e5a:	0e 94 2f 30 	call	0x605e	; 0x605e <isspace>
    5e5e:	89 2b       	or	r24, r25
    5e60:	21 f0       	breq	.+8      	; 0x5e6a <vfscanf+0x56>
    5e62:	c6 01       	movw	r24, r12
    5e64:	0e 94 7e 2d 	call	0x5afc	; 0x5afc <skip_spaces>
    5e68:	eb cf       	rjmp	.-42     	; 0x5e40 <vfscanf+0x2c>
    5e6a:	15 32       	cpi	r17, 0x25	; 37
    5e6c:	41 f4       	brne	.+16     	; 0x5e7e <vfscanf+0x6a>
    5e6e:	fe 01       	movw	r30, r28
    5e70:	e3 fc       	sbrc	r14, 3
    5e72:	15 91       	lpm	r17, Z+
    5e74:	e3 fe       	sbrs	r14, 3
    5e76:	11 91       	ld	r17, Z+
    5e78:	ef 01       	movw	r28, r30
    5e7a:	15 32       	cpi	r17, 0x25	; 37
    5e7c:	81 f4       	brne	.+32     	; 0x5e9e <vfscanf+0x8a>
    5e7e:	c6 01       	movw	r24, r12
    5e80:	0e 94 43 30 	call	0x6086	; 0x6086 <fgetc>
    5e84:	97 fd       	sbrc	r25, 7
    5e86:	d4 c0       	rjmp	.+424    	; 0x6030 <vfscanf+0x21c>
    5e88:	41 2f       	mov	r20, r17
    5e8a:	50 e0       	ldi	r21, 0x00	; 0
    5e8c:	9c 01       	movw	r18, r24
    5e8e:	33 27       	eor	r19, r19
    5e90:	24 17       	cp	r18, r20
    5e92:	35 07       	cpc	r19, r21
    5e94:	a9 f2       	breq	.-86     	; 0x5e40 <vfscanf+0x2c>
    5e96:	b6 01       	movw	r22, r12
    5e98:	0e 94 81 30 	call	0x6102	; 0x6102 <ungetc>
    5e9c:	cb c0       	rjmp	.+406    	; 0x6034 <vfscanf+0x220>
    5e9e:	1a 32       	cpi	r17, 0x2A	; 42
    5ea0:	39 f4       	brne	.+14     	; 0x5eb0 <vfscanf+0x9c>
    5ea2:	e3 fc       	sbrc	r14, 3
    5ea4:	15 91       	lpm	r17, Z+
    5ea6:	e3 fe       	sbrs	r14, 3
    5ea8:	11 91       	ld	r17, Z+
    5eaa:	ef 01       	movw	r28, r30
    5eac:	01 e0       	ldi	r16, 0x01	; 1
    5eae:	01 c0       	rjmp	.+2      	; 0x5eb2 <vfscanf+0x9e>
    5eb0:	00 e0       	ldi	r16, 0x00	; 0
    5eb2:	f1 2c       	mov	r15, r1
    5eb4:	20 ed       	ldi	r18, 0xD0	; 208
    5eb6:	21 0f       	add	r18, r17
    5eb8:	2a 30       	cpi	r18, 0x0A	; 10
    5eba:	80 f4       	brcc	.+32     	; 0x5edc <vfscanf+0xc8>
    5ebc:	02 60       	ori	r16, 0x02	; 2
    5ebe:	6f 2d       	mov	r22, r15
    5ec0:	70 e0       	ldi	r23, 0x00	; 0
    5ec2:	80 e0       	ldi	r24, 0x00	; 0
    5ec4:	90 e0       	ldi	r25, 0x00	; 0
    5ec6:	40 e2       	ldi	r20, 0x20	; 32
    5ec8:	0e 94 57 2d 	call	0x5aae	; 0x5aae <mulacc>
    5ecc:	f6 2e       	mov	r15, r22
    5ece:	fe 01       	movw	r30, r28
    5ed0:	e3 fc       	sbrc	r14, 3
    5ed2:	15 91       	lpm	r17, Z+
    5ed4:	e3 fe       	sbrs	r14, 3
    5ed6:	11 91       	ld	r17, Z+
    5ed8:	ef 01       	movw	r28, r30
    5eda:	ec cf       	rjmp	.-40     	; 0x5eb4 <vfscanf+0xa0>
    5edc:	01 ff       	sbrs	r16, 1
    5ede:	03 c0       	rjmp	.+6      	; 0x5ee6 <vfscanf+0xd2>
    5ee0:	f1 10       	cpse	r15, r1
    5ee2:	03 c0       	rjmp	.+6      	; 0x5eea <vfscanf+0xd6>
    5ee4:	a7 c0       	rjmp	.+334    	; 0x6034 <vfscanf+0x220>
    5ee6:	ff 24       	eor	r15, r15
    5ee8:	fa 94       	dec	r15
    5eea:	18 36       	cpi	r17, 0x68	; 104
    5eec:	19 f0       	breq	.+6      	; 0x5ef4 <vfscanf+0xe0>
    5eee:	1c 36       	cpi	r17, 0x6C	; 108
    5ef0:	51 f0       	breq	.+20     	; 0x5f06 <vfscanf+0xf2>
    5ef2:	10 c0       	rjmp	.+32     	; 0x5f14 <vfscanf+0x100>
    5ef4:	fe 01       	movw	r30, r28
    5ef6:	e3 fc       	sbrc	r14, 3
    5ef8:	15 91       	lpm	r17, Z+
    5efa:	e3 fe       	sbrs	r14, 3
    5efc:	11 91       	ld	r17, Z+
    5efe:	ef 01       	movw	r28, r30
    5f00:	18 36       	cpi	r17, 0x68	; 104
    5f02:	41 f4       	brne	.+16     	; 0x5f14 <vfscanf+0x100>
    5f04:	08 60       	ori	r16, 0x08	; 8
    5f06:	04 60       	ori	r16, 0x04	; 4
    5f08:	fe 01       	movw	r30, r28
    5f0a:	e3 fc       	sbrc	r14, 3
    5f0c:	15 91       	lpm	r17, Z+
    5f0e:	e3 fe       	sbrs	r14, 3
    5f10:	11 91       	ld	r17, Z+
    5f12:	ef 01       	movw	r28, r30
    5f14:	11 23       	and	r17, r17
    5f16:	09 f4       	brne	.+2      	; 0x5f1a <vfscanf+0x106>
    5f18:	8d c0       	rjmp	.+282    	; 0x6034 <vfscanf+0x220>
    5f1a:	61 2f       	mov	r22, r17
    5f1c:	70 e0       	ldi	r23, 0x00	; 0
    5f1e:	8e e8       	ldi	r24, 0x8E	; 142
    5f20:	91 e0       	ldi	r25, 0x01	; 1
    5f22:	0e 94 38 30 	call	0x6070	; 0x6070 <strchr_P>
    5f26:	89 2b       	or	r24, r25
    5f28:	09 f4       	brne	.+2      	; 0x5f2c <vfscanf+0x118>
    5f2a:	84 c0       	rjmp	.+264    	; 0x6034 <vfscanf+0x220>
    5f2c:	00 fd       	sbrc	r16, 0
    5f2e:	07 c0       	rjmp	.+14     	; 0x5f3e <vfscanf+0x12a>
    5f30:	f5 01       	movw	r30, r10
    5f32:	80 80       	ld	r8, Z
    5f34:	91 80       	ldd	r9, Z+1	; 0x01
    5f36:	c5 01       	movw	r24, r10
    5f38:	02 96       	adiw	r24, 0x02	; 2
    5f3a:	5c 01       	movw	r10, r24
    5f3c:	02 c0       	rjmp	.+4      	; 0x5f42 <vfscanf+0x12e>
    5f3e:	81 2c       	mov	r8, r1
    5f40:	91 2c       	mov	r9, r1
    5f42:	1e 36       	cpi	r17, 0x6E	; 110
    5f44:	51 f4       	brne	.+20     	; 0x5f5a <vfscanf+0x146>
    5f46:	f6 01       	movw	r30, r12
    5f48:	46 81       	ldd	r20, Z+6	; 0x06
    5f4a:	57 81       	ldd	r21, Z+7	; 0x07
    5f4c:	60 e0       	ldi	r22, 0x00	; 0
    5f4e:	70 e0       	ldi	r23, 0x00	; 0
    5f50:	20 2f       	mov	r18, r16
    5f52:	c4 01       	movw	r24, r8
    5f54:	0e 94 4b 2d 	call	0x5a96	; 0x5a96 <putval>
    5f58:	73 cf       	rjmp	.-282    	; 0x5e40 <vfscanf+0x2c>
    5f5a:	13 36       	cpi	r17, 0x63	; 99
    5f5c:	a9 f4       	brne	.+42     	; 0x5f88 <vfscanf+0x174>
    5f5e:	01 fd       	sbrc	r16, 1
    5f60:	02 c0       	rjmp	.+4      	; 0x5f66 <vfscanf+0x152>
    5f62:	ff 24       	eor	r15, r15
    5f64:	f3 94       	inc	r15
    5f66:	c6 01       	movw	r24, r12
    5f68:	0e 94 43 30 	call	0x6086	; 0x6086 <fgetc>
    5f6c:	97 fd       	sbrc	r25, 7
    5f6e:	60 c0       	rjmp	.+192    	; 0x6030 <vfscanf+0x21c>
    5f70:	81 14       	cp	r8, r1
    5f72:	91 04       	cpc	r9, r1
    5f74:	29 f0       	breq	.+10     	; 0x5f80 <vfscanf+0x16c>
    5f76:	f4 01       	movw	r30, r8
    5f78:	80 83       	st	Z, r24
    5f7a:	c4 01       	movw	r24, r8
    5f7c:	01 96       	adiw	r24, 0x01	; 1
    5f7e:	4c 01       	movw	r8, r24
    5f80:	fa 94       	dec	r15
    5f82:	f1 10       	cpse	r15, r1
    5f84:	f0 cf       	rjmp	.-32     	; 0x5f66 <vfscanf+0x152>
    5f86:	50 c0       	rjmp	.+160    	; 0x6028 <vfscanf+0x214>
    5f88:	1b 35       	cpi	r17, 0x5B	; 91
    5f8a:	59 f4       	brne	.+22     	; 0x5fa2 <vfscanf+0x18e>
    5f8c:	9e 01       	movw	r18, r28
    5f8e:	a4 01       	movw	r20, r8
    5f90:	6f 2d       	mov	r22, r15
    5f92:	c6 01       	movw	r24, r12
    5f94:	0e 94 29 2e 	call	0x5c52	; 0x5c52 <conv_brk>
    5f98:	ec 01       	movw	r28, r24
    5f9a:	89 2b       	or	r24, r25
    5f9c:	09 f0       	breq	.+2      	; 0x5fa0 <vfscanf+0x18c>
    5f9e:	44 c0       	rjmp	.+136    	; 0x6028 <vfscanf+0x214>
    5fa0:	3e c0       	rjmp	.+124    	; 0x601e <vfscanf+0x20a>
    5fa2:	c6 01       	movw	r24, r12
    5fa4:	0e 94 7e 2d 	call	0x5afc	; 0x5afc <skip_spaces>
    5fa8:	97 fd       	sbrc	r25, 7
    5faa:	42 c0       	rjmp	.+132    	; 0x6030 <vfscanf+0x21c>
    5fac:	1f 36       	cpi	r17, 0x6F	; 111
    5fae:	61 f1       	breq	.+88     	; 0x6008 <vfscanf+0x1f4>
    5fb0:	28 f4       	brcc	.+10     	; 0x5fbc <vfscanf+0x1a8>
    5fb2:	14 36       	cpi	r17, 0x64	; 100
    5fb4:	39 f1       	breq	.+78     	; 0x6004 <vfscanf+0x1f0>
    5fb6:	19 36       	cpi	r17, 0x69	; 105
    5fb8:	51 f1       	breq	.+84     	; 0x600e <vfscanf+0x1fa>
    5fba:	28 c0       	rjmp	.+80     	; 0x600c <vfscanf+0x1f8>
    5fbc:	13 37       	cpi	r17, 0x73	; 115
    5fbe:	71 f0       	breq	.+28     	; 0x5fdc <vfscanf+0x1c8>
    5fc0:	15 37       	cpi	r17, 0x75	; 117
    5fc2:	01 f1       	breq	.+64     	; 0x6004 <vfscanf+0x1f0>
    5fc4:	23 c0       	rjmp	.+70     	; 0x600c <vfscanf+0x1f8>
    5fc6:	81 14       	cp	r8, r1
    5fc8:	91 04       	cpc	r9, r1
    5fca:	29 f0       	breq	.+10     	; 0x5fd6 <vfscanf+0x1c2>
    5fcc:	f4 01       	movw	r30, r8
    5fce:	60 82       	st	Z, r6
    5fd0:	c4 01       	movw	r24, r8
    5fd2:	01 96       	adiw	r24, 0x01	; 1
    5fd4:	4c 01       	movw	r8, r24
    5fd6:	fa 94       	dec	r15
    5fd8:	ff 20       	and	r15, r15
    5fda:	71 f0       	breq	.+28     	; 0x5ff8 <vfscanf+0x1e4>
    5fdc:	c6 01       	movw	r24, r12
    5fde:	0e 94 43 30 	call	0x6086	; 0x6086 <fgetc>
    5fe2:	3c 01       	movw	r6, r24
    5fe4:	97 fd       	sbrc	r25, 7
    5fe6:	08 c0       	rjmp	.+16     	; 0x5ff8 <vfscanf+0x1e4>
    5fe8:	0e 94 2f 30 	call	0x605e	; 0x605e <isspace>
    5fec:	89 2b       	or	r24, r25
    5fee:	59 f3       	breq	.-42     	; 0x5fc6 <vfscanf+0x1b2>
    5ff0:	b6 01       	movw	r22, r12
    5ff2:	c3 01       	movw	r24, r6
    5ff4:	0e 94 81 30 	call	0x6102	; 0x6102 <ungetc>
    5ff8:	81 14       	cp	r8, r1
    5ffa:	91 04       	cpc	r9, r1
    5ffc:	a9 f0       	breq	.+42     	; 0x6028 <vfscanf+0x214>
    5ffe:	f4 01       	movw	r30, r8
    6000:	10 82       	st	Z, r1
    6002:	12 c0       	rjmp	.+36     	; 0x6028 <vfscanf+0x214>
    6004:	00 62       	ori	r16, 0x20	; 32
    6006:	03 c0       	rjmp	.+6      	; 0x600e <vfscanf+0x1fa>
    6008:	00 61       	ori	r16, 0x10	; 16
    600a:	01 c0       	rjmp	.+2      	; 0x600e <vfscanf+0x1fa>
    600c:	00 64       	ori	r16, 0x40	; 64
    600e:	20 2f       	mov	r18, r16
    6010:	a4 01       	movw	r20, r8
    6012:	6f 2d       	mov	r22, r15
    6014:	c6 01       	movw	r24, r12
    6016:	0e 94 97 2d 	call	0x5b2e	; 0x5b2e <conv_int>
    601a:	81 11       	cpse	r24, r1
    601c:	05 c0       	rjmp	.+10     	; 0x6028 <vfscanf+0x214>
    601e:	f6 01       	movw	r30, r12
    6020:	83 81       	ldd	r24, Z+3	; 0x03
    6022:	80 73       	andi	r24, 0x30	; 48
    6024:	29 f4       	brne	.+10     	; 0x6030 <vfscanf+0x21c>
    6026:	06 c0       	rjmp	.+12     	; 0x6034 <vfscanf+0x220>
    6028:	00 fd       	sbrc	r16, 0
    602a:	0a cf       	rjmp	.-492    	; 0x5e40 <vfscanf+0x2c>
    602c:	53 94       	inc	r5
    602e:	08 cf       	rjmp	.-496    	; 0x5e40 <vfscanf+0x2c>
    6030:	55 20       	and	r5, r5
    6032:	19 f0       	breq	.+6      	; 0x603a <vfscanf+0x226>
    6034:	85 2d       	mov	r24, r5
    6036:	90 e0       	ldi	r25, 0x00	; 0
    6038:	02 c0       	rjmp	.+4      	; 0x603e <vfscanf+0x22a>
    603a:	8f ef       	ldi	r24, 0xFF	; 255
    603c:	9f ef       	ldi	r25, 0xFF	; 255
    603e:	df 91       	pop	r29
    6040:	cf 91       	pop	r28
    6042:	1f 91       	pop	r17
    6044:	0f 91       	pop	r16
    6046:	ff 90       	pop	r15
    6048:	ef 90       	pop	r14
    604a:	df 90       	pop	r13
    604c:	cf 90       	pop	r12
    604e:	bf 90       	pop	r11
    6050:	af 90       	pop	r10
    6052:	9f 90       	pop	r9
    6054:	8f 90       	pop	r8
    6056:	7f 90       	pop	r7
    6058:	6f 90       	pop	r6
    605a:	5f 90       	pop	r5
    605c:	08 95       	ret

0000605e <isspace>:
    605e:	91 11       	cpse	r25, r1
    6060:	0c 94 9a 30 	jmp	0x6134	; 0x6134 <__ctype_isfalse>
    6064:	80 32       	cpi	r24, 0x20	; 32
    6066:	19 f0       	breq	.+6      	; 0x606e <isspace+0x10>
    6068:	89 50       	subi	r24, 0x09	; 9
    606a:	85 50       	subi	r24, 0x05	; 5
    606c:	c8 f7       	brcc	.-14     	; 0x6060 <isspace+0x2>
    606e:	08 95       	ret

00006070 <strchr_P>:
    6070:	fc 01       	movw	r30, r24
    6072:	05 90       	lpm	r0, Z+
    6074:	06 16       	cp	r0, r22
    6076:	21 f0       	breq	.+8      	; 0x6080 <strchr_P+0x10>
    6078:	00 20       	and	r0, r0
    607a:	d9 f7       	brne	.-10     	; 0x6072 <strchr_P+0x2>
    607c:	c0 01       	movw	r24, r0
    607e:	08 95       	ret
    6080:	31 97       	sbiw	r30, 0x01	; 1
    6082:	cf 01       	movw	r24, r30
    6084:	08 95       	ret

00006086 <fgetc>:
    6086:	cf 93       	push	r28
    6088:	df 93       	push	r29
    608a:	ec 01       	movw	r28, r24
    608c:	2b 81       	ldd	r18, Y+3	; 0x03
    608e:	20 ff       	sbrs	r18, 0
    6090:	33 c0       	rjmp	.+102    	; 0x60f8 <fgetc+0x72>
    6092:	26 ff       	sbrs	r18, 6
    6094:	0a c0       	rjmp	.+20     	; 0x60aa <fgetc+0x24>
    6096:	2f 7b       	andi	r18, 0xBF	; 191
    6098:	2b 83       	std	Y+3, r18	; 0x03
    609a:	8e 81       	ldd	r24, Y+6	; 0x06
    609c:	9f 81       	ldd	r25, Y+7	; 0x07
    609e:	01 96       	adiw	r24, 0x01	; 1
    60a0:	9f 83       	std	Y+7, r25	; 0x07
    60a2:	8e 83       	std	Y+6, r24	; 0x06
    60a4:	8a 81       	ldd	r24, Y+2	; 0x02
    60a6:	90 e0       	ldi	r25, 0x00	; 0
    60a8:	29 c0       	rjmp	.+82     	; 0x60fc <fgetc+0x76>
    60aa:	22 ff       	sbrs	r18, 2
    60ac:	0f c0       	rjmp	.+30     	; 0x60cc <fgetc+0x46>
    60ae:	e8 81       	ld	r30, Y
    60b0:	f9 81       	ldd	r31, Y+1	; 0x01
    60b2:	80 81       	ld	r24, Z
    60b4:	08 2e       	mov	r0, r24
    60b6:	00 0c       	add	r0, r0
    60b8:	99 0b       	sbc	r25, r25
    60ba:	00 97       	sbiw	r24, 0x00	; 0
    60bc:	19 f4       	brne	.+6      	; 0x60c4 <fgetc+0x3e>
    60be:	20 62       	ori	r18, 0x20	; 32
    60c0:	2b 83       	std	Y+3, r18	; 0x03
    60c2:	1a c0       	rjmp	.+52     	; 0x60f8 <fgetc+0x72>
    60c4:	31 96       	adiw	r30, 0x01	; 1
    60c6:	f9 83       	std	Y+1, r31	; 0x01
    60c8:	e8 83       	st	Y, r30
    60ca:	0e c0       	rjmp	.+28     	; 0x60e8 <fgetc+0x62>
    60cc:	ea 85       	ldd	r30, Y+10	; 0x0a
    60ce:	fb 85       	ldd	r31, Y+11	; 0x0b
    60d0:	09 95       	icall
    60d2:	97 ff       	sbrs	r25, 7
    60d4:	09 c0       	rjmp	.+18     	; 0x60e8 <fgetc+0x62>
    60d6:	2b 81       	ldd	r18, Y+3	; 0x03
    60d8:	01 96       	adiw	r24, 0x01	; 1
    60da:	11 f0       	breq	.+4      	; 0x60e0 <fgetc+0x5a>
    60dc:	80 e2       	ldi	r24, 0x20	; 32
    60de:	01 c0       	rjmp	.+2      	; 0x60e2 <fgetc+0x5c>
    60e0:	80 e1       	ldi	r24, 0x10	; 16
    60e2:	82 2b       	or	r24, r18
    60e4:	8b 83       	std	Y+3, r24	; 0x03
    60e6:	08 c0       	rjmp	.+16     	; 0x60f8 <fgetc+0x72>
    60e8:	2e 81       	ldd	r18, Y+6	; 0x06
    60ea:	3f 81       	ldd	r19, Y+7	; 0x07
    60ec:	2f 5f       	subi	r18, 0xFF	; 255
    60ee:	3f 4f       	sbci	r19, 0xFF	; 255
    60f0:	3f 83       	std	Y+7, r19	; 0x07
    60f2:	2e 83       	std	Y+6, r18	; 0x06
    60f4:	99 27       	eor	r25, r25
    60f6:	02 c0       	rjmp	.+4      	; 0x60fc <fgetc+0x76>
    60f8:	8f ef       	ldi	r24, 0xFF	; 255
    60fa:	9f ef       	ldi	r25, 0xFF	; 255
    60fc:	df 91       	pop	r29
    60fe:	cf 91       	pop	r28
    6100:	08 95       	ret

00006102 <ungetc>:
    6102:	fb 01       	movw	r30, r22
    6104:	23 81       	ldd	r18, Z+3	; 0x03
    6106:	20 ff       	sbrs	r18, 0
    6108:	12 c0       	rjmp	.+36     	; 0x612e <ungetc+0x2c>
    610a:	26 fd       	sbrc	r18, 6
    610c:	10 c0       	rjmp	.+32     	; 0x612e <ungetc+0x2c>
    610e:	8f 3f       	cpi	r24, 0xFF	; 255
    6110:	3f ef       	ldi	r19, 0xFF	; 255
    6112:	93 07       	cpc	r25, r19
    6114:	61 f0       	breq	.+24     	; 0x612e <ungetc+0x2c>
    6116:	82 83       	std	Z+2, r24	; 0x02
    6118:	2f 7d       	andi	r18, 0xDF	; 223
    611a:	20 64       	ori	r18, 0x40	; 64
    611c:	23 83       	std	Z+3, r18	; 0x03
    611e:	26 81       	ldd	r18, Z+6	; 0x06
    6120:	37 81       	ldd	r19, Z+7	; 0x07
    6122:	21 50       	subi	r18, 0x01	; 1
    6124:	31 09       	sbc	r19, r1
    6126:	37 83       	std	Z+7, r19	; 0x07
    6128:	26 83       	std	Z+6, r18	; 0x06
    612a:	99 27       	eor	r25, r25
    612c:	08 95       	ret
    612e:	8f ef       	ldi	r24, 0xFF	; 255
    6130:	9f ef       	ldi	r25, 0xFF	; 255
    6132:	08 95       	ret

00006134 <__ctype_isfalse>:
    6134:	99 27       	eor	r25, r25
    6136:	88 27       	eor	r24, r24

00006138 <__ctype_istrue>:
    6138:	08 95       	ret

0000613a <_exit>:
    613a:	f8 94       	cli

0000613c <__stop_program>:
    613c:	ff cf       	rjmp	.-2      	; 0x613c <__stop_program>
